{"version":3,"sources":["webpack:///src/app/views/masters/masters.module.ts","webpack:///src/app/views/masters/masters.component.ts","webpack:///src/app/views/masters/masters.component.html","webpack:///src/app/views/masters/masters-routing.module.ts"],"names":["MastersModule","imports","withComponents","forRoot","declarations","mastersComponent","dataservice","route","router","fb","toastr","columnDefs","loading","disableButton","btnLoading","count","Villages","LGA","Areas","States","Markets","Crops","file","frameworkComponents","statusRenderer","stateForm","group","state","required","lgaForm","lga","areaForm","area","PostalCode","marketForm","market","cropForm","crop","Image","villageForm","village","selectedYear","Date","getFullYear","years","filter","selectedRows","context","componentParent","rowSelection","console","log","url","getVillages","valueChanges","subscribe","result","data","villages","rowData","getAreas","areas","getLGAs","lgas","getStates","states","getMarkets","markets","getCrops","crops","masterUrl","resp","downloadMaster","body","status","success","message","window","open","apiUrl","path","error","stateid","lgaid","areaid","params","gridApi","api","gridColumnApi","columnApi","sizeColumnsToFit","event","alert","getSelectedRows","length","attributes","Name","villageModal","show","Number","id","areaModal","lgaModal","stateModal","marketModal","cropModal","imageUrl","i","target","files","push","value","UpdateState","updateState","deselectAll","hide","reset","errors","extensions","name","AddStates","createState","UpdateLGA","updateLga","AddLGA","createLga","UpdateArea","updateArea","AddArea","createArea","UpdateMarket","updateMarket","AddMarket","createMarket","upload","response","UpdateCrop","updateCrop","AddCrop","createCrop","Updatevillage","updateVillage","Addvillage","createVillage","deleteVillage","deleteModal","deleteArea","deleteLGA","deleteLga","deleteState","deleteMarket","deleteCrop","template","routes","children","redirectTo","component","roles","title","mastersRoutingModule","forChild","exports"],"mappings":"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","file":"views-masters-masters-module-es5.js","sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { mastersComponent } from './masters.component';\r\n\r\n// Dropdowns Component\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\n// Buttons Routing\r\nimport { mastersRoutingModule } from './masters-routing.module';\r\n\r\n// Angular\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { ActionRenderer } from '../../utils/StatusRenderer';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TabsModule,\r\n    ReactiveFormsModule,\r\n    AgGridModule.withComponents([]),\r\n    mastersRoutingModule,\r\n    BsDropdownModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    mastersComponent,\r\n    ActionRenderer\r\n  ]\r\n})\r\nexport class MastersModule { }\r\n","import { Component, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { DataService } from \"../../data.service\";\nimport { ActionRenderer } from \"../../utils/StatusRenderer\";\n\nimport {\n  VillageMasterColumn,\n  AreaMasterColumn,\n  LGAMasterColumn,\n  StateMasterColumn,\n  MarketMasterColumn,\n  CropMasterColumn,\n} from \"../../constants/columnMetadata\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\nimport { environment } from \"../../../environments/environment\";\n\n@Component({\n  templateUrl: \"masters.component.html\",\n})\nexport class mastersComponent {\n  private gridApi;\n  private gridColumnApi;\n  rowSelection: string;\n  public context: any;\n  public rowData: any[];\n  public columnDefs: any[] = [];\n\n  constructor(\n    public dataservice: DataService,\n    public route: ActivatedRoute,\n    public router: Router,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) {\n    this.context = { componentParent: this };\n    this.rowSelection = \"single\";\n  }\n  @ViewChild(\"stateModal\") public stateModal: ModalDirective;\n  @ViewChild(\"lgaModal\") public lgaModal: ModalDirective;\n  @ViewChild(\"villageModal\") public villageModal: ModalDirective;\n  @ViewChild(\"marketModal\") public marketModal: ModalDirective;\n  @ViewChild(\"areaModal\") public areaModal: ModalDirective;\n  @ViewChild(\"cropModal\") public cropModal: ModalDirective;\n  @ViewChild(\"deleteModal\") public deleteModal: ModalDirective;\n\n  loading = true;\n  disableButton = true;\n  btnLoading = false;\n  // disableNextButton = false;\n  // disablePrevButton = true;\n  // meta;\n  // pageSize = 20;\n  // from = 1;\n  // to = 20;\n  count = 1;\n  Villages: any = [];\n  LGA: any = [];\n  Areas: any = [];\n  States: any = [];\n  Markets: any = [];\n  Crops: any = [];\n  imageUrl;\n  file: any = null;\n\n  frameworkComponents = {\n    statusRenderer: new ActionRenderer(),\n  };\n  stateForm = this.fb.group({\n    state: [\"\", Validators.required],\n  });\n  lgaForm = this.fb.group({\n    lga: [\"\", Validators.required],\n    state: [\"\", Validators.required],\n  });\n  areaForm = this.fb.group({\n    area: [\"\", Validators.required],\n    PostalCode: [\"\", Validators.required],\n    lga: [\"\", Validators.required],\n    state: [\"\", Validators.required],\n  });\n  marketForm = this.fb.group({\n    market: [\"\", Validators.required],\n    state: [\"\", Validators.required],\n  });\n  cropForm = this.fb.group({\n    crop: [\"\", Validators.required],\n    Image: [\"\", Validators.required],\n  });\n  villageForm = this.fb.group({\n    village: [\"\", Validators.required],\n    area: [\"\", Validators.required],\n    lga: [\"\"],\n    state: [\"\"],\n  });\n\n  selectedYear: any = new Date().getFullYear();\n  years: any = [];\n  filter: any = {};\n  selectedRows: any = [];\n\n  ngOnInit(): void {\n    this.loading = true;\n    console.log(this.router.url);\n    switch (this.router.url) {\n      case \"/masters/Villages\":\n        this.columnDefs = [...VillageMasterColumn];\n        this.dataservice.getVillages().valueChanges.subscribe((result: any) => {\n          console.log(\"getVillages\", result.data.villages.data);\n          this.rowData = result.data.villages.data;\n          // this.meta = result.data.villages.meta;\n          // if (this.meta?.pagination?.pageCount <= 1) {\n          //   this.disablePrevButton = true;\n          //   this.disableNextButton = true;\n          // }\n        });\n        break;\n      case \"/masters/Cities\":\n        this.columnDefs = [...AreaMasterColumn];\n        this.dataservice.getAreas().valueChanges.subscribe((result: any) => {\n          console.log(\"getAreas\", result.data.areas.data);\n          this.rowData = result.data.areas.data;\n          // this.meta = result.data.areas.meta;\n          // if (this.meta?.pagination?.pageCount <= 1) {\n          //   this.disablePrevButton = true;\n          //   this.disableNextButton = true;\n          // }\n        });\n        break;\n      case \"/masters/LGA\":\n        this.columnDefs = [...LGAMasterColumn];\n        this.dataservice.getLGAs().valueChanges.subscribe((result: any) => {\n          console.log(\"getLGAs\", result.data.lgas.data);\n          this.rowData = result.data.lgas.data;\n          // this.meta = result.data.lgas.meta;\n          // if (this.meta?.pagination?.pageCount <= 1) {\n          //   this.disablePrevButton = true;\n          //   this.disableNextButton = true;\n          // }\n        });\n        break;\n      case \"/masters/States\":\n        this.columnDefs = [...StateMasterColumn];\n        this.dataservice.getStates().valueChanges.subscribe((result: any) => {\n          console.log(\"getStates\", result.data.states.data);\n          this.rowData = result.data.states.data;\n          // this.meta = result.data.states.meta;\n          // if (this.meta?.pagination?.pageCount <= 1) {\n          //   this.disablePrevButton = true;\n          //   this.disableNextButton = true;\n          // }\n        });\n        break;\n      case \"/masters/Markets\":\n        this.columnDefs = [...MarketMasterColumn];\n        this.dataservice.getMarkets().valueChanges.subscribe((result: any) => {\n          console.log(\"getMarkets\", result.data.markets.data);\n          this.rowData = result.data.markets.data;\n          // this.meta = result.data.markets.meta;\n          // if (this.meta?.pagination?.pageCount <= 1) {\n          //   this.disablePrevButton = true;\n          //   this.disableNextButton = true;\n          // }\n        });\n        break;\n      case \"/masters/Crops\":\n        this.columnDefs = [...CropMasterColumn];\n        this.dataservice.getCrops().valueChanges.subscribe((result: any) => {\n          console.log(\"getCrops\", result.data.crops.data);\n          this.rowData = result.data.crops.data;\n          // this.meta = result.data.crops.meta;\n          // if (this.meta?.pagination?.pageCount <= 1) {\n          //   this.disablePrevButton = true;\n          //   this.disableNextButton = true;\n          // }\n        });\n        break;\n    }\n    this.getAreas();\n    this.getCrops();\n    this.getLGAs();\n    this.getMarkets();\n    this.getStates();\n    this.getVillages();\n  }\n\n\n  downloadExcel() {\n\n    let masterUrl = \"\";\n    switch (this.router.url) {\n      case \"/masters/Villages\":\n        masterUrl = \"villages\";\n        break;\n      case \"/masters/States\":\n        masterUrl = \"states\";\n        break;\n      case \"/masters/Cities\":\n        masterUrl = \"cities\";\n        break;\n      case \"/masters/LGA\":\n        masterUrl = \"lgas\";\n        break;\n      case \"/masters/Markets\":\n        masterUrl = \"markets\";\n        break;\n\n      case \"/masters/Crops\":\n        masterUrl = \"crops\";\n        break;\n    }\n\n\n    let resp = {};\n    this.btnLoading = true;\n    this.dataservice\n      .downloadMaster(masterUrl)\n      .subscribe((result: any) => {\n        resp = result.body;\n        console.log(result);\n        if (result.status === 200 && result.body.status == \"Success\") {\n          this.toastr.success(result.body.message);\n          this.btnLoading = false;\n          window.open(`${environment.apiUrl}${result?.body?.path}`, \"_blank\");\n        } else {\n          this.btnLoading = false;\n          this.toastr.error(result.body.message);\n        }\n      });\n  }\n\n  getCrops() {\n    this.dataservice.getCrops().valueChanges.subscribe((result: any) => {\n      console.log(\"getCrops\", result.data.crops.data);\n      this.Crops = result.data.crops.data;\n    });\n  }\n  getStates() {\n    this.dataservice.getStates().valueChanges.subscribe((result: any) => {\n      console.log(\"getStates\", result.data.states.data);\n      this.States = result.data.states.data;\n    });\n  }\n  getLGAs(stateid?) {\n    this.dataservice.getLGAs(stateid).valueChanges.subscribe((result: any) => {\n      console.log(\"getLGAs\", result.data.lgas.data);\n      this.LGA = result.data.lgas.data;\n    });\n  }\n  getAreas(lgaid?) {\n    this.dataservice.getAreas(lgaid).valueChanges.subscribe((result: any) => {\n      console.log(\"getAreas\", result.data.areas.data);\n      this.Areas = result.data.areas.data;\n    });\n  }\n  getVillages(areaid?) {\n    this.dataservice\n      .getVillages(areaid)\n      .valueChanges.subscribe((result: any) => {\n        console.log(\"getVillages\", result.data.villages.data);\n        this.Villages = result.data.villages.data;\n      });\n  }\n  getMarkets() {\n    this.dataservice.getMarkets().valueChanges.subscribe((result: any) => {\n      console.log(\"getMarkets\", result.data.markets.data);\n      this.Markets = result.data.markets.data;\n    });\n  }\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.gridApi.sizeColumnsToFit();\n  }\n  onRowClicked(event: any) {\n    console.log(\"row\", event);\n    alert(\"Parent Component Method from \" + event + \"!\");\n    // this.router.navigate(\n    //   [\"/cropprices/kp_customer_details\", event.data.id, this.router.url],\n    //   {\n    //     state: { data: event.data },\n    //   }\n    // );\n  }\n  onSelectionChanged(event: any) {\n    this.selectedRows = this.gridApi.getSelectedRows();\n    if (this.selectedRows.length > 0) {\n      this.disableButton = false;\n    } else {\n      this.disableButton = true;\n    }\n    console.log(this.selectedRows, this.selectedRows[0].attributes.Name);\n\n    // this.router.navigate(\n    //   [\"/cropprices/kp_customer_details\", selectedRows[0].id, this.router.url],\n    //   {\n    //     state: { data: selectedRows },\n    //   }\n    // );\n  }\n  openModal(data?: any) {\n    switch (this.router.url) {\n      case \"/masters/Villages\":\n        this.villageModal.show();\n        if (data) {\n          this.villageForm = this.fb.group({\n            village: [\n              this.selectedRows[0].attributes.Name,\n              Validators.required,\n            ],\n            area: [\n              Number(this.selectedRows[0].attributes.area.data.id),\n              Validators.required,\n            ],\n            lga: [\n              Number(\n                this.selectedRows[0].attributes.area.data.attributes.lga.data.id\n              ),\n            ],\n            state: [\n              Number(\n                this.selectedRows[0].attributes.area.data.attributes.lga.data\n                  .attributes.state.data.id\n              ),\n            ],\n          });\n        } else {\n          this.villageForm = this.fb.group({\n            village: [\"\", Validators.required],\n            area: [\"\", Validators.required],\n            lga: [\"\"],\n            state: [\"\"],\n          });\n        }\n        break;\n      case \"/masters/Cities\":\n        this.areaModal.show();\n        if (data) {\n          this.areaForm = this.fb.group({\n            area: [this.selectedRows[0].attributes.Name, Validators.required],\n            PostalCode: [\n              this.selectedRows[0].attributes.PostalCode,\n              Validators.required,\n            ],\n            lga: [\n              Number(this.selectedRows[0].attributes.lga.data.id),\n              Validators.required,\n            ],\n            state: [\n              Number(\n                this.selectedRows[0].attributes.lga.data.attributes.state.data\n                  .id\n              ),\n              Validators.required,\n            ],\n          });\n        } else {\n          this.areaForm = this.fb.group({\n            area: [\"\", Validators.required],\n            PostalCode: [\"\", Validators.required],\n            lga: [\"\", Validators.required],\n            state: [\"\", Validators.required],\n          });\n        }\n        break;\n      case \"/masters/LGA\":\n        this.lgaModal.show();\n        if (data) {\n          this.lgaForm = this.fb.group({\n            lga: [this.selectedRows[0].attributes.Name, Validators.required],\n            state: [\n              Number(this.selectedRows[0].attributes.state.data.id),\n              Validators.required,\n            ],\n          });\n        } else {\n          this.lgaForm = this.fb.group({\n            lga: [\"\", Validators.required],\n            state: [\"\", Validators.required],\n          });\n        }\n        break;\n      case \"/masters/States\":\n        this.stateModal.show();\n        if (data) {\n          this.stateForm = this.fb.group({\n            state: [this.selectedRows[0].attributes.Name, Validators.required],\n          });\n        } else {\n          this.stateForm = this.fb.group({\n            state: [\"\", Validators.required],\n          });\n        }\n        break;\n      case \"/masters/Markets\":\n        this.marketModal.show();\n        if (data) {\n          this.marketForm = this.fb.group({\n            market: [this.selectedRows[0].attributes.Name, Validators.required],\n            state: [\n              this.selectedRows[0].attributes.state.data.id,\n              Validators.required,\n            ],\n          });\n        } else {\n          this.marketForm = this.fb.group({\n            market: [\"\", Validators.required],\n            state: [\"\", Validators.required],\n          });\n        }\n        break;\n      case \"/masters/Crops\":\n        this.cropModal.show();\n        if (data) {\n          this.cropForm = this.fb.group({\n            crop: [this.selectedRows[0].attributes.Name, Validators.required],\n            Image: [\n              this.selectedRows[0].attributes.Image?.data?.id,\n              Validators.required,\n            ],\n          });\n          this.imageUrl = this.selectedRows[0].attributes.Image?.data\n            ?.attributes?.url\n            ? `${environment.apiUrl}` +\n            this.selectedRows[0].attributes.Image?.data?.attributes?.url\n            : null;\n        } else {\n          this.cropForm = this.fb.group({\n            crop: [\"\", Validators.required],\n            Image: [\"\", Validators.required],\n          });\n          this.imageUrl = null;\n        }\n        break;\n    }\n  }\n  // On file Select\n  onChange(event: any) {\n    this.file = [];\n    for (var i = 0; i < event.target.files.length; i++) {\n      this.file.push(event.target.files[i]);\n    }\n    console.log(this.file);\n  }\n  // loadNext() {\n  //   this.count++;\n  //    this.disablePrevButton = false;\n  //   this.from = this.from + this.pageSize;\n  //   this.to =\n  //     this.to + this.pageSize > this.meta?.pagination?.total\n  //       ? this.meta?.pagination?.total\n  //       : this.to + this.pageSize;\n  //   if (this.count === this.meta.pagination.pageCount) {\n  //     this.disableNextButton = true;\n  //   }\n  //   // this.dataservice\n  //   //   .getFarmDemos(this.count, this.pageSize)\n  //   //   .valueChanges.subscribe((result: any) => {\n  //   //     this.meta = result.data.farmDemos.meta;\n  //   //     this.rowData = result.data.farmDemos.data;\n  //   //   });\n  // }\n  // loadPrev() {\n  //   this.count--;\n  //   if (this.count < this.meta.pagination.pageCount) {\n  //     this.disableNextButton = false;\n  //   }\n  //   if (this.count === 1) {\n  //     this.disablePrevButton = true;\n  //   }\n  //   this.from = this.from - this.pageSize;\n  //   this.to = this.to - this.rowData.length;\n  //   // this.dataservice\n  //   //   .getFarmDemos(this.count, this.pageSize)\n  //   //   .valueChanges.subscribe((result: any) => {\n  //   //     this.meta = result.data.farmDemos.meta;\n  //   //     this.rowData = result.data.farmDemos.data;\n  //   //   });\n  // }\n  filterLGA(event) {\n    this.getLGAs(event.target.value);\n  }\n  filterArea(event) {\n    this.getAreas(event.target.value);\n  }\n  stateSubmit() {\n    let resp = {};\n    console.log(this.stateForm.value);\n    if (!this.disableButton) {\n      this.dataservice\n        .UpdateState(this.stateForm.value, this.selectedRows[0].id)\n        .subscribe((result: any) => {\n          resp = result.data;\n          console.log(\"response\", result);\n          if (result.data.updateState) {\n            this.toastr.success(\"Success!\");\n            this.gridApi.deselectAll();\n            this.stateModal.hide();\n            this.stateForm.reset();\n            this.dataservice\n              .getStates()\n              .valueChanges.subscribe((result: any) => {\n                console.log(\"getStates\", result.data.states.data);\n                this.rowData = result.data.states.data;\n              });\n          } else {\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\n              this.toastr.error(\"Can't be added as the value already exists\");\n            } else {\n              this.toastr.error(\"Failed. Please check the fields!\");\n            }\n          }\n        });\n    } else {\n      this.dataservice.AddStates(this.stateForm.value).subscribe(\n        (result: any) => {\n          resp = result.data;\n          console.log(\"response\", result);\n          if (result.data.createState) {\n            this.toastr.success(\"Success!\");\n            this.gridApi.deselectAll();\n            this.stateModal.hide();\n            this.stateForm.reset();\n            this.dataservice\n              .getStates()\n              .valueChanges.subscribe((result: any) => {\n                console.log(\"getStates\", result.data.states.data);\n                this.rowData = result.data.states.data;\n              });\n          } else {\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\n              this.toastr.error(\"Can't be added as the value already exists\");\n            } else {\n              this.toastr.error(\"Failed. Please check the fields!\");\n            }\n          }\n        },\n        (error) => {\n          console.log(error);\n          this.toastr.error(\"Failed.\");\n        }\n      );\n    }\n  }\n  lgaSubmit() {\n    let resp = {};\n    console.log(this.lgaForm.value);\n    if (!this.disableButton) {\n      this.dataservice\n        .UpdateLGA(this.lgaForm.value, this.selectedRows[0].id)\n        .subscribe((result: any) => {\n          resp = result.data;\n          console.log(\"response\", result);\n          if (result.data.updateLga) {\n            this.toastr.success(\"Success!\");\n            this.gridApi.deselectAll();\n\n            this.lgaModal.hide();\n            this.lgaForm.reset();\n            this.dataservice.getLGAs().valueChanges.subscribe((result: any) => {\n              console.log(\"getLGAs\", result.data.lgas.data);\n              this.rowData = result.data.lgas.data;\n            });\n          } else {\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\n              this.toastr.error(\"Can't be added as the value already exists\");\n            } else {\n              this.toastr.error(\"Failed. Please check the fields!\");\n            }\n          }\n        });\n    } else {\n      this.dataservice.AddLGA(this.lgaForm.value).subscribe((result: any) => {\n        resp = result.data;\n        console.log(\"response\", result);\n        if (result.data.createLga) {\n          this.toastr.success(\"Success!\");\n          this.gridApi.deselectAll();\n          this.lgaModal.hide();\n          this.lgaForm.reset();\n          this.dataservice.getLGAs().valueChanges.subscribe((result: any) => {\n            console.log(\"getLGAs\", result.data.lgas.data);\n            this.rowData = result.data.lgas.data;\n          });\n        } else {\n          if (result.errors[0].extensions.error.name == \"ValidationError\") {\n            this.toastr.error(\"Can't be added as the value already exists\");\n          } else {\n            this.toastr.error(\"Failed. Please check the fields!\");\n          }\n        }\n      });\n    }\n  }\n  areaSubmit() {\n    let resp = {};\n    console.log(this.areaForm.value);\n    if (!this.disableButton) {\n      this.dataservice\n        .UpdateArea(this.areaForm.value, this.selectedRows[0].id)\n        .subscribe((result: any) => {\n          resp = result.data;\n          console.log(\"response\", result);\n          if (result.data.updateArea) {\n            this.toastr.success(\"Success!\");\n            this.gridApi.deselectAll();\n            this.areaModal.hide();\n            this.areaForm.reset();\n            this.dataservice\n              .getAreas()\n              .valueChanges.subscribe((result: any) => {\n                console.log(\"getAreas\", result.data.areas.data);\n                this.rowData = result.data.areas.data;\n              });\n          } else {\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\n              this.toastr.error(\"Can't be added as the value already exists\");\n            } else {\n              this.toastr.error(\"Failed. Please check the fields!\");\n            }\n          }\n        });\n    } else {\n      this.dataservice.AddArea(this.areaForm.value).subscribe((result: any) => {\n        resp = result.data;\n        console.log(\"response\", result);\n        if (result.data.createArea) {\n          this.toastr.success(\"Success!\");\n          this.gridApi.deselectAll();\n          this.areaModal.hide();\n          this.areaForm.reset();\n          this.dataservice.getAreas().valueChanges.subscribe((result: any) => {\n            console.log(\"getAreas\", result.data.areas.data);\n            this.rowData = result.data.areas.data;\n          });\n        } else {\n          if (result.errors[0].extensions.error.name == \"ValidationError\") {\n            this.toastr.error(\"Can't be added as the value already exists\");\n          } else {\n            this.toastr.error(\"Failed. Please check the fields!\");\n          }\n        }\n      });\n    }\n  }\n  marketSubmit() {\n    let resp = {};\n    console.log(this.marketForm.value);\n    if (!this.disableButton) {\n      this.dataservice\n        .UpdateMarket(this.marketForm.value, this.selectedRows[0].id)\n        .subscribe((result: any) => {\n          resp = result.data;\n          console.log(\"response\", result);\n          if (result.data.updateMarket) {\n            this.toastr.success(\"Success!\");\n            this.gridApi.deselectAll();\n            this.marketModal.hide();\n            this.marketForm.reset();\n            this.dataservice\n              .getMarkets()\n              .valueChanges.subscribe((result: any) => {\n                console.log(\"getMarkets\", result.data.markets.data);\n                this.rowData = result.data.markets.data;\n              });\n          } else {\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\n              this.toastr.error(\"Can't be added as the value already exists\");\n            } else {\n              this.toastr.error(\"Failed. Please check the fields!\");\n            }\n          }\n        });\n    } else {\n      this.dataservice\n        .AddMarket(this.marketForm.value)\n        .subscribe((result: any) => {\n          resp = result.data;\n          console.log(\"response\", result);\n          if (result.data.createMarket) {\n            this.toastr.success(\"Success!\");\n            this.gridApi.deselectAll();\n            this.marketModal.hide();\n            this.marketForm.reset();\n            this.dataservice\n              .getMarkets()\n              .valueChanges.subscribe((result: any) => {\n                console.log(\"getMarkets\", result.data.markets.data);\n                this.rowData = result.data.markets.data;\n              });\n          } else {\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\n              this.toastr.error(\"Can't be added as the value already exists\");\n            } else {\n              this.toastr.error(\"Failed. Please check the fields!\");\n            }\n          }\n        });\n    }\n  }\n  cropSubmit() {\n    let resp = {};\n    this.btnLoading = true;\n    console.log(this.cropForm.value);\n    if (!this.disableButton) {\n      if (this.file) {\n        this.dataservice.upload(this.file).subscribe((response: any) => {\n          if (response.status == 200) {\n            console.log(response);\n            this.dataservice\n              .UpdateCrop(\n                this.cropForm.value,\n                this.selectedRows[0].id,\n                response.body[0]?.id\n              )\n              .subscribe(\n                (result: any) => {\n                  resp = result.data;\n                  console.log(\"response\", result);\n                  if (result.data.updateCrop) {\n                    this.toastr.success(\"Success!\");\n                    this.gridApi.deselectAll();\n                    this.cropModal.hide();\n                    this.cropForm.reset();\n                    this.btnLoading = false;\n                    this.dataservice\n                      .getCrops()\n                      .valueChanges.subscribe((result: any) => {\n                        console.log(\"getCrops\", result.data.crops.data);\n                        this.rowData = result.data.crops.data;\n                      });\n                  } else {\n                    if (\n                      result.errors[0].extensions.error.name ==\n                      \"ValidationError\"\n                    ) {\n                      this.toastr.error(\n                        \"Can't be added as the value already exists\"\n                      );\n                      this.btnLoading = false;\n                    } else {\n                      this.toastr.error(\"Failed. Please check the fields!\");\n                      this.btnLoading = false;\n                    }\n                  }\n                },\n                (error) => {\n                  this.btnLoading = false;\n                }\n              );\n          }\n        });\n      } else {\n        this.dataservice\n          .UpdateCrop(this.cropForm.value, this.selectedRows[0].id, null)\n          .subscribe((result: any) => {\n            resp = result.data;\n            console.log(\"response\", result);\n            if (result.data.updateCrop) {\n              this.toastr.success(\"Success!\");\n              this.gridApi.deselectAll();\n              this.cropModal.hide();\n              this.cropForm.reset();\n              this.dataservice\n                .getCrops()\n                .valueChanges.subscribe((result: any) => {\n                  console.log(\"getCrops\", result.data.crops.data);\n                  this.rowData = result.data.crops.data;\n                });\n            } else {\n              if (result.errors[0].extensions.error.name == \"ValidationError\") {\n                this.toastr.error(\"Can't be added as the value already exists\");\n              } else {\n                this.toastr.error(\"Failed. Please check the fields!\");\n              }\n            }\n          });\n      }\n    } else {\n      this.dataservice.upload(this.file).subscribe((response: any) => {\n        if (response.status == 200) {\n          console.log(response);\n          this.dataservice\n            .AddCrop(this.cropForm.value, response.body[0]?.id)\n            .subscribe((result: any) => {\n              resp = result.data;\n              console.log(\"response\", result);\n              if (result.data.createCrop) {\n                this.toastr.success(\"Success!\");\n                this.gridApi.deselectAll();\n                this.cropModal.hide();\n                this.cropForm.reset();\n                this.dataservice\n                  .getCrops()\n                  .valueChanges.subscribe((result: any) => {\n                    console.log(\"getCrops\", result.data.crops.data);\n                    this.rowData = result.data.crops.data;\n                  });\n              } else {\n                if (\n                  result.errors[0].extensions.error.name == \"ValidationError\"\n                ) {\n                  this.toastr.error(\n                    \"Can't be added as the value already exists\"\n                  );\n                } else {\n                  this.toastr.error(\"Failed. Please check the fields!\");\n                }\n              }\n            });\n        }\n      });\n    }\n  }\n  vilageSubmit() {\n    let resp = {};\n    console.log(this.villageForm.value);\n    if (!this.disableButton) {\n      this.dataservice\n        .Updatevillage(this.villageForm.value, this.selectedRows[0].id)\n        .subscribe((result: any) => {\n          resp = result.data;\n          console.log(\"response\", result);\n          if (result.data.updateVillage) {\n            this.toastr.success(\"Success!\");\n            this.gridApi.deselectAll();\n            this.villageModal.hide();\n            this.villageForm.reset();\n            this.dataservice\n              .getVillages()\n              .valueChanges.subscribe((result: any) => {\n                console.log(\"getVillages\", result.data.villages.data);\n                this.rowData = result.data.villages.data;\n              });\n          } else {\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\n              this.toastr.error(\"Can't be added as the value already exists\");\n            } else {\n              this.toastr.error(\"Failed. Please check the fields!\");\n            }\n          }\n        });\n    } else {\n      this.dataservice\n        .Addvillage(this.villageForm.value)\n        .subscribe((result: any) => {\n          resp = result.data;\n          console.log(\"response\", result);\n          if (result.data.createVillage) {\n            this.toastr.success(\"Success!\");\n            this.gridApi.deselectAll();\n            this.villageModal.hide();\n            this.villageForm.reset();\n            this.dataservice\n              .getVillages()\n              .valueChanges.subscribe((result: any) => {\n                console.log(\"getVillages\", result.data.villages.data);\n                this.rowData = result.data.villages.data;\n              });\n          } else {\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\n              this.toastr.error(\"Can't be added as the value already exists\");\n            } else {\n              this.toastr.error(\"Failed. Please check the fields!\");\n            }\n          }\n        });\n    }\n  }\n  deleteRecord() {\n    // this.lgaForm = this.fb.group({\n    //   isDelete: [true, Validators.required],\n    // });\n    // this.stateForm = this.fb.group({\n    //   isDelete: [true, Validators.required],\n    // });\n    // this.villageForm = this.fb.group({\n    //   isDelete: [true, Validators.required],\n    // });\n    // this.lgaForm = this.fb.group({\n    //   isDelete: [true, Validators.required],\n    // });\n    // this.marketForm = this.fb.group({\n    //   isDelete: [true, Validators.required],\n    // });\n    // this.cropForm = this.fb.group({\n    //   isDelete: [true, Validators.required],\n    // });\n    console.log(this.lgaForm.value);\n    switch (this.router.url) {\n      case \"/masters/Villages\":\n        this.dataservice\n          .deleteVillage(this.selectedRows[0].id)\n          .subscribe((result: any) => {\n            console.log(\"response\", result);\n            if (result.data.deleteVillage) {\n              this.toastr.success(\"Success!\");\n              this.gridApi.deselectAll();\n              this.deleteModal.hide();\n              this.dataservice\n                .getVillages()\n                .valueChanges.subscribe((result: any) => {\n                  this.rowData = result.data.villages.data;\n                });\n            } else {\n              this.toastr.error(\"Failed!\");\n            }\n          });\n        break;\n      case \"/masters/Cities\":\n        this.dataservice\n          .deleteArea(this.selectedRows[0].id)\n          .subscribe((result: any) => {\n            console.log(\"response\", result);\n            if (result.data.deleteArea) {\n              this.toastr.success(\"Success!\");\n              this.gridApi.deselectAll();\n              this.deleteModal.hide();\n              this.dataservice\n                .getAreas()\n                .valueChanges.subscribe((result: any) => {\n                  this.rowData = result.data.areas.data;\n                });\n            } else {\n              this.toastr.error(\"Failed!\");\n            }\n          });\n        break;\n      case \"/masters/LGA\":\n        this.dataservice\n          .deleteLGA(this.selectedRows[0].id)\n          .subscribe((result: any) => {\n            console.log(\"response\", result);\n            if (result.data.deleteLga) {\n              this.toastr.success(\"Success!\");\n              this.gridApi.deselectAll();\n              this.deleteModal.hide();\n              this.dataservice\n                .getLGAs()\n                .valueChanges.subscribe((result: any) => {\n                  this.rowData = result.data.lgas.data;\n                });\n            } else {\n              this.toastr.error(\"Failed!\");\n            }\n          });\n        break;\n      case \"/masters/States\":\n        this.dataservice\n          .deleteState(this.selectedRows[0].id)\n          .subscribe((result: any) => {\n            console.log(\"response\", result);\n            if (result.data.deleteState) {\n              this.toastr.success(\"Success!\");\n              this.gridApi.deselectAll();\n              this.deleteModal.hide();\n              this.dataservice\n                .getStates()\n                .valueChanges.subscribe((result: any) => {\n                  this.rowData = result.data.states.data;\n                });\n            } else {\n              this.toastr.error(\"Failed!\");\n            }\n          });\n        break;\n      case \"/masters/Markets\":\n        this.dataservice\n          .deleteMarket(this.selectedRows[0].id)\n          .subscribe((result: any) => {\n            console.log(\"response\", result);\n            if (result.data.deleteMarket) {\n              this.toastr.success(\"Success!\");\n              this.gridApi.deselectAll();\n              this.deleteModal.hide();\n              this.dataservice\n                .getMarkets()\n                .valueChanges.subscribe((result: any) => {\n                  this.rowData = result.data.markets.data;\n                });\n            } else {\n              this.toastr.error(\"Failed!\");\n            }\n          });\n        break;\n      case \"/masters/Crops\":\n        this.dataservice\n          .deleteCrop(this.selectedRows[0].id)\n          .subscribe((result: any) => {\n            console.log(\"response\", result);\n            if (result.data.deleteCrop) {\n              this.toastr.success(\"Success!\");\n              this.gridApi.deselectAll();\n              this.deleteModal.hide();\n              this.dataservice\n                .getCrops()\n                .valueChanges.subscribe((result: any) => {\n                  this.rowData = result.data.crops.data;\n                });\n            } else {\n              this.toastr.error(\"Failed!\");\n            }\n          });\n        break;\n    }\n  }\n}\n","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div\\n      class=\\\"card-header\\\"\\n      style=\\\"display: flex; justify-content: space-between\\\"\\n    >\\n      <h2>{{ this.route.snapshot.data.title }} Master</h2>\\n      <div>\\n        <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-outline-primary\\\"\\n            data-toggle=\\\"modal\\\"\\n            (click)=\\\"downloadExcel()\\\"\\n          >\\n            Download excel\\n          </button>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-danger\\\"\\n          data-toggle=\\\"modal\\\"\\n          [disabled]=\\\"disableButton\\\"\\n          (click)=\\\"deleteModal.show()\\\"\\n        >\\n          Delete\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          [disabled]=\\\"disableButton\\\"\\n          class=\\\"btn btn-info\\\"\\n          data-toggle=\\\"modal\\\"\\n          (click)=\\\"openModal('Edit')\\\"\\n        >\\n          Edit\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-primary\\\"\\n          [disabled]=\\\"!disableButton\\\"\\n          data-toggle=\\\"modal\\\"\\n          (click)=\\\"openModal()\\\"\\n        >\\n          Add New {{ this.route.snapshot.data.title }}\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <ag-grid-angular\\n            #agGrid\\n            style=\\\"width: 100%; height: 65vh\\\"\\n            id=\\\"myGrid\\\"\\n            class=\\\"ag-theme-alpine\\\"\\n            [columnDefs]=\\\"columnDefs\\\"\\n            [rowData]=\\\"rowData\\\"\\n            [context]=\\\"context\\\"\\n            [pagination]=\\\"true\\\"\\n            [rowSelection]=\\\"rowSelection\\\"\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\n            [frameworkComponents]=\\\"frameworkComponents\\\"\\n            (gridReady)=\\\"onGridReady($event)\\\"\\n            animateRows=\\\"true\\\"\\n          >\\n          </ag-grid-angular>\\n          <!-- <span class=\\\"float-left mt-3\\\">{{from}} to {{to}}  of {{meta?.pagination?.total}}</span>\\n            <button\\n              type=\\\"button\\\"\\n              [disabled]=\\\"disableNextButton\\\"\\n              class=\\\"btn btn-primary float-right m-2\\\"\\n              (click)=\\\"loadNext()\\\"\\n            >\\n              Next\\n            </button>\\n            <span class=\\\"float-right mt-3\\\"\\n              >Page {{ meta?.pagination?.page }} of\\n              {{ meta?.pagination?.pageCount }}</span\\n            >\\n            <button\\n              type=\\\"button\\\"\\n              [disabled]=\\\"disablePrevButton\\\"\\n              class=\\\"btn btn-primary float-right m-2\\\"\\n              (click)=\\\"loadPrev()\\\"\\n            >\\n              Prev\\n            </button> -->\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div\\n  bsModal\\n  #stateModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add/Edit State</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"stateModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"stateForm\\\" (ngSubmit)=\\\"stateSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">State</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"state\\\"\\n              name=\\\"state\\\"\\n              formControlName=\\\"state\\\"\\n              placeholder=\\\"Enter State Name\\\"\\n            />\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"stateModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !stateForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Save changes\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div\\n  bsModal\\n  #lgaModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add/Edit LGA</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"lgaModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"lgaForm\\\" (ngSubmit)=\\\"lgaSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"lga\\\">LGA</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"lga\\\"\\n              name=\\\"lga\\\"\\n              formControlName=\\\"lga\\\"\\n              placeholder=\\\"Enter LGA Name\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"state\\\">State</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"state\\\"\\n              required\\n              ngModel\\n              name=\\\"state\\\"\\n              formControlName=\\\"state\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"lgaModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !lgaForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Save changes\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div\\n  bsModal\\n  #areaModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add/Edit City</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"areaModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"areaForm\\\" (ngSubmit)=\\\"areaSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"area\\\">City Name</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"area\\\"\\n              name=\\\"area\\\"\\n              formControlName=\\\"area\\\"\\n              placeholder=\\\"Enter City Name\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"area\\\">Postal code</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"PostalCode\\\"\\n              name=\\\"PostalCode\\\"\\n              formControlName=\\\"PostalCode\\\"\\n              placeholder=\\\"Enter Postal Code\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"state\\\">State</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"state\\\"\\n              required\\n              ngModel\\n              name=\\\"state\\\"\\n              formControlName=\\\"state\\\"\\n              (change)=\\\"filterLGA($event)\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"lga\\\">LGA</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"lga\\\"\\n              required\\n              ngModel\\n              name=\\\"lga\\\"\\n              formControlName=\\\"lga\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"areaModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !areaForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Save changes\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div\\n  bsModal\\n  #marketModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add/Edit Market</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"marketModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"marketForm\\\" (ngSubmit)=\\\"marketSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"market\\\">Market</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"market\\\"\\n              name=\\\"market\\\"\\n              formControlName=\\\"market\\\"\\n              placeholder=\\\"Enter Market Name\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"state\\\">State</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"state\\\"\\n              required\\n              ngModel\\n              name=\\\"state\\\"\\n              formControlName=\\\"state\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"marketModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !marketForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Save changes\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div\\n  bsModal\\n  #cropModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add/Edit Crop</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"cropModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"cropForm\\\" (ngSubmit)=\\\"cropSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Crop</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"crop\\\"\\n              name=\\\"crop\\\"\\n              formControlName=\\\"crop\\\"\\n              placeholder=\\\"Enter Crop Name\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"Image\\\">Image</label>\\n            <div>\\n              <img\\n                *ngIf=\\\"imageUrl\\\"\\n                src=\\\"{{ imageUrl }}\\\"\\n                width=\\\"100\\\"\\n                height=\\\"100\\\"\\n                style=\\\"object-fit: cover\\\"\\n              />\\n            </div>\\n            <input\\n              type=\\\"file\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"Image\\\"\\n              accept=\\\".jpg,.jpeg,.JPEG,.png\\\"\\n              name=\\\"Image\\\"\\n              (change)=\\\"onChange($event)\\\"\\n              formControlName=\\\"Image\\\"\\n              placeholder=\\\"Choose image\\\"\\n            />\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"cropModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !cropForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Save changes\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div\\n  bsModal\\n  #villageModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add/Edit Village</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"villageModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"villageForm\\\" (ngSubmit)=\\\"vilageSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"market\\\">Village Name</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"village\\\"\\n              name=\\\"village\\\"\\n              formControlName=\\\"village\\\"\\n              placeholder=\\\"Enter Village Name\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"state\\\">State</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"state\\\"\\n              ngModel\\n              name=\\\"state\\\"\\n              (change)=\\\"filterLGA($event)\\\"\\n              formControlName=\\\"state\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"lga\\\">LGA</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"lga\\\"\\n              ngModel\\n              (change)=\\\"filterArea($event)\\\"\\n              name=\\\"lga\\\"\\n              formControlName=\\\"lga\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"area\\\">City</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"area\\\"\\n              ngModel\\n              name=\\\"area\\\"\\n              formControlName=\\\"area\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of Areas\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"villageModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !villageForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Save changes\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div\\n  bsModal\\n  #deleteModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-body text-center\\\">\\n        Do you want to delete this record?\\n      </div>\\n      <div class=\\\"modal-footer justify-content-around\\\">\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-secondary\\\"\\n          (click)=\\\"deleteModal.hide()\\\"\\n        >\\n          No! Cancel.\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deleteRecord()\\\">\\n          Yes! Delete.\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { mastersComponent } from './masters.component';\r\nimport { AuthGuard } from '../login/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    \r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'masters'\r\n      },\r\n      {\r\n        path: 'States',\r\n        // canActivate: [AuthGuard],\r\n        component: mastersComponent,\r\n        data: {\r\n          roles: 'States',\r\n          title: 'States'\r\n        }\r\n      },\r\n      {\r\n        path: 'LGA',\r\n        // canActivate: [AuthGuard],\r\n        component: mastersComponent,\r\n        data: {\r\n          roles: 'LGA',\r\n          title: 'LGA'\r\n        }\r\n      },\r\n      {\r\n        path: 'Cities',\r\n        // canActivate: [AuthGuard],\r\n        component: mastersComponent,\r\n        data: {\r\n          roles: 'Cities',\r\n          title: 'Cities'\r\n        }\r\n      },\r\n      {\r\n        path: 'Villages',\r\n        // canActivate: [AuthGuard],\r\n        component: mastersComponent,\r\n        data: {\r\n          roles: 'Villages',\r\n          title: 'Villages'\r\n        }\r\n      },\r\n      {\r\n        path: 'Markets',\r\n        // canActivate: [AuthGuard],\r\n        component: mastersComponent,\r\n        data: {\r\n          roles: 'Markets',\r\n          title: 'Markets'\r\n        }\r\n      },\r\n      {\r\n        path: 'Crops',\r\n        // canActivate: [AuthGuard],\r\n        component: mastersComponent,\r\n        data: {\r\n          roles: 'Crops',\r\n          title: 'Crops'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class mastersRoutingModule {}\r\n"]}