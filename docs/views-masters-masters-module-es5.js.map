{"version":3,"sources":["webpack:///src/app/views/masters/masters.module.ts","webpack:///src/app/views/masters/masters.component.ts","webpack:///src/app/views/masters/masters.component.html","webpack:///src/app/views/masters/masters-routing.module.ts"],"names":["MastersModule","imports","withComponents","forRoot","declarations","mastersComponent","dataservice","route","router","fb","toastr","columnDefs","loading","disableButton","btnLoading","disableNextButton","disablePrevButton","count","Villages","LGA","Areas","States","Markets","Crops","file","pageSize","from","to","frameworkComponents","statusRenderer","stateForm","group","state","required","lgaForm","lga","areaForm","area","PostalCode","marketForm","market","cropForm","crop","Image","villageForm","village","selectedYear","Date","getFullYear","years","filter","selectedRows","context","componentParent","rowSelection","console","log","url","getVillages","valueChanges","subscribe","result","data","villages","rowData","meta","pagination","pageCount","getAreas","areas","getLGAs","lgas","getStates","states","getMarkets","markets","getCrops","crops","masterUrl","total","loadData","length","resp","downloadMaster","body","status","success","message","window","open","apiUrl","path","error","stateid","lgaid","areaid","params","gridApi","api","gridColumnApi","columnApi","sizeColumnsToFit","event","alert","getSelectedRows","attributes","Name","villageModal","show","Number","id","areaModal","lgaModal","stateModal","marketModal","cropModal","imageUrl","i","target","files","push","value","UpdateState","updateState","deselectAll","hide","reset","errors","extensions","name","AddStates","createState","UpdateLGA","updateLga","AddLGA","createLga","UpdateArea","updateArea","AddArea","createArea","UpdateMarket","updateMarket","AddMarket","createMarket","upload","response","UpdateCrop","updateCrop","AddCrop","createCrop","Updatevillage","updateVillage","Addvillage","createVillage","deleteVillage","deleteModal","deleteArea","deleteLGA","deleteLga","deleteState","deleteMarket","deleteCrop","template","routes","children","redirectTo","component","roles","title","mastersRoutingModule","forChild","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAMA;AAIA;AAGA;;;UAqBaA,aAAa;AAAA;AAAA,O;;AAAbA,mBAAa,6DAhBzB,+DAAS;AACRC,eAAO,EAAE,CACP,4DADO,EAEP,6DAFO,EAGP,kEAHO,EAIP,6DAAaC,cAAb,CAA4B,EAA5B,CAJO,EAKP,4EALO,EAMP,wEAAiBC,OAAjB,EANO,EAOP,gEAAYA,OAAZ,EAPO,EAQP,0DARO,CADD;AAWRC,oBAAY,EAAE,CACZ,mEADY,EAEZ,qEAFY;AAXN,OAAT,CAgByB,GAAbJ,aAAa,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCbAK,gBAAgB;AAQ3B,kCACSC,WADT,EAESC,KAFT,EAGSC,MAHT,EAIUC,EAJV,EAKUC,MALV,EAK+B;AAAA;;AAJtB,eAAAJ,WAAA,GAAAA,WAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACC,eAAAC,EAAA,GAAAA,EAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AAPH,eAAAC,UAAA,GAAoB,EAApB;AAoBP,eAAAC,OAAA,GAAU,IAAV;AACA,eAAAC,aAAA,GAAgB,IAAhB;AACA,eAAAC,UAAA,GAAa,KAAb;AACA,eAAAC,iBAAA,GAAoB,KAApB;AACA,eAAAC,iBAAA,GAAoB,IAApB,CAjB+B,CAkB/B;AACA;AACA;AACA;AACA;AACA;;AACA,eAAAC,KAAA,GAAQ,CAAR;AACA,eAAAC,QAAA,GAAgB,EAAhB;AACA,eAAAC,GAAA,GAAW,EAAX;AACA,eAAAC,KAAA,GAAa,EAAb;AACA,eAAAC,MAAA,GAAc,EAAd;AACA,eAAAC,OAAA,GAAe,EAAf;AACA,eAAAC,KAAA,GAAa,EAAb;AAEA,eAAAC,IAAA,GAAY,IAAZ;AAGA,eAAAC,QAAA,GAAW,EAAX;AACA,eAAAC,IAAA,GAAO,CAAP;AACA,eAAAC,EAAA,GAAK,EAAL;AAEA,eAAAC,mBAAA,GAAsB;AACpBC,0BAAc,EAAE,IAAI,oEAAJ;AADI,WAAtB;AAGA,eAAAC,SAAA,GAAY,KAAKrB,EAAL,CAAQsB,KAAR,CAAc;AACxBC,iBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB;AADiB,WAAd,CAAZ;AAGA,eAAAC,OAAA,GAAU,KAAKzB,EAAL,CAAQsB,KAAR,CAAc;AACtBI,eAAG,EAAE,CAAC,EAAD,EAAK,0DAAWF,QAAhB,CADiB;AAEtBD,iBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB;AAFe,WAAd,CAAV;AAIA,eAAAG,QAAA,GAAW,KAAK3B,EAAL,CAAQsB,KAAR,CAAc;AACvBM,gBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWJ,QAAhB,CADiB;AAEvBK,sBAAU,EAAE,CAAC,EAAD,EAAK,0DAAWL,QAAhB,CAFW;AAGvBE,eAAG,EAAE,CAAC,EAAD,EAAK,0DAAWF,QAAhB,CAHkB;AAIvBD,iBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB;AAJgB,WAAd,CAAX;AAMA,eAAAM,UAAA,GAAa,KAAK9B,EAAL,CAAQsB,KAAR,CAAc;AACzBS,kBAAM,EAAE,CAAC,EAAD,EAAK,0DAAWP,QAAhB,CADiB;AAEzBD,iBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB;AAFkB,WAAd,CAAb;AAIA,eAAAQ,QAAA,GAAW,KAAKhC,EAAL,CAAQsB,KAAR,CAAc;AACvBW,gBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWT,QAAhB,CADiB;AAEvBU,iBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWV,QAAhB;AAFgB,WAAd,CAAX;AAIA,eAAAW,WAAA,GAAc,KAAKnC,EAAL,CAAQsB,KAAR,CAAc;AAC1Bc,mBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWZ,QAAhB,CADiB;AAE1BI,gBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWJ,QAAhB,CAFoB;AAG1BE,eAAG,EAAE,CAAC,EAAD,CAHqB;AAI1BH,iBAAK,EAAE,CAAC,EAAD;AAJmB,WAAd,CAAd;AAOA,eAAAc,YAAA,GAAoB,IAAIC,IAAJ,GAAWC,WAAX,EAApB;AACA,eAAAC,KAAA,GAAa,EAAb;AACA,eAAAC,MAAA,GAAc,EAAd;AACA,eAAAC,YAAA,GAAoB,EAApB;AAvEE,eAAKC,OAAL,GAAe;AAAEC,2BAAe,EAAE;AAAnB,WAAf;AACA,eAAKC,YAAL,GAAoB,QAApB;AACD;;AAjB0B;AAAA;AAAA,iBAwF3B,oBAAQ;AAAA;;AACN,iBAAK1C,OAAL,GAAe,IAAf;AACA2C,mBAAO,CAACC,GAAR,CAAY,KAAKhD,MAAL,CAAYiD,GAAxB;;AACA,oBAAQ,KAAKjD,MAAL,CAAYiD,GAApB;AACE,mBAAK,mBAAL;AACE,qBAAK9C,UAAL,sBAAsB,6EAAtB;AACA,qBAAKL,WAAL,CAAiBoD,WAAjB,CAA6B,KAAKzC,KAAlC,EAAyC,KAAKQ,QAA9C,EAAwDkC,YAAxD,CAAqEC,SAArE,CAA+E,UAACC,MAAD,EAAiB;;;AAC9FN,yBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BK,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBD,IAAhD;AACA,uBAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBD,IAApC;AACA,uBAAI,CAACG,IAAL,GAAYJ,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBE,IAAjC;;AACA,sBAAI,kBAAI,CAACA,IAAL,MAAS,IAAT,IAAS,aAAT,GAAS,MAAT,GAAS,GAAEC,UAAX,MAAqB,IAArB,IAAqB,aAArB,GAAqB,MAArB,GAAqB,GAAEC,SAAvB,KAAoC,CAAxC,EAA2C;AACzC,yBAAI,CAACnD,iBAAL,GAAyB,IAAzB;AACA,yBAAI,CAACD,iBAAL,GAAyB,IAAzB;AACD;AACF,iBARD;AASA;;AACF,mBAAK,iBAAL;AACE,qBAAKJ,UAAL,sBAAsB,0EAAtB;AACA,qBAAKL,WAAL,CAAiB8D,QAAjB,CAA0B,KAAKnD,KAA/B,EAAsC,KAAKQ,QAA3C,EAAqDkC,YAArD,CAAkEC,SAAlE,CAA4E,UAACC,MAAD,EAAiB;;;AAC3FN,yBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBP,IAA1C;AACA,uBAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBP,IAAjC;AACA,uBAAI,CAACG,IAAL,GAAYJ,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBJ,IAA9B;;AACA,sBAAI,kBAAI,CAACA,IAAL,MAAS,IAAT,IAAS,aAAT,GAAS,MAAT,GAAS,GAAEC,UAAX,MAAqB,IAArB,IAAqB,aAArB,GAAqB,MAArB,GAAqB,GAAEC,SAAvB,KAAoC,CAAxC,EAA2C;AACzC,yBAAI,CAACnD,iBAAL,GAAyB,IAAzB;AACA,yBAAI,CAACD,iBAAL,GAAyB,IAAzB;AACD;AACF,iBARD;AASA;;AACF,mBAAK,cAAL;AACE,qBAAKJ,UAAL,sBAAsB,yEAAtB;AACA,qBAAKL,WAAL,CAAiBgE,OAAjB,CAAyB,KAAKrD,KAA9B,EAAqC,KAAKQ,QAA1C,EAAoDkC,YAApD,CAAiEC,SAAjE,CAA2E,UAACC,MAAD,EAAiB;;;AAC1FN,yBAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBK,MAAM,CAACC,IAAP,CAAYS,IAAZ,CAAiBT,IAAxC;AACA,uBAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYS,IAAZ,CAAiBT,IAAhC;AACA,uBAAI,CAACG,IAAL,GAAYJ,MAAM,CAACC,IAAP,CAAYS,IAAZ,CAAiBN,IAA7B;;AACA,sBAAI,kBAAI,CAACA,IAAL,MAAS,IAAT,IAAS,aAAT,GAAS,MAAT,GAAS,GAAEC,UAAX,MAAqB,IAArB,IAAqB,aAArB,GAAqB,MAArB,GAAqB,GAAEC,SAAvB,KAAoC,CAAxC,EAA2C;AACzC,yBAAI,CAACnD,iBAAL,GAAyB,IAAzB;AACA,yBAAI,CAACD,iBAAL,GAAyB,IAAzB;AACD;AACF,iBARD;AASA;;AACF,mBAAK,iBAAL;AACE,qBAAKJ,UAAL,sBAAsB,2EAAtB;AACA,qBAAKL,WAAL,CAAiBkE,SAAjB,CAA2B,KAAKvD,KAAhC,EAAuC,KAAKQ,QAA5C,EAAsDkC,YAAtD,CAAmEC,SAAnE,CAA6E,UAACC,MAAD,EAAiB;;;AAC5FN,yBAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBK,MAAM,CAACC,IAAP,CAAYW,MAAZ,CAAmBX,IAA5C;AACA,uBAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYW,MAAZ,CAAmBX,IAAlC;AACA,uBAAI,CAACG,IAAL,GAAYJ,MAAM,CAACC,IAAP,CAAYW,MAAZ,CAAmBR,IAA/B;;AACA,sBAAI,kBAAI,CAACA,IAAL,MAAS,IAAT,IAAS,aAAT,GAAS,MAAT,GAAS,GAAEC,UAAX,MAAqB,IAArB,IAAqB,aAArB,GAAqB,MAArB,GAAqB,GAAEC,SAAvB,KAAoC,CAAxC,EAA2C;AACzC,yBAAI,CAACnD,iBAAL,GAAyB,IAAzB;AACA,yBAAI,CAACD,iBAAL,GAAyB,IAAzB;AACD;AACF,iBARD;AASA;;AACF,mBAAK,kBAAL;AACE,qBAAKJ,UAAL,sBAAsB,4EAAtB;AACA,qBAAKL,WAAL,CAAiBoE,UAAjB,CAA4B,KAAKzD,KAAjC,EAAwC,KAAKQ,QAA7C,EAAuDkC,YAAvD,CAAoEC,SAApE,CAA8E,UAACC,MAAD,EAAiB;;;AAC7FN,yBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BK,MAAM,CAACC,IAAP,CAAYa,OAAZ,CAAoBb,IAA9C;AACA,uBAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYa,OAAZ,CAAoBb,IAAnC;AACA,uBAAI,CAACG,IAAL,GAAYJ,MAAM,CAACC,IAAP,CAAYa,OAAZ,CAAoBV,IAAhC;;AACA,sBAAI,kBAAI,CAACA,IAAL,MAAS,IAAT,IAAS,aAAT,GAAS,MAAT,GAAS,GAAEC,UAAX,MAAqB,IAArB,IAAqB,aAArB,GAAqB,MAArB,GAAqB,GAAEC,SAAvB,KAAoC,CAAxC,EAA2C;AACzC,yBAAI,CAACnD,iBAAL,GAAyB,IAAzB;AACA,yBAAI,CAACD,iBAAL,GAAyB,IAAzB;AACD;AACF,iBARD;AASA;;AACF,mBAAK,gBAAL;AACE,qBAAKJ,UAAL,sBAAsB,0EAAtB;AACA,qBAAKL,WAAL,CAAiBsE,QAAjB,CAA0B,KAAK3D,KAA/B,EAAsC,KAAKQ,QAA3C,EAAqDkC,YAArD,CAAkEC,SAAlE,CAA4E,UAACC,MAAD,EAAiB;;;AAC3FN,yBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAM,CAACC,IAAP,CAAYe,KAAZ,CAAkBf,IAA1C;AACA,uBAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYe,KAAZ,CAAkBf,IAAjC;AACA,uBAAI,CAACG,IAAL,GAAYJ,MAAM,CAACC,IAAP,CAAYe,KAAZ,CAAkBZ,IAA9B;;AACA,sBAAI,kBAAI,CAACA,IAAL,MAAS,IAAT,IAAS,aAAT,GAAS,MAAT,GAAS,GAAEC,UAAX,MAAqB,IAArB,IAAqB,aAArB,GAAqB,MAArB,GAAqB,GAAEC,SAAvB,KAAoC,CAAxC,EAA2C;AACzC,yBAAI,CAACnD,iBAAL,GAAyB,IAAzB;AACA,yBAAI,CAACD,iBAAL,GAAyB,IAAzB;AACD;AACF,iBARD;AASA;AAxEJ;;AA0EA,iBAAKqD,QAAL,CAAc,KAAKnD,KAAnB,EAA0B,KAAKQ,QAA/B;AACA,iBAAKmD,QAAL,CAAc,KAAK3D,KAAnB,EAA0B,KAAKQ,QAA/B;AACA,iBAAK6C,OAAL,CAAa,KAAKrD,KAAlB,EAAyB,KAAKQ,QAA9B;AACA,iBAAKiD,UAAL,CAAgB,KAAKzD,KAArB,EAA4B,KAAKQ,QAAjC;AACA,iBAAK+C,SAAL,CAAe,KAAKvD,KAApB,EAA2B,KAAKQ,QAAhC;AACA,iBAAKiC,WAAL,CAAiB,KAAKzC,KAAtB,EAA6B,KAAKQ,QAAlC;AACD;AA3K0B;AAAA;AAAA,iBA6K3B,kBAASR,KAAT,EAAgBQ,QAAhB,EAA0B;AACxB,gBAAIqD,SAAS,GAAG,EAAhB;;AACA,oBAAQ,KAAKtE,MAAL,CAAYiD,GAApB;AACE,mBAAK,mBAAL;AACE,qBAAKC,WAAL,CAAiBzC,KAAjB,EAAwBQ,QAAxB;AACA;;AACF,mBAAK,iBAAL;AACE,qBAAK+C,SAAL,CAAevD,KAAf,EAAsBQ,QAAtB;AACA;;AACF,mBAAK,iBAAL;AACE,qBAAK2C,QAAL,CAAcnD,KAAd,EAAqBQ,QAArB;AACA;;AACF,mBAAK,cAAL;AACE,qBAAK6C,OAAL,CAAarD,KAAb,EAAoBQ,QAApB;AACA;;AACF,mBAAK,kBAAL;AACE,qBAAKiD,UAAL,CAAgBzD,KAAhB,EAAuBQ,QAAvB;AACA;;AAEF,mBAAK,gBAAL;AACE,qBAAKmD,QAAL,CAAc3D,KAAd,EAAqBQ,QAArB;AACA;AAnBJ;AAqBD;AApM0B;AAAA;AAAA,iBAsM3B,oBAAW;;;AACT,iBAAKR,KAAL;AACA,iBAAKD,iBAAL,GAAyB,KAAzB;AACA,iBAAKU,IAAL,GAAY,KAAKA,IAAL,GAAY,KAAKD,QAA7B;AACA,iBAAKE,EAAL,GACE,KAAKA,EAAL,GAAU,KAAKF,QAAf,IAAuB,YAAG,KAAKwC,IAAR,MAAY,IAAZ,IAAY,aAAZ,GAAY,MAAZ,GAAY,GAAEC,UAAd,MAAwB,IAAxB,IAAwB,aAAxB,GAAwB,MAAxB,GAAwB,GAAEa,KAAjD,IACI,CAAD,WAAC,KAAKd,IAAN,MAAU,IAAV,IAAU,aAAV,GAAU,MAAV,GAAU,GAAEC,UAAX,MAAqB,IAArB,IAAqB,aAArB,GAAqB,MAArB,GAAqB,GAAEa,KAD3B,GAEI,KAAKpD,EAAL,GAAU,KAAKF,QAHrB;;AAIA,gBAAI,KAAKR,KAAL,KAAe,KAAKgD,IAAL,CAAUC,UAAV,CAAqBC,SAAxC,EAAmD;AACjD,mBAAKpD,iBAAL,GAAyB,IAAzB;AACD;;AACD,iBAAKiE,QAAL,CAAc,KAAK/D,KAAnB,EAA0B,KAAKQ,QAA/B;AACD;AAlN0B;AAAA;AAAA,iBAmN3B,oBAAW;AACT,iBAAKR,KAAL;;AACA,gBAAI,KAAKA,KAAL,GAAa,KAAKgD,IAAL,CAAUC,UAAV,CAAqBC,SAAtC,EAAiD;AAC/C,mBAAKpD,iBAAL,GAAyB,KAAzB;AACD;;AACD,gBAAI,KAAKE,KAAL,KAAe,CAAnB,EAAsB;AACpB,mBAAKD,iBAAL,GAAyB,IAAzB;AACD;;AACD,iBAAKU,IAAL,GAAY,KAAKA,IAAL,GAAY,KAAKD,QAA7B;AACA,iBAAKE,EAAL,GAAU,KAAKA,EAAL,GAAU,KAAKqC,OAAL,CAAaiB,MAAjC;AACA,iBAAKD,QAAL,CAAc,KAAK/D,KAAnB,EAA0B,KAAKQ,QAA/B;AACD;AA9N0B;AAAA;AAAA,iBAiO3B,yBAAgB;AAAA;;AAEd,gBAAIqD,SAAS,GAAG,EAAhB;;AAGA,oBAAQ,KAAKtE,MAAL,CAAYiD,GAApB;AACE,mBAAK,mBAAL;AACEqB,yBAAS,GAAG,UAAZ;AACA;;AACF,mBAAK,iBAAL;AACEA,yBAAS,GAAG,QAAZ;AACA;;AACF,mBAAK,iBAAL;AACEA,yBAAS,GAAG,QAAZ;AACA;;AACF,mBAAK,cAAL;AACEA,yBAAS,GAAG,MAAZ;AACA;;AACF,mBAAK,kBAAL;AACEA,yBAAS,GAAG,SAAZ;AACA;;AAEF,mBAAK,gBAAL;AACEA,yBAAS,GAAG,OAAZ;AACA;AAnBJ;;AAuBA,gBAAII,IAAI,GAAG,EAAX;AACA,iBAAKpE,UAAL,GAAkB,IAAlB;AACA,iBAAKR,WAAL,CACG6E,cADH,CACkBL,SADlB,EAEGlB,SAFH,CAEa,UAACC,MAAD,EAAiB;;;AAC1BqB,kBAAI,GAAGrB,MAAM,CAACuB,IAAd;AACA7B,qBAAO,CAACC,GAAR,CAAYK,MAAZ;;AACA,kBAAIA,MAAM,CAACwB,MAAP,KAAkB,GAAlB,IAAyBxB,MAAM,CAACuB,IAAP,CAAYC,MAAZ,IAAsB,SAAnD,EAA8D;AAC5D,sBAAI,CAAC3E,MAAL,CAAY4E,OAAZ,CAAoBzB,MAAM,CAACuB,IAAP,CAAYG,OAAhC;;AACA,sBAAI,CAACzE,UAAL,GAAkB,KAAlB;AACA0E,sBAAM,CAACC,IAAP,WAAe,uEAAYC,MAA3B,SAAoC,MAAA7B,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAM,MAAN,GAAAA,MAAM,CAAEuB,IAAR,MAAY,IAAZ,IAAY,aAAZ,GAAY,MAAZ,GAAY,GAAEO,IAAlD,GAA0D,QAA1D;AACD,eAJD,MAIO;AACL,sBAAI,CAAC7E,UAAL,GAAkB,KAAlB;;AACA,sBAAI,CAACJ,MAAL,CAAYkF,KAAZ,CAAkB/B,MAAM,CAACuB,IAAP,CAAYG,OAA9B;AACD;AACF,aAbH;AAcD;AA7Q0B;AAAA;AAAA,iBA+Q3B,kBAAStE,KAAT,EAAgBQ,QAAhB,EAA0B;AAAA;;AACxB,iBAAKnB,WAAL,CAAiBsE,QAAjB,CAA0B3D,KAA1B,EAAiCQ,QAAjC,EAA2CkC,YAA3C,CAAwDC,SAAxD,CAAkE,UAACC,MAAD,EAAiB;AACjFN,qBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCK,MAAM,CAACC,IAAP,CAAYe,KAAZ,CAAkBf,IAAnD;AACA,oBAAI,CAACvC,KAAL,GAAasC,MAAM,CAACC,IAAP,CAAYe,KAAZ,CAAkBf,IAA/B;;AACA,kBAAG,MAAI,CAACtD,MAAL,CAAYiD,GAAZ,KAAoB,gBAAvB,EAAyC;AACvC,sBAAI,CAACO,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYe,KAAZ,CAAkBf,IAAjC;AACA,sBAAI,CAACG,IAAL,GAAYJ,MAAM,CAACC,IAAP,CAAYe,KAAZ,CAAkBZ,IAA9B;AACD;AACF,aAPD;AAQD;AAxR0B;AAAA;AAAA,iBAyR3B,mBAAUhD,KAAV,EAAiBQ,QAAjB,EAA2B;AAAA;;AACzB,iBAAKnB,WAAL,CAAiBkE,SAAjB,CAA2BvD,KAA3B,EAAkCQ,QAAlC,EAA4CkC,YAA5C,CAAyDC,SAAzD,CAAmE,UAACC,MAAD,EAAiB;AAClFN,qBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCK,MAAM,CAACC,IAAP,CAAYW,MAAZ,CAAmBX,IAArD;AACA,oBAAI,CAACzC,MAAL,GAAcwC,MAAM,CAACC,IAAP,CAAYW,MAAZ,CAAmBX,IAAjC;;AACA,kBAAG,MAAI,CAACtD,MAAL,CAAYiD,GAAZ,KAAoB,iBAAvB,EAA0C;AACxC,sBAAI,CAACO,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYW,MAAZ,CAAmBX,IAAlC;AACA,sBAAI,CAACG,IAAL,GAAYJ,MAAM,CAACC,IAAP,CAAYW,MAAZ,CAAmBR,IAA/B;AACD;AACF,aAPD;AAQD;AAlS0B;AAAA;AAAA,iBAmS3B,iBAAQhD,KAAR,EAAeQ,QAAf,EAAyBoE,OAAzB,EAAmC;AAAA;;AACjC,iBAAKvF,WAAL,CAAiBgE,OAAjB,CAAyBrD,KAAzB,EAAgCQ,QAAhC,EAA0CoE,OAA1C,EAAmDlC,YAAnD,CAAgEC,SAAhE,CAA0E,UAACC,MAAD,EAAiB;AACzFN,qBAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCK,MAAM,CAACC,IAAP,CAAYS,IAAZ,CAAiBT,IAAjD;AACA,oBAAI,CAAC3C,GAAL,GAAW0C,MAAM,CAACC,IAAP,CAAYS,IAAZ,CAAiBT,IAA5B;;AACA,kBAAG,MAAI,CAACtD,MAAL,CAAYiD,GAAZ,KAAoB,cAAvB,EAAuC;AACrC,sBAAI,CAACO,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYS,IAAZ,CAAiBT,IAAhC;AACA,sBAAI,CAACG,IAAL,GAAYJ,MAAM,CAACC,IAAP,CAAYS,IAAZ,CAAiBN,IAA7B;AACD;AACF,aAPD;AAQD;AA5S0B;AAAA;AAAA,iBA6S3B,kBAAShD,KAAT,EAAgBQ,QAAhB,EAA0BqE,KAA1B,EAAkC;AAAA;;AAChC,iBAAKxF,WAAL,CAAiB8D,QAAjB,CAA0BnD,KAA1B,EAAiCQ,QAAjC,EAA2CqE,KAA3C,EAAkDnC,YAAlD,CAA+DC,SAA/D,CAAyE,UAACC,MAAD,EAAiB;AACxFN,qBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCK,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBP,IAAnD;AACA,oBAAI,CAAC1C,KAAL,GAAayC,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBP,IAA/B;;AACA,kBAAG,MAAI,CAACtD,MAAL,CAAYiD,GAAZ,KAAoB,iBAAvB,EAA0C;AACxC,sBAAI,CAACO,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBP,IAAjC;AACA,sBAAI,CAACG,IAAL,GAAYJ,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBJ,IAA9B;AACD;AACF,aAPD;AAQD;AAtT0B;AAAA;AAAA,iBAuT3B,qBAAYhD,KAAZ,EAAmBQ,QAAnB,EAA6BsE,MAA7B,EAAsC;AAAA;;AACpC,iBAAKzF,WAAL,CACGoD,WADH,CACezC,KADf,EACsBQ,QADtB,EACgCsE,MADhC,EAEGpC,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvCN,qBAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCK,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBD,IAAzD;AACA,oBAAI,CAAC5C,QAAL,GAAgB2C,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBD,IAArC;;AACA,kBAAG,MAAI,CAACtD,MAAL,CAAYiD,GAAZ,KAAoB,mBAAvB,EAA4C;AAC1C,sBAAI,CAACO,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBD,IAApC;AACA,sBAAI,CAACG,IAAL,GAAYJ,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBE,IAAjC;AACD;AACF,aATH;AAUD;AAlU0B;AAAA;AAAA,iBAmU3B,oBAAWhD,KAAX,EAAkBQ,QAAlB,EAA4B;AAAA;;AAC1B,iBAAKnB,WAAL,CAAiBoE,UAAjB,CAA4BzD,KAA5B,EAAmCQ,QAAnC,EAA6CkC,YAA7C,CAA0DC,SAA1D,CAAoE,UAACC,MAAD,EAAiB;AACnFN,qBAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCK,MAAM,CAACC,IAAP,CAAYa,OAAZ,CAAoBb,IAAvD;AACA,oBAAI,CAACxC,OAAL,GAAeuC,MAAM,CAACC,IAAP,CAAYa,OAAZ,CAAoBb,IAAnC;;AACA,kBAAG,MAAI,CAACtD,MAAL,CAAYiD,GAAZ,KAAoB,kBAAvB,EAA2C;AACzC,sBAAI,CAACO,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYa,OAAZ,CAAoBb,IAAnC;AACA,sBAAI,CAACG,IAAL,GAAYJ,MAAM,CAACC,IAAP,CAAYa,OAAZ,CAAoBV,IAAhC;AACD;AACF,aAPD;AAQD;AA5U0B;AAAA;AAAA,iBA6U3B,qBAAY+B,MAAZ,EAAoB;AAClB,iBAAKC,OAAL,GAAeD,MAAM,CAACE,GAAtB;AACA,iBAAKC,aAAL,GAAqBH,MAAM,CAACI,SAA5B;AACA,iBAAKH,OAAL,CAAaI,gBAAb;AACD;AAjV0B;AAAA;AAAA,iBAkV3B,sBAAaC,KAAb,EAAyB;AACvB/C,mBAAO,CAACC,GAAR,CAAY,KAAZ,EAAmB8C,KAAnB;AACAC,iBAAK,CAAC,kCAAkCD,KAAlC,GAA0C,GAA3C,CAAL,CAFuB,CAGvB;AACA;AACA;AACA;AACA;AACA;AACD;AA3V0B;AAAA;AAAA,iBA4V3B,4BAAmBA,KAAnB,EAA+B;AAC7B,iBAAKnD,YAAL,GAAoB,KAAK8C,OAAL,CAAaO,eAAb,EAApB;;AACA,gBAAI,KAAKrD,YAAL,CAAkB8B,MAAlB,GAA2B,CAA/B,EAAkC;AAChC,mBAAKpE,aAAL,GAAqB,KAArB;AACD,aAFD,MAEO;AACL,mBAAKA,aAAL,GAAqB,IAArB;AACD;;AACD0C,mBAAO,CAACC,GAAR,CAAY,KAAKL,YAAjB,EAA+B,KAAKA,YAAL,CAAkB,CAAlB,EAAqBsD,UAArB,CAAgCC,IAA/D,EAP6B,CAS7B;AACA;AACA;AACA;AACA;AACA;AACD;AA3W0B;AAAA;AAAA,iBA4W3B,mBAAU5C,IAAV,EAAsB;;;AACpB,oBAAQ,KAAKtD,MAAL,CAAYiD,GAApB;AACE,mBAAK,mBAAL;AACE,qBAAKkD,YAAL,CAAkBC,IAAlB;;AACA,oBAAI9C,IAAJ,EAAU;AACR,uBAAKlB,WAAL,GAAmB,KAAKnC,EAAL,CAAQsB,KAAR,CAAc;AAC/Bc,2BAAO,EAAE,CACP,KAAKM,YAAL,CAAkB,CAAlB,EAAqBsD,UAArB,CAAgCC,IADzB,EAEP,0DAAWzE,QAFJ,CADsB;AAK/BI,wBAAI,EAAE,CACJwE,MAAM,CAAC,KAAK1D,YAAL,CAAkB,CAAlB,EAAqBsD,UAArB,CAAgCpE,IAAhC,CAAqCyB,IAArC,CAA0CgD,EAA3C,CADF,EAEJ,0DAAW7E,QAFP,CALyB;AAS/BE,uBAAG,EAAE,CACH0E,MAAM,CACJ,KAAK1D,YAAL,CAAkB,CAAlB,EAAqBsD,UAArB,CAAgCpE,IAAhC,CAAqCyB,IAArC,CAA0C2C,UAA1C,CAAqDtE,GAArD,CAAyD2B,IAAzD,CAA8DgD,EAD1D,CADH,CAT0B;AAc/B9E,yBAAK,EAAE,CACL6E,MAAM,CACJ,KAAK1D,YAAL,CAAkB,CAAlB,EAAqBsD,UAArB,CAAgCpE,IAAhC,CAAqCyB,IAArC,CAA0C2C,UAA1C,CAAqDtE,GAArD,CAAyD2B,IAAzD,CACG2C,UADH,CACczE,KADd,CACoB8B,IADpB,CACyBgD,EAFrB,CADD;AAdwB,mBAAd,CAAnB;AAqBD,iBAtBD,MAsBO;AACL,uBAAKlE,WAAL,GAAmB,KAAKnC,EAAL,CAAQsB,KAAR,CAAc;AAC/Bc,2BAAO,EAAE,CAAC,EAAD,EAAK,0DAAWZ,QAAhB,CADsB;AAE/BI,wBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWJ,QAAhB,CAFyB;AAG/BE,uBAAG,EAAE,CAAC,EAAD,CAH0B;AAI/BH,yBAAK,EAAE,CAAC,EAAD;AAJwB,mBAAd,CAAnB;AAMD;;AACD;;AACF,mBAAK,iBAAL;AACE,qBAAK+E,SAAL,CAAeH,IAAf;;AACA,oBAAI9C,IAAJ,EAAU;AACR,uBAAK1B,QAAL,GAAgB,KAAK3B,EAAL,CAAQsB,KAAR,CAAc;AAC5BM,wBAAI,EAAE,CAAC,KAAKc,YAAL,CAAkB,CAAlB,EAAqBsD,UAArB,CAAgCC,IAAjC,EAAuC,0DAAWzE,QAAlD,CADsB;AAE5BK,8BAAU,EAAE,CACV,KAAKa,YAAL,CAAkB,CAAlB,EAAqBsD,UAArB,CAAgCnE,UADtB,EAEV,0DAAWL,QAFD,CAFgB;AAM5BE,uBAAG,EAAE,CACH0E,MAAM,CAAC,KAAK1D,YAAL,CAAkB,CAAlB,EAAqBsD,UAArB,CAAgCtE,GAAhC,CAAoC2B,IAApC,CAAyCgD,EAA1C,CADH,EAEH,0DAAW7E,QAFR,CANuB;AAU5BD,yBAAK,EAAE,CACL6E,MAAM,CACJ,KAAK1D,YAAL,CAAkB,CAAlB,EAAqBsD,UAArB,CAAgCtE,GAAhC,CAAoC2B,IAApC,CAAyC2C,UAAzC,CAAoDzE,KAApD,CAA0D8B,IAA1D,CACGgD,EAFC,CADD,EAKL,0DAAW7E,QALN;AAVqB,mBAAd,CAAhB;AAkBD,iBAnBD,MAmBO;AACL,uBAAKG,QAAL,GAAgB,KAAK3B,EAAL,CAAQsB,KAAR,CAAc;AAC5BM,wBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWJ,QAAhB,CADsB;AAE5BK,8BAAU,EAAE,CAAC,EAAD,EAAK,0DAAWL,QAAhB,CAFgB;AAG5BE,uBAAG,EAAE,CAAC,EAAD,EAAK,0DAAWF,QAAhB,CAHuB;AAI5BD,yBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB;AAJqB,mBAAd,CAAhB;AAMD;;AACD;;AACF,mBAAK,cAAL;AACE,qBAAK+E,QAAL,CAAcJ,IAAd;;AACA,oBAAI9C,IAAJ,EAAU;AACR,uBAAK5B,OAAL,GAAe,KAAKzB,EAAL,CAAQsB,KAAR,CAAc;AAC3BI,uBAAG,EAAE,CAAC,KAAKgB,YAAL,CAAkB,CAAlB,EAAqBsD,UAArB,CAAgCC,IAAjC,EAAuC,0DAAWzE,QAAlD,CADsB;AAE3BD,yBAAK,EAAE,CACL6E,MAAM,CAAC,KAAK1D,YAAL,CAAkB,CAAlB,EAAqBsD,UAArB,CAAgCzE,KAAhC,CAAsC8B,IAAtC,CAA2CgD,EAA5C,CADD,EAEL,0DAAW7E,QAFN;AAFoB,mBAAd,CAAf;AAOD,iBARD,MAQO;AACL,uBAAKC,OAAL,GAAe,KAAKzB,EAAL,CAAQsB,KAAR,CAAc;AAC3BI,uBAAG,EAAE,CAAC,EAAD,EAAK,0DAAWF,QAAhB,CADsB;AAE3BD,yBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB;AAFoB,mBAAd,CAAf;AAID;;AACD;;AACF,mBAAK,iBAAL;AACE,qBAAKgF,UAAL,CAAgBL,IAAhB;;AACA,oBAAI9C,IAAJ,EAAU;AACR,uBAAKhC,SAAL,GAAiB,KAAKrB,EAAL,CAAQsB,KAAR,CAAc;AAC7BC,yBAAK,EAAE,CAAC,KAAKmB,YAAL,CAAkB,CAAlB,EAAqBsD,UAArB,CAAgCC,IAAjC,EAAuC,0DAAWzE,QAAlD;AADsB,mBAAd,CAAjB;AAGD,iBAJD,MAIO;AACL,uBAAKH,SAAL,GAAiB,KAAKrB,EAAL,CAAQsB,KAAR,CAAc;AAC7BC,yBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB;AADsB,mBAAd,CAAjB;AAGD;;AACD;;AACF,mBAAK,kBAAL;AACE,qBAAKiF,WAAL,CAAiBN,IAAjB;;AACA,oBAAI9C,IAAJ,EAAU;AACR,uBAAKvB,UAAL,GAAkB,KAAK9B,EAAL,CAAQsB,KAAR,CAAc;AAC9BS,0BAAM,EAAE,CAAC,KAAKW,YAAL,CAAkB,CAAlB,EAAqBsD,UAArB,CAAgCC,IAAjC,EAAuC,0DAAWzE,QAAlD,CADsB;AAE9BD,yBAAK,EAAE,CACL,KAAKmB,YAAL,CAAkB,CAAlB,EAAqBsD,UAArB,CAAgCzE,KAAhC,CAAsC8B,IAAtC,CAA2CgD,EADtC,EAEL,0DAAW7E,QAFN;AAFuB,mBAAd,CAAlB;AAOD,iBARD,MAQO;AACL,uBAAKM,UAAL,GAAkB,KAAK9B,EAAL,CAAQsB,KAAR,CAAc;AAC9BS,0BAAM,EAAE,CAAC,EAAD,EAAK,0DAAWP,QAAhB,CADsB;AAE9BD,yBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB;AAFuB,mBAAd,CAAlB;AAID;;AACD;;AACF,mBAAK,gBAAL;AACE,qBAAKkF,SAAL,CAAeP,IAAf;;AACA,oBAAI9C,IAAJ,EAAU;AACR,uBAAKrB,QAAL,GAAgB,KAAKhC,EAAL,CAAQsB,KAAR,CAAc;AAC5BW,wBAAI,EAAE,CAAC,KAAKS,YAAL,CAAkB,CAAlB,EAAqBsD,UAArB,CAAgCC,IAAjC,EAAuC,0DAAWzE,QAAlD,CADsB;AAE5BU,yBAAK,EAAE,C,YACL,KAAKQ,YAAL,CAAkB,CAAlB,EAAqBsD,UAArB,CAAgC9D,K,MAAK,I,IAAA,a,GAAA,M,GAAA,GAAEmB,I,MAAI,I,IAAA,a,GAAA,M,GAAA,GAAEgD,EADxC,EAEL,0DAAW7E,QAFN;AAFqB,mBAAd,CAAhB;AAOA,uBAAKmF,QAAL,GAAgB,wBAAKjE,YAAL,CAAkB,CAAlB,EAAqBsD,UAArB,CAAgC9D,KAAhC,MAAqC,IAArC,IAAqC,aAArC,GAAqC,MAArC,GAAqC,GAAEmB,IAAvC,MAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GACvD2C,UADY,MACF,IADE,IACF,aADE,GACF,MADE,GACF,GAAEhD,GADA,IAEZ,UAAG,uEAAYiC,MAAf,KAAuB,kBACzB,KAAKvC,YAAL,CAAkB,CAAlB,EAAqBsD,UAArB,CAAgC9D,KADP,MACY,IADZ,IACY,aADZ,GACY,MADZ,GACY,GAAEmB,IADd,MACkB,IADlB,IACkB,aADlB,GACkB,MADlB,GACkB,GAAE2C,UADpB,MAC8B,IAD9B,IAC8B,aAD9B,GAC8B,MAD9B,GAC8B,GAAEhD,GADvD,CAFY,GAIZ,IAJJ;AAKD,iBAbD,MAaO;AACL,uBAAKhB,QAAL,GAAgB,KAAKhC,EAAL,CAAQsB,KAAR,CAAc;AAC5BW,wBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWT,QAAhB,CADsB;AAE5BU,yBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWV,QAAhB;AAFqB,mBAAd,CAAhB;AAIA,uBAAKmF,QAAL,GAAgB,IAAhB;AACD;;AACD;AApIJ;AAsID,WAnf0B,CAof3B;;AApf2B;AAAA;AAAA,iBAqf3B,kBAASd,KAAT,EAAqB;AACnB,iBAAK9E,IAAL,GAAY,EAAZ;;AACA,iBAAK,IAAI6F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,KAAK,CAACgB,MAAN,CAAaC,KAAb,CAAmBtC,MAAvC,EAA+CoC,CAAC,EAAhD,EAAoD;AAClD,mBAAK7F,IAAL,CAAUgG,IAAV,CAAelB,KAAK,CAACgB,MAAN,CAAaC,KAAb,CAAmBF,CAAnB,CAAf;AACD;;AACD9D,mBAAO,CAACC,GAAR,CAAY,KAAKhC,IAAjB;AACD,WA3f0B,CA4f3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA9hB2B;AAAA;AAAA,iBA+hB3B,mBAAU8E,KAAV,EAAiB;AACf,iBAAKhC,OAAL,CAAa,KAAKrD,KAAlB,EAAyB,KAAKQ,QAA9B,EAAuC6E,KAAK,CAACgB,MAAN,CAAaG,KAApD;AACD;AAjiB0B;AAAA;AAAA,iBAkiB3B,oBAAWnB,KAAX,EAAkB;AAChB,iBAAKlC,QAAL,CAAc,KAAKnD,KAAnB,EAA0B,KAAKQ,QAA/B,EAAwC6E,KAAK,CAACgB,MAAN,CAAaG,KAArD;AACD;AApiB0B;AAAA;AAAA,iBAqiB3B,uBAAc;AAAA;;AACZ,gBAAIvC,IAAI,GAAG,EAAX;AACA3B,mBAAO,CAACC,GAAR,CAAY,KAAK1B,SAAL,CAAe2F,KAA3B;;AACA,gBAAI,CAAC,KAAK5G,aAAV,EAAyB;AACvB,mBAAKP,WAAL,CACGoH,WADH,CACe,KAAK5F,SAAL,CAAe2F,KAD9B,EACqC,KAAKtE,YAAL,CAAkB,CAAlB,EAAqB2D,EAD1D,EAEGlD,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BqB,oBAAI,GAAGrB,MAAM,CAACC,IAAd;AACAP,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,oBAAIA,MAAM,CAACC,IAAP,CAAY6D,WAAhB,EAA6B;AAC3B,wBAAI,CAACjH,MAAL,CAAY4E,OAAZ,CAAoB,UAApB;;AACA,wBAAI,CAACW,OAAL,CAAa2B,WAAb;;AACA,wBAAI,CAACX,UAAL,CAAgBY,IAAhB;;AACA,wBAAI,CAAC/F,SAAL,CAAegG,KAAf;;AACA,wBAAI,CAACxH,WAAL,CACGkE,SADH,CACa,MAAI,CAACvD,KADlB,EACyB,MAAI,CAACQ,QAD9B,EAEGkC,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvCN,2BAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBK,MAAM,CAACC,IAAP,CAAYW,MAAZ,CAAmBX,IAA5C;AACA,0BAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYW,MAAZ,CAAmBX,IAAlC;AACD,mBALH;AAMD,iBAXD,MAWO;AACL,sBAAID,MAAM,CAACkE,MAAP,CAAc,CAAd,EAAiBC,UAAjB,CAA4BpC,KAA5B,CAAkCqC,IAAlC,IAA0C,iBAA9C,EAAiE;AAC/D,0BAAI,CAACvH,MAAL,CAAYkF,KAAZ,CAAkB,4CAAlB;AACD,mBAFD,MAEO;AACL,0BAAI,CAAClF,MAAL,CAAYkF,KAAZ,CAAkB,kCAAlB;AACD;AACF;AACF,eAvBH;AAwBD,aAzBD,MAyBO;AACL,mBAAKtF,WAAL,CAAiB4H,SAAjB,CAA2B,KAAKpG,SAAL,CAAe2F,KAA1C,EAAiD7D,SAAjD,CACE,UAACC,MAAD,EAAiB;AACfqB,oBAAI,GAAGrB,MAAM,CAACC,IAAd;AACAP,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,oBAAIA,MAAM,CAACC,IAAP,CAAYqE,WAAhB,EAA6B;AAC3B,wBAAI,CAACzH,MAAL,CAAY4E,OAAZ,CAAoB,UAApB;;AACA,wBAAI,CAACW,OAAL,CAAa2B,WAAb;;AACA,wBAAI,CAACX,UAAL,CAAgBY,IAAhB;;AACA,wBAAI,CAAC/F,SAAL,CAAegG,KAAf;;AACA,wBAAI,CAACxH,WAAL,CACGkE,SADH,CACa,MAAI,CAACvD,KADlB,EACyB,MAAI,CAACQ,QAD9B,EAEGkC,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvCN,2BAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBK,MAAM,CAACC,IAAP,CAAYW,MAAZ,CAAmBX,IAA5C;AACA,0BAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYW,MAAZ,CAAmBX,IAAlC;AACD,mBALH;AAMD,iBAXD,MAWO;AACL,sBAAID,MAAM,CAACkE,MAAP,CAAc,CAAd,EAAiBC,UAAjB,CAA4BpC,KAA5B,CAAkCqC,IAAlC,IAA0C,iBAA9C,EAAiE;AAC/D,0BAAI,CAACvH,MAAL,CAAYkF,KAAZ,CAAkB,4CAAlB;AACD,mBAFD,MAEO;AACL,0BAAI,CAAClF,MAAL,CAAYkF,KAAZ,CAAkB,kCAAlB;AACD;AACF;AACF,eAtBH,EAuBE,UAACA,KAAD,EAAW;AACTrC,uBAAO,CAACC,GAAR,CAAYoC,KAAZ;;AACA,sBAAI,CAAClF,MAAL,CAAYkF,KAAZ,CAAkB,SAAlB;AACD,eA1BH;AA4BD;AACF;AA/lB0B;AAAA;AAAA,iBAgmB3B,qBAAY;AAAA;;AACV,gBAAIV,IAAI,GAAG,EAAX;AACA3B,mBAAO,CAACC,GAAR,CAAY,KAAKtB,OAAL,CAAauF,KAAzB;;AACA,gBAAI,CAAC,KAAK5G,aAAV,EAAyB;AACvB,mBAAKP,WAAL,CACG8H,SADH,CACa,KAAKlG,OAAL,CAAauF,KAD1B,EACiC,KAAKtE,YAAL,CAAkB,CAAlB,EAAqB2D,EADtD,EAEGlD,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BqB,oBAAI,GAAGrB,MAAM,CAACC,IAAd;AACAP,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,oBAAIA,MAAM,CAACC,IAAP,CAAYuE,SAAhB,EAA2B;AACzB,yBAAI,CAAC3H,MAAL,CAAY4E,OAAZ,CAAoB,UAApB;;AACA,yBAAI,CAACW,OAAL,CAAa2B,WAAb;;AAEA,yBAAI,CAACZ,QAAL,CAAca,IAAd;;AACA,yBAAI,CAAC3F,OAAL,CAAa4F,KAAb;;AACA,yBAAI,CAACxH,WAAL,CAAiBgE,OAAjB,CAAyB,OAAI,CAACrD,KAA9B,EAAqC,OAAI,CAACQ,QAA1C,EAAoDkC,YAApD,CAAiEC,SAAjE,CAA2E,UAACC,MAAD,EAAiB;AAC1FN,2BAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBK,MAAM,CAACC,IAAP,CAAYS,IAAZ,CAAiBT,IAAxC;AACA,2BAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYS,IAAZ,CAAiBT,IAAhC;AACD,mBAHD;AAID,iBAVD,MAUO;AACL,sBAAID,MAAM,CAACkE,MAAP,CAAc,CAAd,EAAiBC,UAAjB,CAA4BpC,KAA5B,CAAkCqC,IAAlC,IAA0C,iBAA9C,EAAiE;AAC/D,2BAAI,CAACvH,MAAL,CAAYkF,KAAZ,CAAkB,4CAAlB;AACD,mBAFD,MAEO;AACL,2BAAI,CAAClF,MAAL,CAAYkF,KAAZ,CAAkB,kCAAlB;AACD;AACF;AACF,eAtBH;AAuBD,aAxBD,MAwBO;AACL,mBAAKtF,WAAL,CAAiBgI,MAAjB,CAAwB,KAAKpG,OAAL,CAAauF,KAArC,EAA4C7D,SAA5C,CAAsD,UAACC,MAAD,EAAiB;AACrEqB,oBAAI,GAAGrB,MAAM,CAACC,IAAd;AACAP,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,oBAAIA,MAAM,CAACC,IAAP,CAAYyE,SAAhB,EAA2B;AACzB,yBAAI,CAAC7H,MAAL,CAAY4E,OAAZ,CAAoB,UAApB;;AACA,yBAAI,CAACW,OAAL,CAAa2B,WAAb;;AACA,yBAAI,CAACZ,QAAL,CAAca,IAAd;;AACA,yBAAI,CAAC3F,OAAL,CAAa4F,KAAb;;AACA,yBAAI,CAACxH,WAAL,CAAiBgE,OAAjB,CAAyB,OAAI,CAACrD,KAA9B,EAAqC,OAAI,CAACQ,QAA1C,EAAoDkC,YAApD,CAAiEC,SAAjE,CAA2E,UAACC,MAAD,EAAiB;AAC1FN,2BAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBK,MAAM,CAACC,IAAP,CAAYS,IAAZ,CAAiBT,IAAxC;AACA,2BAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYS,IAAZ,CAAiBT,IAAhC;AACD,mBAHD;AAID,iBATD,MASO;AACL,sBAAID,MAAM,CAACkE,MAAP,CAAc,CAAd,EAAiBC,UAAjB,CAA4BpC,KAA5B,CAAkCqC,IAAlC,IAA0C,iBAA9C,EAAiE;AAC/D,2BAAI,CAACvH,MAAL,CAAYkF,KAAZ,CAAkB,4CAAlB;AACD,mBAFD,MAEO;AACL,2BAAI,CAAClF,MAAL,CAAYkF,KAAZ,CAAkB,kCAAlB;AACD;AACF;AACF,eAnBD;AAoBD;AACF;AAjpB0B;AAAA;AAAA,iBAkpB3B,sBAAa;AAAA;;AACX,gBAAIV,IAAI,GAAG,EAAX;AACA3B,mBAAO,CAACC,GAAR,CAAY,KAAKpB,QAAL,CAAcqF,KAA1B;;AACA,gBAAI,CAAC,KAAK5G,aAAV,EAAyB;AACvB,mBAAKP,WAAL,CACGkI,UADH,CACc,KAAKpG,QAAL,CAAcqF,KAD5B,EACmC,KAAKtE,YAAL,CAAkB,CAAlB,EAAqB2D,EADxD,EAEGlD,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BqB,oBAAI,GAAGrB,MAAM,CAACC,IAAd;AACAP,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,oBAAIA,MAAM,CAACC,IAAP,CAAY2E,UAAhB,EAA4B;AAC1B,yBAAI,CAAC/H,MAAL,CAAY4E,OAAZ,CAAoB,UAApB;;AACA,yBAAI,CAACW,OAAL,CAAa2B,WAAb;;AACA,yBAAI,CAACb,SAAL,CAAec,IAAf;;AACA,yBAAI,CAACzF,QAAL,CAAc0F,KAAd;;AACA,yBAAI,CAACxH,WAAL,CACG8D,QADH,CACY,OAAI,CAACnD,KADjB,EACwB,OAAI,CAACQ,QAD7B,EAEGkC,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvCN,2BAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBP,IAA1C;AACA,2BAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBP,IAAjC;AACD,mBALH;AAMD,iBAXD,MAWO;AACL,sBAAID,MAAM,CAACkE,MAAP,CAAc,CAAd,EAAiBC,UAAjB,CAA4BpC,KAA5B,CAAkCqC,IAAlC,IAA0C,iBAA9C,EAAiE;AAC/D,2BAAI,CAACvH,MAAL,CAAYkF,KAAZ,CAAkB,4CAAlB;AACD,mBAFD,MAEO;AACL,2BAAI,CAAClF,MAAL,CAAYkF,KAAZ,CAAkB,kCAAlB;AACD;AACF;AACF,eAvBH;AAwBD,aAzBD,MAyBO;AACL,mBAAKtF,WAAL,CAAiBoI,OAAjB,CAAyB,KAAKtG,QAAL,CAAcqF,KAAvC,EAA8C7D,SAA9C,CAAwD,UAACC,MAAD,EAAiB;AACvEqB,oBAAI,GAAGrB,MAAM,CAACC,IAAd;AACAP,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,oBAAIA,MAAM,CAACC,IAAP,CAAY6E,UAAhB,EAA4B;AAC1B,yBAAI,CAACjI,MAAL,CAAY4E,OAAZ,CAAoB,UAApB;;AACA,yBAAI,CAACW,OAAL,CAAa2B,WAAb;;AACA,yBAAI,CAACb,SAAL,CAAec,IAAf;;AACA,yBAAI,CAACzF,QAAL,CAAc0F,KAAd;;AACA,yBAAI,CAACxH,WAAL,CAAiB8D,QAAjB,CAA0B,OAAI,CAACnD,KAA/B,EAAsC,OAAI,CAACQ,QAA3C,EAAqDkC,YAArD,CAAkEC,SAAlE,CAA4E,UAACC,MAAD,EAAiB;AAC3FN,2BAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBP,IAA1C;AACA,2BAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBP,IAAjC;AACD,mBAHD;AAID,iBATD,MASO;AACL,sBAAID,MAAM,CAACkE,MAAP,CAAc,CAAd,EAAiBC,UAAjB,CAA4BpC,KAA5B,CAAkCqC,IAAlC,IAA0C,iBAA9C,EAAiE;AAC/D,2BAAI,CAACvH,MAAL,CAAYkF,KAAZ,CAAkB,4CAAlB;AACD,mBAFD,MAEO;AACL,2BAAI,CAAClF,MAAL,CAAYkF,KAAZ,CAAkB,kCAAlB;AACD;AACF;AACF,eAnBD;AAoBD;AACF;AApsB0B;AAAA;AAAA,iBAqsB3B,wBAAe;AAAA;;AACb,gBAAIV,IAAI,GAAG,EAAX;AACA3B,mBAAO,CAACC,GAAR,CAAY,KAAKjB,UAAL,CAAgBkF,KAA5B;;AACA,gBAAI,CAAC,KAAK5G,aAAV,EAAyB;AACvB,mBAAKP,WAAL,CACGsI,YADH,CACgB,KAAKrG,UAAL,CAAgBkF,KADhC,EACuC,KAAKtE,YAAL,CAAkB,CAAlB,EAAqB2D,EAD5D,EAEGlD,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BqB,oBAAI,GAAGrB,MAAM,CAACC,IAAd;AACAP,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,oBAAIA,MAAM,CAACC,IAAP,CAAY+E,YAAhB,EAA8B;AAC5B,yBAAI,CAACnI,MAAL,CAAY4E,OAAZ,CAAoB,UAApB;;AACA,yBAAI,CAACW,OAAL,CAAa2B,WAAb;;AACA,yBAAI,CAACV,WAAL,CAAiBW,IAAjB;;AACA,yBAAI,CAACtF,UAAL,CAAgBuF,KAAhB;;AACA,yBAAI,CAACxH,WAAL,CACGoE,UADH,CACc,OAAI,CAACzD,KADnB,EAC0B,OAAI,CAACQ,QAD/B,EAEGkC,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvCN,2BAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BK,MAAM,CAACC,IAAP,CAAYa,OAAZ,CAAoBb,IAA9C;AACA,2BAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYa,OAAZ,CAAoBb,IAAnC;AACD,mBALH;AAMD,iBAXD,MAWO;AACL,sBAAID,MAAM,CAACkE,MAAP,CAAc,CAAd,EAAiBC,UAAjB,CAA4BpC,KAA5B,CAAkCqC,IAAlC,IAA0C,iBAA9C,EAAiE;AAC/D,2BAAI,CAACvH,MAAL,CAAYkF,KAAZ,CAAkB,4CAAlB;AACD,mBAFD,MAEO;AACL,2BAAI,CAAClF,MAAL,CAAYkF,KAAZ,CAAkB,kCAAlB;AACD;AACF;AACF,eAvBH;AAwBD,aAzBD,MAyBO;AACL,mBAAKtF,WAAL,CACGwI,SADH,CACa,KAAKvG,UAAL,CAAgBkF,KAD7B,EAEG7D,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BqB,oBAAI,GAAGrB,MAAM,CAACC,IAAd;AACAP,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,oBAAIA,MAAM,CAACC,IAAP,CAAYiF,YAAhB,EAA8B;AAC5B,yBAAI,CAACrI,MAAL,CAAY4E,OAAZ,CAAoB,UAApB;;AACA,yBAAI,CAACW,OAAL,CAAa2B,WAAb;;AACA,yBAAI,CAACV,WAAL,CAAiBW,IAAjB;;AACA,yBAAI,CAACtF,UAAL,CAAgBuF,KAAhB;;AACA,yBAAI,CAACxH,WAAL,CACGoE,UADH,CACc,OAAI,CAACzD,KADnB,EAC0B,OAAI,CAACQ,QAD/B,EAEGkC,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvCN,2BAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BK,MAAM,CAACC,IAAP,CAAYa,OAAZ,CAAoBb,IAA9C;AACA,2BAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYa,OAAZ,CAAoBb,IAAnC;AACD,mBALH;AAMD,iBAXD,MAWO;AACL,sBAAID,MAAM,CAACkE,MAAP,CAAc,CAAd,EAAiBC,UAAjB,CAA4BpC,KAA5B,CAAkCqC,IAAlC,IAA0C,iBAA9C,EAAiE;AAC/D,2BAAI,CAACvH,MAAL,CAAYkF,KAAZ,CAAkB,4CAAlB;AACD,mBAFD,MAEO;AACL,2BAAI,CAAClF,MAAL,CAAYkF,KAAZ,CAAkB,kCAAlB;AACD;AACF;AACF,eAvBH;AAwBD;AACF;AA3vB0B;AAAA;AAAA,iBA4vB3B,sBAAa;AAAA;;AACX,gBAAIV,IAAI,GAAG,EAAX;AACA,iBAAKpE,UAAL,GAAkB,IAAlB;AACAyC,mBAAO,CAACC,GAAR,CAAY,KAAKf,QAAL,CAAcgF,KAA1B;;AACA,gBAAI,CAAC,KAAK5G,aAAV,EAAyB;AACvB,kBAAI,KAAKW,IAAT,EAAe;AACb,qBAAKlB,WAAL,CAAiB0I,MAAjB,CAAwB,KAAKxH,IAA7B,EAAmCoC,SAAnC,CAA6C,UAACqF,QAAD,EAAmB;;;AAC9D,sBAAIA,QAAQ,CAAC5D,MAAT,IAAmB,GAAvB,EAA4B;AAC1B9B,2BAAO,CAACC,GAAR,CAAYyF,QAAZ;;AACA,2BAAI,CAAC3I,WAAL,CACG4I,UADH,CAEI,OAAI,CAACzG,QAAL,CAAcgF,KAFlB,EAGI,OAAI,CAACtE,YAAL,CAAkB,CAAlB,EAAqB2D,EAHzB,EAG2B,MACvBmC,QAAQ,CAAC7D,IAAT,CAAc,CAAd,CADuB,MACP,IADO,IACP,aADO,GACP,MADO,GACP,GAAE0B,EAJtB,EAMGlD,SANH,CAOI,UAACC,MAAD,EAAiB;AACfqB,0BAAI,GAAGrB,MAAM,CAACC,IAAd;AACAP,6BAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,0BAAIA,MAAM,CAACC,IAAP,CAAYqF,UAAhB,EAA4B;AAC1B,+BAAI,CAACzI,MAAL,CAAY4E,OAAZ,CAAoB,UAApB;;AACA,+BAAI,CAACW,OAAL,CAAa2B,WAAb;;AACA,+BAAI,CAACT,SAAL,CAAeU,IAAf;;AACA,+BAAI,CAACpF,QAAL,CAAcqF,KAAd;;AACA,+BAAI,CAAChH,UAAL,GAAkB,KAAlB;;AACA,+BAAI,CAACR,WAAL,CACGsE,QADH,CACY,OAAI,CAAC3D,KADjB,EACwB,OAAI,CAACQ,QAD7B,EAEGkC,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvCN,iCAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAM,CAACC,IAAP,CAAYe,KAAZ,CAAkBf,IAA1C;AACA,iCAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYe,KAAZ,CAAkBf,IAAjC;AACD,yBALH;AAMD,uBAZD,MAYO;AACL,4BACED,MAAM,CAACkE,MAAP,CAAc,CAAd,EAAiBC,UAAjB,CAA4BpC,KAA5B,CAAkCqC,IAAlC,IACA,iBAFF,EAGE;AACA,iCAAI,CAACvH,MAAL,CAAYkF,KAAZ,CACE,4CADF;;AAGA,iCAAI,CAAC9E,UAAL,GAAkB,KAAlB;AACD,yBARD,MAQO;AACL,iCAAI,CAACJ,MAAL,CAAYkF,KAAZ,CAAkB,kCAAlB;;AACA,iCAAI,CAAC9E,UAAL,GAAkB,KAAlB;AACD;AACF;AACF,qBApCL,EAqCI,UAAC8E,KAAD,EAAW;AACT,6BAAI,CAAC9E,UAAL,GAAkB,KAAlB;AACD,qBAvCL;AAyCD;AACF,iBA7CD;AA8CD,eA/CD,MA+CO;AACL,qBAAKR,WAAL,CACG4I,UADH,CACc,KAAKzG,QAAL,CAAcgF,KAD5B,EACmC,KAAKtE,YAAL,CAAkB,CAAlB,EAAqB2D,EADxD,EAC4D,IAD5D,EAEGlD,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BqB,sBAAI,GAAGrB,MAAM,CAACC,IAAd;AACAP,yBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,sBAAIA,MAAM,CAACC,IAAP,CAAYqF,UAAhB,EAA4B;AAC1B,2BAAI,CAACzI,MAAL,CAAY4E,OAAZ,CAAoB,UAApB;;AACA,2BAAI,CAACW,OAAL,CAAa2B,WAAb;;AACA,2BAAI,CAACT,SAAL,CAAeU,IAAf;;AACA,2BAAI,CAACpF,QAAL,CAAcqF,KAAd;;AACA,2BAAI,CAACxH,WAAL,CACGsE,QADH,CACY,OAAI,CAAC3D,KADjB,EACwB,OAAI,CAACQ,QAD7B,EAEGkC,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvCN,6BAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAM,CAACC,IAAP,CAAYe,KAAZ,CAAkBf,IAA1C;AACA,6BAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYe,KAAZ,CAAkBf,IAAjC;AACD,qBALH;AAMD,mBAXD,MAWO;AACL,wBAAID,MAAM,CAACkE,MAAP,CAAc,CAAd,EAAiBC,UAAjB,CAA4BpC,KAA5B,CAAkCqC,IAAlC,IAA0C,iBAA9C,EAAiE;AAC/D,6BAAI,CAACvH,MAAL,CAAYkF,KAAZ,CAAkB,4CAAlB;AACD,qBAFD,MAEO;AACL,6BAAI,CAAClF,MAAL,CAAYkF,KAAZ,CAAkB,kCAAlB;AACD;AACF;AACF,iBAvBH;AAwBD;AACF,aA1ED,MA0EO;AACL,mBAAKtF,WAAL,CAAiB0I,MAAjB,CAAwB,KAAKxH,IAA7B,EAAmCoC,SAAnC,CAA6C,UAACqF,QAAD,EAAmB;;;AAC9D,oBAAIA,QAAQ,CAAC5D,MAAT,IAAmB,GAAvB,EAA4B;AAC1B9B,yBAAO,CAACC,GAAR,CAAYyF,QAAZ;;AACA,yBAAI,CAAC3I,WAAL,CACG8I,OADH,CACW,OAAI,CAAC3G,QAAL,CAAcgF,KADzB,EACgC,CAAF,KAAEwB,QAAQ,CAAC7D,IAAT,CAAc,CAAd,OAAgB,IAAhB,IAAgB,aAAhB,GAAgB,MAAhB,GAAgB,GAAE0B,EADlD,EAEGlD,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BqB,wBAAI,GAAGrB,MAAM,CAACC,IAAd;AACAP,2BAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,wBAAIA,MAAM,CAACC,IAAP,CAAYuF,UAAhB,EAA4B;AAC1B,6BAAI,CAAC3I,MAAL,CAAY4E,OAAZ,CAAoB,UAApB;;AACA,6BAAI,CAACW,OAAL,CAAa2B,WAAb;;AACA,6BAAI,CAACT,SAAL,CAAeU,IAAf;;AACA,6BAAI,CAACpF,QAAL,CAAcqF,KAAd;;AACA,6BAAI,CAACxH,WAAL,CACGsE,QADH,CACY,OAAI,CAAC3D,KADjB,EACwB,OAAI,CAACQ,QAD7B,EAEGkC,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvCN,+BAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAM,CAACC,IAAP,CAAYe,KAAZ,CAAkBf,IAA1C;AACA,+BAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYe,KAAZ,CAAkBf,IAAjC;AACD,uBALH;AAMD,qBAXD,MAWO;AACL,0BACED,MAAM,CAACkE,MAAP,CAAc,CAAd,EAAiBC,UAAjB,CAA4BpC,KAA5B,CAAkCqC,IAAlC,IAA0C,iBAD5C,EAEE;AACA,+BAAI,CAACvH,MAAL,CAAYkF,KAAZ,CACE,4CADF;AAGD,uBAND,MAMO;AACL,+BAAI,CAAClF,MAAL,CAAYkF,KAAZ,CAAkB,kCAAlB;AACD;AACF;AACF,mBA3BH;AA4BD;AACF,eAhCD;AAiCD;AACF;AA72B0B;AAAA;AAAA,iBA82B3B,wBAAe;AAAA;;AACb,gBAAIV,IAAI,GAAG,EAAX;AACA3B,mBAAO,CAACC,GAAR,CAAY,KAAKZ,WAAL,CAAiB6E,KAA7B;;AACA,gBAAI,CAAC,KAAK5G,aAAV,EAAyB;AACvB,mBAAKP,WAAL,CACGgJ,aADH,CACiB,KAAK1G,WAAL,CAAiB6E,KADlC,EACyC,KAAKtE,YAAL,CAAkB,CAAlB,EAAqB2D,EAD9D,EAEGlD,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BqB,oBAAI,GAAGrB,MAAM,CAACC,IAAd;AACAP,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,oBAAIA,MAAM,CAACC,IAAP,CAAYyF,aAAhB,EAA+B;AAC7B,yBAAI,CAAC7I,MAAL,CAAY4E,OAAZ,CAAoB,UAApB;;AACA,yBAAI,CAACW,OAAL,CAAa2B,WAAb;;AACA,yBAAI,CAACjB,YAAL,CAAkBkB,IAAlB;;AACA,yBAAI,CAACjF,WAAL,CAAiBkF,KAAjB;;AACA,yBAAI,CAACxH,WAAL,CACGoD,WADH,CACe,OAAI,CAACzC,KADpB,EAC2B,OAAI,CAACQ,QADhC,EAEGkC,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvCN,2BAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BK,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBD,IAAhD;AACA,2BAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBD,IAApC;AACD,mBALH;AAMD,iBAXD,MAWO;AACL,sBAAID,MAAM,CAACkE,MAAP,CAAc,CAAd,EAAiBC,UAAjB,CAA4BpC,KAA5B,CAAkCqC,IAAlC,IAA0C,iBAA9C,EAAiE;AAC/D,2BAAI,CAACvH,MAAL,CAAYkF,KAAZ,CAAkB,4CAAlB;AACD,mBAFD,MAEO;AACL,2BAAI,CAAClF,MAAL,CAAYkF,KAAZ,CAAkB,kCAAlB;AACD;AACF;AACF,eAvBH;AAwBD,aAzBD,MAyBO;AACL,mBAAKtF,WAAL,CACGkJ,UADH,CACc,KAAK5G,WAAL,CAAiB6E,KAD/B,EAEG7D,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BqB,oBAAI,GAAGrB,MAAM,CAACC,IAAd;AACAP,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,oBAAIA,MAAM,CAACC,IAAP,CAAY2F,aAAhB,EAA+B;AAC7B,yBAAI,CAAC/I,MAAL,CAAY4E,OAAZ,CAAoB,UAApB;;AACA,yBAAI,CAACW,OAAL,CAAa2B,WAAb;;AACA,yBAAI,CAACjB,YAAL,CAAkBkB,IAAlB;;AACA,yBAAI,CAACjF,WAAL,CAAiBkF,KAAjB;;AACA,yBAAI,CAACxH,WAAL,CACGoD,WADH,CACe,OAAI,CAACzC,KADpB,EAC2B,OAAI,CAACQ,QADhC,EAEGkC,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvCN,2BAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BK,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBD,IAAhD;AACA,2BAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBD,IAApC;AACD,mBALH;AAMD,iBAXD,MAWO;AACL,sBAAID,MAAM,CAACkE,MAAP,CAAc,CAAd,EAAiBC,UAAjB,CAA4BpC,KAA5B,CAAkCqC,IAAlC,IAA0C,iBAA9C,EAAiE;AAC/D,2BAAI,CAACvH,MAAL,CAAYkF,KAAZ,CAAkB,4CAAlB;AACD,mBAFD,MAEO;AACL,2BAAI,CAAClF,MAAL,CAAYkF,KAAZ,CAAkB,kCAAlB;AACD;AACF;AACF,eAvBH;AAwBD;AACF;AAp6B0B;AAAA;AAAA,iBAq6B3B,wBAAe;AAAA;;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACArC,mBAAO,CAACC,GAAR,CAAY,KAAKtB,OAAL,CAAauF,KAAzB;;AACA,oBAAQ,KAAKjH,MAAL,CAAYiD,GAApB;AACE,mBAAK,mBAAL;AACE,qBAAKnD,WAAL,CACGoJ,aADH,CACiB,KAAKvG,YAAL,CAAkB,CAAlB,EAAqB2D,EADtC,EAEGlD,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BN,yBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,sBAAIA,MAAM,CAACC,IAAP,CAAY4F,aAAhB,EAA+B;AAC7B,2BAAI,CAAChJ,MAAL,CAAY4E,OAAZ,CAAoB,UAApB;;AACA,2BAAI,CAACW,OAAL,CAAa2B,WAAb;;AACA,2BAAI,CAAC+B,WAAL,CAAiB9B,IAAjB;;AACA,2BAAI,CAACvH,WAAL,CACGoD,WADH,CACe,OAAI,CAACzC,KADpB,EAC2B,OAAI,CAACQ,QADhC,EAEGkC,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvC,6BAAI,CAACG,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBD,IAApC;AACD,qBAJH;AAKD,mBATD,MASO;AACL,2BAAI,CAACpD,MAAL,CAAYkF,KAAZ,CAAkB,SAAlB;AACD;AACF,iBAhBH;AAiBA;;AACF,mBAAK,iBAAL;AACE,qBAAKtF,WAAL,CACGsJ,UADH,CACc,KAAKzG,YAAL,CAAkB,CAAlB,EAAqB2D,EADnC,EAEGlD,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BN,yBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,sBAAIA,MAAM,CAACC,IAAP,CAAY8F,UAAhB,EAA4B;AAC1B,2BAAI,CAAClJ,MAAL,CAAY4E,OAAZ,CAAoB,UAApB;;AACA,2BAAI,CAACW,OAAL,CAAa2B,WAAb;;AACA,2BAAI,CAAC+B,WAAL,CAAiB9B,IAAjB;;AACA,2BAAI,CAACvH,WAAL,CACG8D,QADH,CACY,OAAI,CAACnD,KADjB,EACwB,OAAI,CAACQ,QAD7B,EAEGkC,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvC,6BAAI,CAACG,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBP,IAAjC;AACD,qBAJH;AAKD,mBATD,MASO;AACL,2BAAI,CAACpD,MAAL,CAAYkF,KAAZ,CAAkB,SAAlB;AACD;AACF,iBAhBH;AAiBA;;AACF,mBAAK,cAAL;AACE,qBAAKtF,WAAL,CACGuJ,SADH,CACa,KAAK1G,YAAL,CAAkB,CAAlB,EAAqB2D,EADlC,EAEGlD,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BN,yBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,sBAAIA,MAAM,CAACC,IAAP,CAAYgG,SAAhB,EAA2B;AACzB,2BAAI,CAACpJ,MAAL,CAAY4E,OAAZ,CAAoB,UAApB;;AACA,2BAAI,CAACW,OAAL,CAAa2B,WAAb;;AACA,2BAAI,CAAC+B,WAAL,CAAiB9B,IAAjB;;AACA,2BAAI,CAACvH,WAAL,CACGgE,OADH,CACW,OAAI,CAACrD,KADhB,EACuB,OAAI,CAACQ,QAD5B,EAEGkC,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvC,6BAAI,CAACG,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYS,IAAZ,CAAiBT,IAAhC;AACD,qBAJH;AAKD,mBATD,MASO;AACL,2BAAI,CAACpD,MAAL,CAAYkF,KAAZ,CAAkB,SAAlB;AACD;AACF,iBAhBH;AAiBA;;AACF,mBAAK,iBAAL;AACE,qBAAKtF,WAAL,CACGyJ,WADH,CACe,KAAK5G,YAAL,CAAkB,CAAlB,EAAqB2D,EADpC,EAEGlD,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BN,yBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,sBAAIA,MAAM,CAACC,IAAP,CAAYiG,WAAhB,EAA6B;AAC3B,2BAAI,CAACrJ,MAAL,CAAY4E,OAAZ,CAAoB,UAApB;;AACA,2BAAI,CAACW,OAAL,CAAa2B,WAAb;;AACA,2BAAI,CAAC+B,WAAL,CAAiB9B,IAAjB;;AACA,2BAAI,CAACvH,WAAL,CACGkE,SADH,CACa,OAAI,CAACvD,KADlB,EACyB,OAAI,CAACQ,QAD9B,EAEGkC,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvC,6BAAI,CAACG,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYW,MAAZ,CAAmBX,IAAlC;AACD,qBAJH;AAKD,mBATD,MASO;AACL,2BAAI,CAACpD,MAAL,CAAYkF,KAAZ,CAAkB,SAAlB;AACD;AACF,iBAhBH;AAiBA;;AACF,mBAAK,kBAAL;AACE,qBAAKtF,WAAL,CACG0J,YADH,CACgB,KAAK7G,YAAL,CAAkB,CAAlB,EAAqB2D,EADrC,EAEGlD,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BN,yBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,sBAAIA,MAAM,CAACC,IAAP,CAAYkG,YAAhB,EAA8B;AAC5B,2BAAI,CAACtJ,MAAL,CAAY4E,OAAZ,CAAoB,UAApB;;AACA,2BAAI,CAACW,OAAL,CAAa2B,WAAb;;AACA,2BAAI,CAAC+B,WAAL,CAAiB9B,IAAjB;;AACA,2BAAI,CAACvH,WAAL,CACGoE,UADH,CACc,OAAI,CAACzD,KADnB,EAC0B,OAAI,CAACQ,QAD/B,EAEGkC,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvC,6BAAI,CAACG,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYa,OAAZ,CAAoBb,IAAnC;AACD,qBAJH;AAKD,mBATD,MASO;AACL,2BAAI,CAACpD,MAAL,CAAYkF,KAAZ,CAAkB,SAAlB;AACD;AACF,iBAhBH;AAiBA;;AACF,mBAAK,gBAAL;AACE,qBAAKtF,WAAL,CACG2J,UADH,CACc,KAAK9G,YAAL,CAAkB,CAAlB,EAAqB2D,EADnC,EAEGlD,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BN,yBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,sBAAIA,MAAM,CAACC,IAAP,CAAYmG,UAAhB,EAA4B;AAC1B,2BAAI,CAACvJ,MAAL,CAAY4E,OAAZ,CAAoB,UAApB;;AACA,2BAAI,CAACW,OAAL,CAAa2B,WAAb;;AACA,2BAAI,CAAC+B,WAAL,CAAiB9B,IAAjB;;AACA,2BAAI,CAACvH,WAAL,CACGsE,QADH,CACY,OAAI,CAAC3D,KADjB,EACwB,OAAI,CAACQ,QAD7B,EAEGkC,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvC,6BAAI,CAACG,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYe,KAAZ,CAAkBf,IAAjC;AACD,qBAJH;AAKD,mBATD,MASO;AACL,2BAAI,CAACpD,MAAL,CAAYkF,KAAZ,CAAkB,SAAlB;AACD;AACF,iBAhBH;AAiBA;AAlHJ;AAoHD;AA7iC0B;;AAAA;AAAA,S;;;;gBAjBpB;;gBAHA;;gBAAgB;;gBAChB;;gBACA;;;;;;gBAoCN,uD;AAAS,iBAAC,YAAD;;;gBACT,uD;AAAS,iBAAC,UAAD;;;gBACT,uD;AAAS,iBAAC,cAAD;;;gBACT,uD;AAAS,iBAAC,aAAD;;;gBACT,uD;AAAS,iBAAC,WAAD;;;gBACT,uD;AAAS,iBAAC,WAAD;;;gBACT,uD;AAAS,iBAAC,aAAD;;;AAxBCvF,sBAAgB,6DAH5B,gEAAU;AACT6J,gBAAQ,EAAR;AADS,OAAV,CAG4B,E,+EASL,yD,EACN,8D,EACC,sD,EACH,0D,EACI,wD,EAbS,GAAhB7J,gBAAgB,CAAhB;;;;;;;;ACrBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMf,UAAM8J,MAAM,GAAW,CACrB;AACExE,YAAI,EAAE,EADR;AAGEyE,gBAAQ,EAAE,CACR;AACEzE,cAAI,EAAE,EADR;AAEE0E,oBAAU,EAAE;AAFd,SADQ,EAKR;AACE1E,cAAI,EAAE,QADR;AAEE;AACA2E,mBAAS,EAAE,mEAHb;AAIExG,cAAI,EAAE;AACJyG,iBAAK,EAAE,QADH;AAEJC,iBAAK,EAAE;AAFH;AAJR,SALQ,EAcR;AACE7E,cAAI,EAAE,KADR;AAEE;AACA2E,mBAAS,EAAE,mEAHb;AAIExG,cAAI,EAAE;AACJyG,iBAAK,EAAE,KADH;AAEJC,iBAAK,EAAE;AAFH;AAJR,SAdQ,EAuBR;AACE7E,cAAI,EAAE,QADR;AAEE;AACA2E,mBAAS,EAAE,mEAHb;AAIExG,cAAI,EAAE;AACJyG,iBAAK,EAAE,QADH;AAEJC,iBAAK,EAAE;AAFH;AAJR,SAvBQ,EAgCR;AACE7E,cAAI,EAAE,UADR;AAEE;AACA2E,mBAAS,EAAE,mEAHb;AAIExG,cAAI,EAAE;AACJyG,iBAAK,EAAE,UADH;AAEJC,iBAAK,EAAE;AAFH;AAJR,SAhCQ,EAyCR;AACE7E,cAAI,EAAE,SADR;AAEE;AACA2E,mBAAS,EAAE,mEAHb;AAIExG,cAAI,EAAE;AACJyG,iBAAK,EAAE,SADH;AAEJC,iBAAK,EAAE;AAFH;AAJR,SAzCQ,EAkDR;AACE7E,cAAI,EAAE,OADR;AAEE;AACA2E,mBAAS,EAAE,mEAHb;AAIExG,cAAI,EAAE;AACJyG,iBAAK,EAAE,OADH;AAEJC,iBAAK,EAAE;AAFH;AAJR,SAlDQ;AAHZ,OADqB,CAAvB;;UAuEaC,oBAAoB;AAAA;AAAA,O;;AAApBA,0BAAoB,6DAJhC,+DAAS;AACRxK,eAAO,EAAE,CAAC,6DAAayK,QAAb,CAAsBP,MAAtB,CAAD,CADD;AAERQ,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIgC,GAApBF,oBAAoB,CAApB","file":"views-masters-masters-module-es5.js","sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { mastersComponent } from './masters.component';\r\n\r\n// Dropdowns Component\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\n// Buttons Routing\r\nimport { mastersRoutingModule } from './masters-routing.module';\r\n\r\n// Angular\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { ActionRenderer } from '../../utils/StatusRenderer';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TabsModule,\r\n    ReactiveFormsModule,\r\n    AgGridModule.withComponents([]),\r\n    mastersRoutingModule,\r\n    BsDropdownModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    mastersComponent,\r\n    ActionRenderer\r\n  ]\r\n})\r\nexport class MastersModule { }\r\n","import { Component, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { DataService } from \"../../data.service\";\nimport { ActionRenderer } from \"../../utils/StatusRenderer\";\n\nimport {\n  VillageMasterColumn,\n  AreaMasterColumn,\n  LGAMasterColumn,\n  StateMasterColumn,\n  MarketMasterColumn,\n  CropMasterColumn,\n} from \"../../constants/columnMetadata\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\nimport { environment } from \"../../../environments/environment\";\n\n@Component({\n  templateUrl: \"masters.component.html\",\n})\nexport class mastersComponent {\n  private gridApi;\n  private gridColumnApi;\n  rowSelection: string;\n  public context: any;\n  public rowData: any[];\n  public columnDefs: any[] = [];\n\n  constructor(\n    public dataservice: DataService,\n    public route: ActivatedRoute,\n    public router: Router,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) {\n    this.context = { componentParent: this };\n    this.rowSelection = \"single\";\n  }\n  @ViewChild(\"stateModal\") public stateModal: ModalDirective;\n  @ViewChild(\"lgaModal\") public lgaModal: ModalDirective;\n  @ViewChild(\"villageModal\") public villageModal: ModalDirective;\n  @ViewChild(\"marketModal\") public marketModal: ModalDirective;\n  @ViewChild(\"areaModal\") public areaModal: ModalDirective;\n  @ViewChild(\"cropModal\") public cropModal: ModalDirective;\n  @ViewChild(\"deleteModal\") public deleteModal: ModalDirective;\n\n  loading = true;\n  disableButton = true;\n  btnLoading = false;\n  disableNextButton = false;\n  disablePrevButton = true;\n  // disableNextButton = false;\n  // disablePrevButton = true;\n  // meta;\n  // pageSize = 20;\n  // from = 1;\n  // to = 20;\n  count = 1;\n  Villages: any = [];\n  LGA: any = [];\n  Areas: any = [];\n  States: any = [];\n  Markets: any = [];\n  Crops: any = [];\n  imageUrl;\n  file: any = null;\n  meta;\n\n  pageSize = 20;\n  from = 1;\n  to = 20;\n\n  frameworkComponents = {\n    statusRenderer: new ActionRenderer(),\n  };\n  stateForm = this.fb.group({\n    state: [\"\", Validators.required],\n  });\n  lgaForm = this.fb.group({\n    lga: [\"\", Validators.required],\n    state: [\"\", Validators.required],\n  });\n  areaForm = this.fb.group({\n    area: [\"\", Validators.required],\n    PostalCode: [\"\", Validators.required],\n    lga: [\"\", Validators.required],\n    state: [\"\", Validators.required],\n  });\n  marketForm = this.fb.group({\n    market: [\"\", Validators.required],\n    state: [\"\", Validators.required],\n  });\n  cropForm = this.fb.group({\n    crop: [\"\", Validators.required],\n    Image: [\"\", Validators.required],\n  });\n  villageForm = this.fb.group({\n    village: [\"\", Validators.required],\n    area: [\"\", Validators.required],\n    lga: [\"\"],\n    state: [\"\"],\n  });\n\n  selectedYear: any = new Date().getFullYear();\n  years: any = [];\n  filter: any = {};\n  selectedRows: any = [];\n\n  ngOnInit(): void {\n    this.loading = true;\n    console.log(this.router.url);\n    switch (this.router.url) {\n      case \"/masters/Villages\":\n        this.columnDefs = [...VillageMasterColumn];\n        this.dataservice.getVillages(this.count, this.pageSize).valueChanges.subscribe((result: any) => {\n          console.log(\"getVillages\", result.data.villages.data);\n          this.rowData = result.data.villages.data;\n          this.meta = result.data.villages.meta;\n          if (this.meta?.pagination?.pageCount <= 1) {\n            this.disablePrevButton = true;\n            this.disableNextButton = true;\n          }\n        });\n        break;\n      case \"/masters/Cities\":\n        this.columnDefs = [...AreaMasterColumn];\n        this.dataservice.getAreas(this.count, this.pageSize).valueChanges.subscribe((result: any) => {\n          console.log(\"getAreas\", result.data.areas.data);\n          this.rowData = result.data.areas.data;\n          this.meta = result.data.areas.meta;\n          if (this.meta?.pagination?.pageCount <= 1) {\n            this.disablePrevButton = true;\n            this.disableNextButton = true;\n          }\n        });\n        break;\n      case \"/masters/LGA\":\n        this.columnDefs = [...LGAMasterColumn];\n        this.dataservice.getLGAs(this.count, this.pageSize).valueChanges.subscribe((result: any) => {\n          console.log(\"getLGAs\", result.data.lgas.data);\n          this.rowData = result.data.lgas.data;\n          this.meta = result.data.lgas.meta;\n          if (this.meta?.pagination?.pageCount <= 1) {\n            this.disablePrevButton = true;\n            this.disableNextButton = true;\n          }\n        });\n        break;\n      case \"/masters/States\":\n        this.columnDefs = [...StateMasterColumn];\n        this.dataservice.getStates(this.count, this.pageSize).valueChanges.subscribe((result: any) => {\n          console.log(\"getStates\", result.data.states.data);\n          this.rowData = result.data.states.data;\n          this.meta = result.data.states.meta;\n          if (this.meta?.pagination?.pageCount <= 1) {\n            this.disablePrevButton = true;\n            this.disableNextButton = true;\n          }\n        });\n        break;\n      case \"/masters/Markets\":\n        this.columnDefs = [...MarketMasterColumn];\n        this.dataservice.getMarkets(this.count, this.pageSize).valueChanges.subscribe((result: any) => {\n          console.log(\"getMarkets\", result.data.markets.data);\n          this.rowData = result.data.markets.data;\n          this.meta = result.data.markets.meta;\n          if (this.meta?.pagination?.pageCount <= 1) {\n            this.disablePrevButton = true;\n            this.disableNextButton = true;\n          }\n        });\n        break;\n      case \"/masters/Crops\":\n        this.columnDefs = [...CropMasterColumn];\n        this.dataservice.getCrops(this.count, this.pageSize).valueChanges.subscribe((result: any) => {\n          console.log(\"getCrops\", result.data.crops.data);\n          this.rowData = result.data.crops.data;\n          this.meta = result.data.crops.meta;\n          if (this.meta?.pagination?.pageCount <= 1) {\n            this.disablePrevButton = true;\n            this.disableNextButton = true;\n          }\n        });\n        break;\n    }\n    this.getAreas(this.count, this.pageSize);\n    this.getCrops(this.count, this.pageSize);\n    this.getLGAs(this.count, this.pageSize);\n    this.getMarkets(this.count, this.pageSize);\n    this.getStates(this.count, this.pageSize);\n    this.getVillages(this.count, this.pageSize);\n  }\n\n  loadData(count, pageSize) {\n    let masterUrl = \"\";\n    switch (this.router.url) {\n      case \"/masters/Villages\":\n        this.getVillages(count, pageSize);\n        break;\n      case \"/masters/States\":\n        this.getStates(count, pageSize);\n        break;\n      case \"/masters/Cities\":\n        this.getAreas(count, pageSize);\n        break;\n      case \"/masters/LGA\":\n        this.getLGAs(count, pageSize);\n        break;\n      case \"/masters/Markets\":\n        this.getMarkets(count, pageSize);\n        break;\n\n      case \"/masters/Crops\":\n        this.getCrops(count, pageSize);\n        break;\n    }\n  }\n\n  loadNext() {\n    this.count++;\n    this.disablePrevButton = false;\n    this.from = this.from + this.pageSize;\n    this.to =\n      this.to + this.pageSize > this.meta?.pagination?.total\n        ? this.meta?.pagination?.total\n        : this.to + this.pageSize;\n    if (this.count === this.meta.pagination.pageCount) {\n      this.disableNextButton = true;\n    }\n    this.loadData(this.count, this.pageSize);\n  }\n  loadPrev() {\n    this.count--;\n    if (this.count < this.meta.pagination.pageCount) {\n      this.disableNextButton = false;\n    }\n    if (this.count === 1) {\n      this.disablePrevButton = true;\n    }\n    this.from = this.from - this.pageSize;\n    this.to = this.to - this.rowData.length;\n    this.loadData(this.count, this.pageSize);\n  }\n\n\n  downloadExcel() {\n\n    let masterUrl = \"\";\n\n\n    switch (this.router.url) {\n      case \"/masters/Villages\":\n        masterUrl = \"villages\";\n        break;\n      case \"/masters/States\":\n        masterUrl = \"states\";\n        break;\n      case \"/masters/Cities\":\n        masterUrl = \"cities\";\n        break;\n      case \"/masters/LGA\":\n        masterUrl = \"lgas\";\n        break;\n      case \"/masters/Markets\":\n        masterUrl = \"markets\";\n        break;\n\n      case \"/masters/Crops\":\n        masterUrl = \"crops\";\n        break;\n    }\n\n\n    let resp = {};\n    this.btnLoading = true;\n    this.dataservice\n      .downloadMaster(masterUrl)\n      .subscribe((result: any) => {\n        resp = result.body;\n        console.log(result);\n        if (result.status === 200 && result.body.status == \"Success\") {\n          this.toastr.success(result.body.message);\n          this.btnLoading = false;\n          window.open(`${environment.apiUrl}${result?.body?.path}`, \"_blank\");\n        } else {\n          this.btnLoading = false;\n          this.toastr.error(result.body.message);\n        }\n      });\n  }\n\n  getCrops(count, pageSize) {\n    this.dataservice.getCrops(count, pageSize).valueChanges.subscribe((result: any) => {\n      console.log(\"getCrops2Function\", result.data.crops.data);\n      this.Crops = result.data.crops.data;\n      if(this.router.url === \"/masters/Crops\") {\n        this.rowData = result.data.crops.data;\n        this.meta = result.data.crops.meta;\n      }\n    });\n  }\n  getStates(count, pageSize) {\n    this.dataservice.getStates(count, pageSize).valueChanges.subscribe((result: any) => {\n      console.log(\"getStates2Function\", result.data.states.data);\n      this.States = result.data.states.data;\n      if(this.router.url === \"/masters/States\") {\n        this.rowData = result.data.states.data;\n        this.meta = result.data.states.meta;\n      }\n    });\n  }\n  getLGAs(count, pageSize, stateid?) {\n    this.dataservice.getLGAs(count, pageSize, stateid).valueChanges.subscribe((result: any) => {\n      console.log(\"getLGAs2Function\", result.data.lgas.data);\n      this.LGA = result.data.lgas.data;\n      if(this.router.url === \"/masters/LGA\") {\n        this.rowData = result.data.lgas.data;\n        this.meta = result.data.lgas.meta;\n      }\n    });\n  }\n  getAreas(count, pageSize, lgaid?) {\n    this.dataservice.getAreas(count, pageSize, lgaid).valueChanges.subscribe((result: any) => {\n      console.log(\"getAreas2Function\", result.data.areas.data);\n      this.Areas = result.data.areas.data;\n      if(this.router.url === \"/masters/Cities\") {\n        this.rowData = result.data.areas.data;\n        this.meta = result.data.areas.meta;\n      }\n    });\n  }\n  getVillages(count, pageSize, areaid?) {\n    this.dataservice\n      .getVillages(count, pageSize, areaid)\n      .valueChanges.subscribe((result: any) => {\n        console.log(\"getVillages2Function\", result.data.villages.data);\n        this.Villages = result.data.villages.data;\n        if(this.router.url === \"/masters/Villages\") {\n          this.rowData = result.data.villages.data;\n          this.meta = result.data.villages.meta;\n        }\n      });\n  }\n  getMarkets(count, pageSize) {\n    this.dataservice.getMarkets(count, pageSize).valueChanges.subscribe((result: any) => {\n      console.log(\"getMarkets2Function\", result.data.markets.data);\n      this.Markets = result.data.markets.data;\n      if(this.router.url === \"/masters/Markets\") {\n        this.rowData = result.data.markets.data;\n        this.meta = result.data.markets.meta;\n      }\n    });\n  }\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.gridApi.sizeColumnsToFit();\n  }\n  onRowClicked(event: any) {\n    console.log(\"row\", event);\n    alert(\"Parent Component Method from \" + event + \"!\");\n    // this.router.navigate(\n    //   [\"/cropprices/kp_customer_details\", event.data.id, this.router.url],\n    //   {\n    //     state: { data: event.data },\n    //   }\n    // );\n  }\n  onSelectionChanged(event: any) {\n    this.selectedRows = this.gridApi.getSelectedRows();\n    if (this.selectedRows.length > 0) {\n      this.disableButton = false;\n    } else {\n      this.disableButton = true;\n    }\n    console.log(this.selectedRows, this.selectedRows[0].attributes.Name);\n\n    // this.router.navigate(\n    //   [\"/cropprices/kp_customer_details\", selectedRows[0].id, this.router.url],\n    //   {\n    //     state: { data: selectedRows },\n    //   }\n    // );\n  }\n  openModal(data?: any) {\n    switch (this.router.url) {\n      case \"/masters/Villages\":\n        this.villageModal.show();\n        if (data) {\n          this.villageForm = this.fb.group({\n            village: [\n              this.selectedRows[0].attributes.Name,\n              Validators.required,\n            ],\n            area: [\n              Number(this.selectedRows[0].attributes.area.data.id),\n              Validators.required,\n            ],\n            lga: [\n              Number(\n                this.selectedRows[0].attributes.area.data.attributes.lga.data.id\n              ),\n            ],\n            state: [\n              Number(\n                this.selectedRows[0].attributes.area.data.attributes.lga.data\n                  .attributes.state.data.id\n              ),\n            ],\n          });\n        } else {\n          this.villageForm = this.fb.group({\n            village: [\"\", Validators.required],\n            area: [\"\", Validators.required],\n            lga: [\"\"],\n            state: [\"\"],\n          });\n        }\n        break;\n      case \"/masters/Cities\":\n        this.areaModal.show();\n        if (data) {\n          this.areaForm = this.fb.group({\n            area: [this.selectedRows[0].attributes.Name, Validators.required],\n            PostalCode: [\n              this.selectedRows[0].attributes.PostalCode,\n              Validators.required,\n            ],\n            lga: [\n              Number(this.selectedRows[0].attributes.lga.data.id),\n              Validators.required,\n            ],\n            state: [\n              Number(\n                this.selectedRows[0].attributes.lga.data.attributes.state.data\n                  .id\n              ),\n              Validators.required,\n            ],\n          });\n        } else {\n          this.areaForm = this.fb.group({\n            area: [\"\", Validators.required],\n            PostalCode: [\"\", Validators.required],\n            lga: [\"\", Validators.required],\n            state: [\"\", Validators.required],\n          });\n        }\n        break;\n      case \"/masters/LGA\":\n        this.lgaModal.show();\n        if (data) {\n          this.lgaForm = this.fb.group({\n            lga: [this.selectedRows[0].attributes.Name, Validators.required],\n            state: [\n              Number(this.selectedRows[0].attributes.state.data.id),\n              Validators.required,\n            ],\n          });\n        } else {\n          this.lgaForm = this.fb.group({\n            lga: [\"\", Validators.required],\n            state: [\"\", Validators.required],\n          });\n        }\n        break;\n      case \"/masters/States\":\n        this.stateModal.show();\n        if (data) {\n          this.stateForm = this.fb.group({\n            state: [this.selectedRows[0].attributes.Name, Validators.required],\n          });\n        } else {\n          this.stateForm = this.fb.group({\n            state: [\"\", Validators.required],\n          });\n        }\n        break;\n      case \"/masters/Markets\":\n        this.marketModal.show();\n        if (data) {\n          this.marketForm = this.fb.group({\n            market: [this.selectedRows[0].attributes.Name, Validators.required],\n            state: [\n              this.selectedRows[0].attributes.state.data.id,\n              Validators.required,\n            ],\n          });\n        } else {\n          this.marketForm = this.fb.group({\n            market: [\"\", Validators.required],\n            state: [\"\", Validators.required],\n          });\n        }\n        break;\n      case \"/masters/Crops\":\n        this.cropModal.show();\n        if (data) {\n          this.cropForm = this.fb.group({\n            crop: [this.selectedRows[0].attributes.Name, Validators.required],\n            Image: [\n              this.selectedRows[0].attributes.Image?.data?.id,\n              Validators.required,\n            ],\n          });\n          this.imageUrl = this.selectedRows[0].attributes.Image?.data\n            ?.attributes?.url\n            ? `${environment.apiUrl}` +\n            this.selectedRows[0].attributes.Image?.data?.attributes?.url\n            : null;\n        } else {\n          this.cropForm = this.fb.group({\n            crop: [\"\", Validators.required],\n            Image: [\"\", Validators.required],\n          });\n          this.imageUrl = null;\n        }\n        break;\n    }\n  }\n  // On file Select\n  onChange(event: any) {\n    this.file = [];\n    for (var i = 0; i < event.target.files.length; i++) {\n      this.file.push(event.target.files[i]);\n    }\n    console.log(this.file);\n  }\n  // loadNext() {\n  //   this.count++;\n  //    this.disablePrevButton = false;\n  //   this.from = this.from + this.pageSize;\n  //   this.to =\n  //     this.to + this.pageSize > this.meta?.pagination?.total\n  //       ? this.meta?.pagination?.total\n  //       : this.to + this.pageSize;\n  //   if (this.count === this.meta.pagination.pageCount) {\n  //     this.disableNextButton = true;\n  //   }\n  //   // this.dataservice\n  //   //   .getFarmDemos(this.count, this.pageSize)\n  //   //   .valueChanges.subscribe((result: any) => {\n  //   //     this.meta = result.data.farmDemos.meta;\n  //   //     this.rowData = result.data.farmDemos.data;\n  //   //   });\n  // }\n  // loadPrev() {\n  //   this.count--;\n  //   if (this.count < this.meta.pagination.pageCount) {\n  //     this.disableNextButton = false;\n  //   }\n  //   if (this.count === 1) {\n  //     this.disablePrevButton = true;\n  //   }\n  //   this.from = this.from - this.pageSize;\n  //   this.to = this.to - this.rowData.length;\n  //   // this.dataservice\n  //   //   .getFarmDemos(this.count, this.pageSize)\n  //   //   .valueChanges.subscribe((result: any) => {\n  //   //     this.meta = result.data.farmDemos.meta;\n  //   //     this.rowData = result.data.farmDemos.data;\n  //   //   });\n  // }\n  filterLGA(event) {\n    this.getLGAs(this.count, this.pageSize,event.target.value);\n  }\n  filterArea(event) {\n    this.getAreas(this.count, this.pageSize,event.target.value);\n  }\n  stateSubmit() {\n    let resp = {};\n    console.log(this.stateForm.value);\n    if (!this.disableButton) {\n      this.dataservice\n        .UpdateState(this.stateForm.value, this.selectedRows[0].id)\n        .subscribe((result: any) => {\n          resp = result.data;\n          console.log(\"response\", result);\n          if (result.data.updateState) {\n            this.toastr.success(\"Success!\");\n            this.gridApi.deselectAll();\n            this.stateModal.hide();\n            this.stateForm.reset();\n            this.dataservice\n              .getStates(this.count, this.pageSize,)\n              .valueChanges.subscribe((result: any) => {\n                console.log(\"getStates\", result.data.states.data);\n                this.rowData = result.data.states.data;\n              });\n          } else {\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\n              this.toastr.error(\"Can't be added as the value already exists\");\n            } else {\n              this.toastr.error(\"Failed. Please check the fields!\");\n            }\n          }\n        });\n    } else {\n      this.dataservice.AddStates(this.stateForm.value).subscribe(\n        (result: any) => {\n          resp = result.data;\n          console.log(\"response\", result);\n          if (result.data.createState) {\n            this.toastr.success(\"Success!\");\n            this.gridApi.deselectAll();\n            this.stateModal.hide();\n            this.stateForm.reset();\n            this.dataservice\n              .getStates(this.count, this.pageSize,)\n              .valueChanges.subscribe((result: any) => {\n                console.log(\"getStates\", result.data.states.data);\n                this.rowData = result.data.states.data;\n              });\n          } else {\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\n              this.toastr.error(\"Can't be added as the value already exists\");\n            } else {\n              this.toastr.error(\"Failed. Please check the fields!\");\n            }\n          }\n        },\n        (error) => {\n          console.log(error);\n          this.toastr.error(\"Failed.\");\n        }\n      );\n    }\n  }\n  lgaSubmit() {\n    let resp = {};\n    console.log(this.lgaForm.value);\n    if (!this.disableButton) {\n      this.dataservice\n        .UpdateLGA(this.lgaForm.value, this.selectedRows[0].id)\n        .subscribe((result: any) => {\n          resp = result.data;\n          console.log(\"response\", result);\n          if (result.data.updateLga) {\n            this.toastr.success(\"Success!\");\n            this.gridApi.deselectAll();\n\n            this.lgaModal.hide();\n            this.lgaForm.reset();\n            this.dataservice.getLGAs(this.count, this.pageSize).valueChanges.subscribe((result: any) => {\n              console.log(\"getLGAs\", result.data.lgas.data);\n              this.rowData = result.data.lgas.data;\n            });\n          } else {\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\n              this.toastr.error(\"Can't be added as the value already exists\");\n            } else {\n              this.toastr.error(\"Failed. Please check the fields!\");\n            }\n          }\n        });\n    } else {\n      this.dataservice.AddLGA(this.lgaForm.value).subscribe((result: any) => {\n        resp = result.data;\n        console.log(\"response\", result);\n        if (result.data.createLga) {\n          this.toastr.success(\"Success!\");\n          this.gridApi.deselectAll();\n          this.lgaModal.hide();\n          this.lgaForm.reset();\n          this.dataservice.getLGAs(this.count, this.pageSize).valueChanges.subscribe((result: any) => {\n            console.log(\"getLGAs\", result.data.lgas.data);\n            this.rowData = result.data.lgas.data;\n          });\n        } else {\n          if (result.errors[0].extensions.error.name == \"ValidationError\") {\n            this.toastr.error(\"Can't be added as the value already exists\");\n          } else {\n            this.toastr.error(\"Failed. Please check the fields!\");\n          }\n        }\n      });\n    }\n  }\n  areaSubmit() {\n    let resp = {};\n    console.log(this.areaForm.value);\n    if (!this.disableButton) {\n      this.dataservice\n        .UpdateArea(this.areaForm.value, this.selectedRows[0].id)\n        .subscribe((result: any) => {\n          resp = result.data;\n          console.log(\"response\", result);\n          if (result.data.updateArea) {\n            this.toastr.success(\"Success!\");\n            this.gridApi.deselectAll();\n            this.areaModal.hide();\n            this.areaForm.reset();\n            this.dataservice\n              .getAreas(this.count, this.pageSize)\n              .valueChanges.subscribe((result: any) => {\n                console.log(\"getAreas\", result.data.areas.data);\n                this.rowData = result.data.areas.data;\n              });\n          } else {\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\n              this.toastr.error(\"Can't be added as the value already exists\");\n            } else {\n              this.toastr.error(\"Failed. Please check the fields!\");\n            }\n          }\n        });\n    } else {\n      this.dataservice.AddArea(this.areaForm.value).subscribe((result: any) => {\n        resp = result.data;\n        console.log(\"response\", result);\n        if (result.data.createArea) {\n          this.toastr.success(\"Success!\");\n          this.gridApi.deselectAll();\n          this.areaModal.hide();\n          this.areaForm.reset();\n          this.dataservice.getAreas(this.count, this.pageSize).valueChanges.subscribe((result: any) => {\n            console.log(\"getAreas\", result.data.areas.data);\n            this.rowData = result.data.areas.data;\n          });\n        } else {\n          if (result.errors[0].extensions.error.name == \"ValidationError\") {\n            this.toastr.error(\"Can't be added as the value already exists\");\n          } else {\n            this.toastr.error(\"Failed. Please check the fields!\");\n          }\n        }\n      });\n    }\n  }\n  marketSubmit() {\n    let resp = {};\n    console.log(this.marketForm.value);\n    if (!this.disableButton) {\n      this.dataservice\n        .UpdateMarket(this.marketForm.value, this.selectedRows[0].id)\n        .subscribe((result: any) => {\n          resp = result.data;\n          console.log(\"response\", result);\n          if (result.data.updateMarket) {\n            this.toastr.success(\"Success!\");\n            this.gridApi.deselectAll();\n            this.marketModal.hide();\n            this.marketForm.reset();\n            this.dataservice\n              .getMarkets(this.count, this.pageSize)\n              .valueChanges.subscribe((result: any) => {\n                console.log(\"getMarkets\", result.data.markets.data);\n                this.rowData = result.data.markets.data;\n              });\n          } else {\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\n              this.toastr.error(\"Can't be added as the value already exists\");\n            } else {\n              this.toastr.error(\"Failed. Please check the fields!\");\n            }\n          }\n        });\n    } else {\n      this.dataservice\n        .AddMarket(this.marketForm.value)\n        .subscribe((result: any) => {\n          resp = result.data;\n          console.log(\"response\", result);\n          if (result.data.createMarket) {\n            this.toastr.success(\"Success!\");\n            this.gridApi.deselectAll();\n            this.marketModal.hide();\n            this.marketForm.reset();\n            this.dataservice\n              .getMarkets(this.count, this.pageSize)\n              .valueChanges.subscribe((result: any) => {\n                console.log(\"getMarkets\", result.data.markets.data);\n                this.rowData = result.data.markets.data;\n              });\n          } else {\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\n              this.toastr.error(\"Can't be added as the value already exists\");\n            } else {\n              this.toastr.error(\"Failed. Please check the fields!\");\n            }\n          }\n        });\n    }\n  }\n  cropSubmit() {\n    let resp = {};\n    this.btnLoading = true;\n    console.log(this.cropForm.value);\n    if (!this.disableButton) {\n      if (this.file) {\n        this.dataservice.upload(this.file).subscribe((response: any) => {\n          if (response.status == 200) {\n            console.log(response);\n            this.dataservice\n              .UpdateCrop(\n                this.cropForm.value,\n                this.selectedRows[0].id,\n                response.body[0]?.id\n              )\n              .subscribe(\n                (result: any) => {\n                  resp = result.data;\n                  console.log(\"response\", result);\n                  if (result.data.updateCrop) {\n                    this.toastr.success(\"Success!\");\n                    this.gridApi.deselectAll();\n                    this.cropModal.hide();\n                    this.cropForm.reset();\n                    this.btnLoading = false;\n                    this.dataservice\n                      .getCrops(this.count, this.pageSize)\n                      .valueChanges.subscribe((result: any) => {\n                        console.log(\"getCrops\", result.data.crops.data);\n                        this.rowData = result.data.crops.data;\n                      });\n                  } else {\n                    if (\n                      result.errors[0].extensions.error.name ==\n                      \"ValidationError\"\n                    ) {\n                      this.toastr.error(\n                        \"Can't be added as the value already exists\"\n                      );\n                      this.btnLoading = false;\n                    } else {\n                      this.toastr.error(\"Failed. Please check the fields!\");\n                      this.btnLoading = false;\n                    }\n                  }\n                },\n                (error) => {\n                  this.btnLoading = false;\n                }\n              );\n          }\n        });\n      } else {\n        this.dataservice\n          .UpdateCrop(this.cropForm.value, this.selectedRows[0].id, null)\n          .subscribe((result: any) => {\n            resp = result.data;\n            console.log(\"response\", result);\n            if (result.data.updateCrop) {\n              this.toastr.success(\"Success!\");\n              this.gridApi.deselectAll();\n              this.cropModal.hide();\n              this.cropForm.reset();\n              this.dataservice\n                .getCrops(this.count, this.pageSize)\n                .valueChanges.subscribe((result: any) => {\n                  console.log(\"getCrops\", result.data.crops.data);\n                  this.rowData = result.data.crops.data;\n                });\n            } else {\n              if (result.errors[0].extensions.error.name == \"ValidationError\") {\n                this.toastr.error(\"Can't be added as the value already exists\");\n              } else {\n                this.toastr.error(\"Failed. Please check the fields!\");\n              }\n            }\n          });\n      }\n    } else {\n      this.dataservice.upload(this.file).subscribe((response: any) => {\n        if (response.status == 200) {\n          console.log(response);\n          this.dataservice\n            .AddCrop(this.cropForm.value, response.body[0]?.id)\n            .subscribe((result: any) => {\n              resp = result.data;\n              console.log(\"response\", result);\n              if (result.data.createCrop) {\n                this.toastr.success(\"Success!\");\n                this.gridApi.deselectAll();\n                this.cropModal.hide();\n                this.cropForm.reset();\n                this.dataservice\n                  .getCrops(this.count, this.pageSize)\n                  .valueChanges.subscribe((result: any) => {\n                    console.log(\"getCrops\", result.data.crops.data);\n                    this.rowData = result.data.crops.data;\n                  });\n              } else {\n                if (\n                  result.errors[0].extensions.error.name == \"ValidationError\"\n                ) {\n                  this.toastr.error(\n                    \"Can't be added as the value already exists\"\n                  );\n                } else {\n                  this.toastr.error(\"Failed. Please check the fields!\");\n                }\n              }\n            });\n        }\n      });\n    }\n  }\n  vilageSubmit() {\n    let resp = {};\n    console.log(this.villageForm.value);\n    if (!this.disableButton) {\n      this.dataservice\n        .Updatevillage(this.villageForm.value, this.selectedRows[0].id)\n        .subscribe((result: any) => {\n          resp = result.data;\n          console.log(\"response\", result);\n          if (result.data.updateVillage) {\n            this.toastr.success(\"Success!\");\n            this.gridApi.deselectAll();\n            this.villageModal.hide();\n            this.villageForm.reset();\n            this.dataservice\n              .getVillages(this.count, this.pageSize)\n              .valueChanges.subscribe((result: any) => {\n                console.log(\"getVillages\", result.data.villages.data);\n                this.rowData = result.data.villages.data;\n              });\n          } else {\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\n              this.toastr.error(\"Can't be added as the value already exists\");\n            } else {\n              this.toastr.error(\"Failed. Please check the fields!\");\n            }\n          }\n        });\n    } else {\n      this.dataservice\n        .Addvillage(this.villageForm.value)\n        .subscribe((result: any) => {\n          resp = result.data;\n          console.log(\"response\", result);\n          if (result.data.createVillage) {\n            this.toastr.success(\"Success!\");\n            this.gridApi.deselectAll();\n            this.villageModal.hide();\n            this.villageForm.reset();\n            this.dataservice\n              .getVillages(this.count, this.pageSize)\n              .valueChanges.subscribe((result: any) => {\n                console.log(\"getVillages\", result.data.villages.data);\n                this.rowData = result.data.villages.data;\n              });\n          } else {\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\n              this.toastr.error(\"Can't be added as the value already exists\");\n            } else {\n              this.toastr.error(\"Failed. Please check the fields!\");\n            }\n          }\n        });\n    }\n  }\n  deleteRecord() {\n    // this.lgaForm = this.fb.group({\n    //   isDelete: [true, Validators.required],\n    // });\n    // this.stateForm = this.fb.group({\n    //   isDelete: [true, Validators.required],\n    // });\n    // this.villageForm = this.fb.group({\n    //   isDelete: [true, Validators.required],\n    // });\n    // this.lgaForm = this.fb.group({\n    //   isDelete: [true, Validators.required],\n    // });\n    // this.marketForm = this.fb.group({\n    //   isDelete: [true, Validators.required],\n    // });\n    // this.cropForm = this.fb.group({\n    //   isDelete: [true, Validators.required],\n    // });\n    console.log(this.lgaForm.value);\n    switch (this.router.url) {\n      case \"/masters/Villages\":\n        this.dataservice\n          .deleteVillage(this.selectedRows[0].id)\n          .subscribe((result: any) => {\n            console.log(\"response\", result);\n            if (result.data.deleteVillage) {\n              this.toastr.success(\"Success!\");\n              this.gridApi.deselectAll();\n              this.deleteModal.hide();\n              this.dataservice\n                .getVillages(this.count, this.pageSize)\n                .valueChanges.subscribe((result: any) => {\n                  this.rowData = result.data.villages.data;\n                });\n            } else {\n              this.toastr.error(\"Failed!\");\n            }\n          });\n        break;\n      case \"/masters/Cities\":\n        this.dataservice\n          .deleteArea(this.selectedRows[0].id)\n          .subscribe((result: any) => {\n            console.log(\"response\", result);\n            if (result.data.deleteArea) {\n              this.toastr.success(\"Success!\");\n              this.gridApi.deselectAll();\n              this.deleteModal.hide();\n              this.dataservice\n                .getAreas(this.count, this.pageSize)\n                .valueChanges.subscribe((result: any) => {\n                  this.rowData = result.data.areas.data;\n                });\n            } else {\n              this.toastr.error(\"Failed!\");\n            }\n          });\n        break;\n      case \"/masters/LGA\":\n        this.dataservice\n          .deleteLGA(this.selectedRows[0].id)\n          .subscribe((result: any) => {\n            console.log(\"response\", result);\n            if (result.data.deleteLga) {\n              this.toastr.success(\"Success!\");\n              this.gridApi.deselectAll();\n              this.deleteModal.hide();\n              this.dataservice\n                .getLGAs(this.count, this.pageSize)\n                .valueChanges.subscribe((result: any) => {\n                  this.rowData = result.data.lgas.data;\n                });\n            } else {\n              this.toastr.error(\"Failed!\");\n            }\n          });\n        break;\n      case \"/masters/States\":\n        this.dataservice\n          .deleteState(this.selectedRows[0].id)\n          .subscribe((result: any) => {\n            console.log(\"response\", result);\n            if (result.data.deleteState) {\n              this.toastr.success(\"Success!\");\n              this.gridApi.deselectAll();\n              this.deleteModal.hide();\n              this.dataservice\n                .getStates(this.count, this.pageSize)\n                .valueChanges.subscribe((result: any) => {\n                  this.rowData = result.data.states.data;\n                });\n            } else {\n              this.toastr.error(\"Failed!\");\n            }\n          });\n        break;\n      case \"/masters/Markets\":\n        this.dataservice\n          .deleteMarket(this.selectedRows[0].id)\n          .subscribe((result: any) => {\n            console.log(\"response\", result);\n            if (result.data.deleteMarket) {\n              this.toastr.success(\"Success!\");\n              this.gridApi.deselectAll();\n              this.deleteModal.hide();\n              this.dataservice\n                .getMarkets(this.count, this.pageSize)\n                .valueChanges.subscribe((result: any) => {\n                  this.rowData = result.data.markets.data;\n                });\n            } else {\n              this.toastr.error(\"Failed!\");\n            }\n          });\n        break;\n      case \"/masters/Crops\":\n        this.dataservice\n          .deleteCrop(this.selectedRows[0].id)\n          .subscribe((result: any) => {\n            console.log(\"response\", result);\n            if (result.data.deleteCrop) {\n              this.toastr.success(\"Success!\");\n              this.gridApi.deselectAll();\n              this.deleteModal.hide();\n              this.dataservice\n                .getCrops(this.count, this.pageSize)\n                .valueChanges.subscribe((result: any) => {\n                  this.rowData = result.data.crops.data;\n                });\n            } else {\n              this.toastr.error(\"Failed!\");\n            }\n          });\n        break;\n    }\n  }\n}\n","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div\\n      class=\\\"card-header\\\"\\n      style=\\\"display: flex; justify-content: space-between\\\"\\n    >\\n      <h2>{{ this.route.snapshot.data.title }} Master</h2>\\n      <div>\\n        <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-outline-primary\\\"\\n            data-toggle=\\\"modal\\\"\\n            (click)=\\\"downloadExcel()\\\"\\n          >\\n            Download excel\\n          </button>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-danger\\\"\\n          data-toggle=\\\"modal\\\"\\n          [disabled]=\\\"disableButton\\\"\\n          (click)=\\\"deleteModal.show()\\\"\\n        >\\n          Delete\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          [disabled]=\\\"disableButton\\\"\\n          class=\\\"btn btn-info\\\"\\n          data-toggle=\\\"modal\\\"\\n          (click)=\\\"openModal('Edit')\\\"\\n        >\\n          Edit\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-primary\\\"\\n          [disabled]=\\\"!disableButton\\\"\\n          data-toggle=\\\"modal\\\"\\n          (click)=\\\"openModal()\\\"\\n        >\\n          Add New {{ this.route.snapshot.data.title }}\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <ag-grid-angular\\n            #agGrid\\n            style=\\\"width: 100%; height: 65vh\\\"\\n            id=\\\"myGrid\\\"\\n            class=\\\"ag-theme-alpine\\\"\\n            [columnDefs]=\\\"columnDefs\\\"\\n            [rowData]=\\\"rowData\\\"\\n            [context]=\\\"context\\\"\\n            [pagination]=\\\"false\\\"\\n            [rowSelection]=\\\"rowSelection\\\"\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\n            [frameworkComponents]=\\\"frameworkComponents\\\"\\n            (gridReady)=\\\"onGridReady($event)\\\"\\n            animateRows=\\\"true\\\"\\n          >\\n          </ag-grid-angular>\\n\\n\\n          <span class=\\\"float-left mt-3\\\">{{from}} to {{to}}  of {{meta?.pagination?.total}}</span>\\n            <button\\n              type=\\\"button\\\"\\n              [disabled]=\\\"disableNextButton\\\"\\n              class=\\\"btn btn-primary float-right m-2\\\"\\n              (click)=\\\"loadNext()\\\"\\n            >\\n              Next\\n            </button>\\n            <span class=\\\"float-right mt-3\\\"\\n              >Page {{ meta?.pagination?.page }} of\\n              {{ meta?.pagination?.pageCount }}</span\\n            >\\n            <button\\n              type=\\\"button\\\"\\n              [disabled]=\\\"disablePrevButton\\\"\\n              class=\\\"btn btn-primary float-right m-2\\\"\\n              (click)=\\\"loadPrev()\\\"\\n            >\\n              Prev\\n            </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div\\n  bsModal\\n  #stateModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add/Edit State</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"stateModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"stateForm\\\" (ngSubmit)=\\\"stateSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">State</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"state\\\"\\n              name=\\\"state\\\"\\n              formControlName=\\\"state\\\"\\n              placeholder=\\\"Enter State Name\\\"\\n            />\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"stateModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !stateForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Save changes\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div\\n  bsModal\\n  #lgaModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add/Edit LGA</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"lgaModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"lgaForm\\\" (ngSubmit)=\\\"lgaSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"lga\\\">LGA</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"lga\\\"\\n              name=\\\"lga\\\"\\n              formControlName=\\\"lga\\\"\\n              placeholder=\\\"Enter LGA Name\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"state\\\">State</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"state\\\"\\n              required\\n              ngModel\\n              name=\\\"state\\\"\\n              formControlName=\\\"state\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"lgaModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !lgaForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Save changes\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div\\n  bsModal\\n  #areaModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add/Edit City</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"areaModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"areaForm\\\" (ngSubmit)=\\\"areaSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"area\\\">City Name</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"area\\\"\\n              name=\\\"area\\\"\\n              formControlName=\\\"area\\\"\\n              placeholder=\\\"Enter City Name\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"area\\\">Postal code</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"PostalCode\\\"\\n              name=\\\"PostalCode\\\"\\n              formControlName=\\\"PostalCode\\\"\\n              placeholder=\\\"Enter Postal Code\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"state\\\">State</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"state\\\"\\n              required\\n              ngModel\\n              name=\\\"state\\\"\\n              formControlName=\\\"state\\\"\\n              (change)=\\\"filterLGA($event)\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"lga\\\">LGA</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"lga\\\"\\n              required\\n              ngModel\\n              name=\\\"lga\\\"\\n              formControlName=\\\"lga\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"areaModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !areaForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Save changes\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div\\n  bsModal\\n  #marketModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add/Edit Market</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"marketModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"marketForm\\\" (ngSubmit)=\\\"marketSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"market\\\">Market</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"market\\\"\\n              name=\\\"market\\\"\\n              formControlName=\\\"market\\\"\\n              placeholder=\\\"Enter Market Name\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"state\\\">State</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"state\\\"\\n              required\\n              ngModel\\n              name=\\\"state\\\"\\n              formControlName=\\\"state\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"marketModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !marketForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Save changes\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div\\n  bsModal\\n  #cropModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add/Edit Crop</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"cropModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"cropForm\\\" (ngSubmit)=\\\"cropSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Crop</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"crop\\\"\\n              name=\\\"crop\\\"\\n              formControlName=\\\"crop\\\"\\n              placeholder=\\\"Enter Crop Name\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"Image\\\">Image</label>\\n            <div>\\n              <img\\n                *ngIf=\\\"imageUrl\\\"\\n                src=\\\"{{ imageUrl }}\\\"\\n                width=\\\"100\\\"\\n                height=\\\"100\\\"\\n                style=\\\"object-fit: cover\\\"\\n              />\\n            </div>\\n            <input\\n              type=\\\"file\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"Image\\\"\\n              accept=\\\".jpg,.jpeg,.JPEG,.png\\\"\\n              name=\\\"Image\\\"\\n              (change)=\\\"onChange($event)\\\"\\n              formControlName=\\\"Image\\\"\\n              placeholder=\\\"Choose image\\\"\\n            />\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"cropModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !cropForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Save changes\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div\\n  bsModal\\n  #villageModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add/Edit Village</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"villageModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"villageForm\\\" (ngSubmit)=\\\"vilageSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"market\\\">Village Name</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"village\\\"\\n              name=\\\"village\\\"\\n              formControlName=\\\"village\\\"\\n              placeholder=\\\"Enter Village Name\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"state\\\">State</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"state\\\"\\n              ngModel\\n              name=\\\"state\\\"\\n              (change)=\\\"filterLGA($event)\\\"\\n              formControlName=\\\"state\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"lga\\\">LGA</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"lga\\\"\\n              ngModel\\n              (change)=\\\"filterArea($event)\\\"\\n              name=\\\"lga\\\"\\n              formControlName=\\\"lga\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"area\\\">City</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"area\\\"\\n              ngModel\\n              name=\\\"area\\\"\\n              formControlName=\\\"area\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of Areas\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"villageModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !villageForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Save changes\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div\\n  bsModal\\n  #deleteModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-body text-center\\\">\\n        Do you want to delete this record?\\n      </div>\\n      <div class=\\\"modal-footer justify-content-around\\\">\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-secondary\\\"\\n          (click)=\\\"deleteModal.hide()\\\"\\n        >\\n          No! Cancel.\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deleteRecord()\\\">\\n          Yes! Delete.\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { mastersComponent } from './masters.component';\r\nimport { AuthGuard } from '../login/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    \r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'masters'\r\n      },\r\n      {\r\n        path: 'States',\r\n        // canActivate: [AuthGuard],\r\n        component: mastersComponent,\r\n        data: {\r\n          roles: 'States',\r\n          title: 'States'\r\n        }\r\n      },\r\n      {\r\n        path: 'LGA',\r\n        // canActivate: [AuthGuard],\r\n        component: mastersComponent,\r\n        data: {\r\n          roles: 'LGA',\r\n          title: 'LGA'\r\n        }\r\n      },\r\n      {\r\n        path: 'Cities',\r\n        // canActivate: [AuthGuard],\r\n        component: mastersComponent,\r\n        data: {\r\n          roles: 'Cities',\r\n          title: 'Cities'\r\n        }\r\n      },\r\n      {\r\n        path: 'Villages',\r\n        // canActivate: [AuthGuard],\r\n        component: mastersComponent,\r\n        data: {\r\n          roles: 'Villages',\r\n          title: 'Villages'\r\n        }\r\n      },\r\n      {\r\n        path: 'Markets',\r\n        // canActivate: [AuthGuard],\r\n        component: mastersComponent,\r\n        data: {\r\n          roles: 'Markets',\r\n          title: 'Markets'\r\n        }\r\n      },\r\n      {\r\n        path: 'Crops',\r\n        // canActivate: [AuthGuard],\r\n        component: mastersComponent,\r\n        data: {\r\n          roles: 'Crops',\r\n          title: 'Crops'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class mastersRoutingModule {}\r\n"]}