{"version":3,"sources":["webpack:///src/app/views/masters/masters.module.ts","webpack:///src/app/views/masters/masters.component.ts","webpack:///src/app/views/masters/masters.component.html","webpack:///src/app/views/masters/masters-routing.module.ts"],"names":["MastersModule","imports","withComponents","forRoot","declarations","mastersComponent","dataservice","route","router","fb","toastr","columnDefs","loading","disableButton","btnLoading","count","Villages","LGA","Areas","States","Markets","Crops","file","frameworkComponents","statusRenderer","stateForm","group","state","required","lgaForm","lga","areaForm","area","PostalCode","marketForm","market","cropForm","crop","Image","villageForm","village","selectedYear","Date","getFullYear","years","filter","selectedRows","context","componentParent","rowSelection","console","log","url","getVillages","valueChanges","subscribe","result","data","villages","rowData","getAreas","areas","getLGAs","lgas","getStates","states","getMarkets","markets","getCrops","crops","stateid","lgaid","areaid","params","gridApi","api","gridColumnApi","columnApi","sizeColumnsToFit","event","alert","getSelectedRows","length","attributes","Name","villageModal","show","Number","id","areaModal","lgaModal","stateModal","marketModal","cropModal","imageUrl","apiUrl","i","target","files","push","value","resp","UpdateState","updateState","success","deselectAll","hide","reset","errors","extensions","error","name","AddStates","createState","UpdateLGA","updateLga","AddLGA","createLga","UpdateArea","updateArea","AddArea","createArea","UpdateMarket","updateMarket","AddMarket","createMarket","upload","response","status","UpdateCrop","body","updateCrop","AddCrop","createCrop","Updatevillage","updateVillage","Addvillage","createVillage","deleteVillage","deleteModal","deleteArea","deleteLGA","deleteState","deleteMarket","deleteCrop","template","routes","path","children","redirectTo","component","roles","title","mastersRoutingModule","forChild","exports"],"mappings":"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","file":"views-masters-masters-module-es5.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { mastersComponent } from './masters.component';\n\n// Dropdowns Component\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\n\n// Buttons Routing\nimport { mastersRoutingModule } from './masters-routing.module';\n\n// Angular\nimport { AgGridModule } from 'ag-grid-angular';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { ActionRenderer } from '../../utils/StatusRenderer';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TabsModule,\n    ReactiveFormsModule,\n    AgGridModule.withComponents([]),\n    mastersRoutingModule,\n    BsDropdownModule.forRoot(),\n    ModalModule.forRoot(),\n    FormsModule\n  ],\n  declarations: [\n    mastersComponent,\n    ActionRenderer\n  ]\n})\nexport class MastersModule { }\n","import { Component, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { DataService } from \"../../data.service\";\nimport { ActionRenderer } from \"../../utils/StatusRenderer\";\n\nimport {\n  VillageMasterColumn,\n  AreaMasterColumn,\n  LGAMasterColumn,\n  StateMasterColumn,\n  MarketMasterColumn,\n  CropMasterColumn,\n} from \"../../constants/columnMetadata\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\nimport { environment } from \"../../../environments/environment\";\n\n@Component({\n  templateUrl: \"masters.component.html\",\n})\nexport class mastersComponent {\n  private gridApi;\n  private gridColumnApi;\n  rowSelection: string;\n  public context: any;\n  public rowData: any[];\n  public columnDefs: any[] = [];\n\n  constructor(\n    public dataservice: DataService,\n    public route: ActivatedRoute,\n    public router: Router,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) {\n    this.context = { componentParent: this };\n    this.rowSelection = \"single\";\n  }\n  @ViewChild(\"stateModal\") public stateModal: ModalDirective;\n  @ViewChild(\"lgaModal\") public lgaModal: ModalDirective;\n  @ViewChild(\"villageModal\") public villageModal: ModalDirective;\n  @ViewChild(\"marketModal\") public marketModal: ModalDirective;\n  @ViewChild(\"areaModal\") public areaModal: ModalDirective;\n  @ViewChild(\"cropModal\") public cropModal: ModalDirective;\n  @ViewChild(\"deleteModal\") public deleteModal: ModalDirective;\n\n  loading = true;\n  disableButton = true;\n  btnLoading = false;\n  // disableNextButton = false;\n  // disablePrevButton = true;\n  // meta;\n  // pageSize = 20;\n  // from = 1;\n  // to = 20;\n  count = 1;\n  Villages: any = [];\n  LGA: any = [];\n  Areas: any = [];\n  States: any = [];\n  Markets: any = [];\n  Crops: any = [];\n  imageUrl;\n  file: any = null;\n\n  frameworkComponents = {\n    statusRenderer: new ActionRenderer(),\n  };\n  stateForm = this.fb.group({\n    state: [\"\", Validators.required],\n  });\n  lgaForm = this.fb.group({\n    lga: [\"\", Validators.required],\n    state: [\"\", Validators.required],\n  });\n  areaForm = this.fb.group({\n    area: [\"\", Validators.required],\n    PostalCode: [\"\", Validators.required],\n    lga: [\"\", Validators.required],\n    state: [\"\", Validators.required],\n  });\n  marketForm = this.fb.group({\n    market: [\"\", Validators.required],\n    state: [\"\", Validators.required],\n  });\n  cropForm = this.fb.group({\n    crop: [\"\", Validators.required],\n    Image: [\"\", Validators.required],\n  });\n  villageForm = this.fb.group({\n    village: [\"\", Validators.required],\n    area: [\"\", Validators.required],\n    lga: [\"\"],\n    state: [\"\"],\n  });\n\n  selectedYear: any = new Date().getFullYear();\n  years: any = [];\n  filter: any = {};\n  selectedRows: any = [];\n\n  ngOnInit(): void {\n    this.loading = true;\n    console.log(this.router.url);\n    switch (this.router.url) {\n      case \"/masters/Villages\":\n        this.columnDefs = [...VillageMasterColumn];\n        this.dataservice.getVillages().valueChanges.subscribe((result: any) => {\n          console.log(\"getVillages\", result.data.villages.data);\n          this.rowData = result.data.villages.data;\n          // this.meta = result.data.villages.meta;\n          // if (this.meta?.pagination?.pageCount <= 1) {\n          //   this.disablePrevButton = true;\n          //   this.disableNextButton = true;\n          // }\n        });\n        break;\n      case \"/masters/Cities\":\n        this.columnDefs = [...AreaMasterColumn];\n        this.dataservice.getAreas().valueChanges.subscribe((result: any) => {\n          console.log(\"getAreas\", result.data.areas.data);\n          this.rowData = result.data.areas.data;\n          // this.meta = result.data.areas.meta;\n          // if (this.meta?.pagination?.pageCount <= 1) {\n          //   this.disablePrevButton = true;\n          //   this.disableNextButton = true;\n          // }\n        });\n        break;\n      case \"/masters/LGA\":\n        this.columnDefs = [...LGAMasterColumn];\n        this.dataservice.getLGAs().valueChanges.subscribe((result: any) => {\n          console.log(\"getLGAs\", result.data.lgas.data);\n          this.rowData = result.data.lgas.data;\n          // this.meta = result.data.lgas.meta;\n          // if (this.meta?.pagination?.pageCount <= 1) {\n          //   this.disablePrevButton = true;\n          //   this.disableNextButton = true;\n          // }\n        });\n        break;\n      case \"/masters/States\":\n        this.columnDefs = [...StateMasterColumn];\n        this.dataservice.getStates().valueChanges.subscribe((result: any) => {\n          console.log(\"getStates\", result.data.states.data);\n          this.rowData = result.data.states.data;\n          // this.meta = result.data.states.meta;\n          // if (this.meta?.pagination?.pageCount <= 1) {\n          //   this.disablePrevButton = true;\n          //   this.disableNextButton = true;\n          // }\n        });\n        break;\n      case \"/masters/Markets\":\n        this.columnDefs = [...MarketMasterColumn];\n        this.dataservice.getMarkets().valueChanges.subscribe((result: any) => {\n          console.log(\"getMarkets\", result.data.markets.data);\n          this.rowData = result.data.markets.data;\n          // this.meta = result.data.markets.meta;\n          // if (this.meta?.pagination?.pageCount <= 1) {\n          //   this.disablePrevButton = true;\n          //   this.disableNextButton = true;\n          // }\n        });\n        break;\n      case \"/masters/Crops\":\n        this.columnDefs = [...CropMasterColumn];\n        this.dataservice.getCrops().valueChanges.subscribe((result: any) => {\n          console.log(\"getCrops\", result.data.crops.data);\n          this.rowData = result.data.crops.data;\n          // this.meta = result.data.crops.meta;\n          // if (this.meta?.pagination?.pageCount <= 1) {\n          //   this.disablePrevButton = true;\n          //   this.disableNextButton = true;\n          // }\n        });\n        break;\n    }\n    this.getAreas();\n    this.getCrops();\n    this.getLGAs();\n    this.getMarkets();\n    this.getStates();\n    this.getVillages();\n  }\n  getCrops() {\n    this.dataservice.getCrops().valueChanges.subscribe((result: any) => {\n      console.log(\"getCrops\", result.data.crops.data);\n      this.Crops = result.data.crops.data;\n    });\n  }\n  getStates() {\n    this.dataservice.getStates().valueChanges.subscribe((result: any) => {\n      console.log(\"getStates\", result.data.states.data);\n      this.States = result.data.states.data;\n    });\n  }\n  getLGAs(stateid?) {\n    this.dataservice.getLGAs(stateid).valueChanges.subscribe((result: any) => {\n      console.log(\"getLGAs\", result.data.lgas.data);\n      this.LGA = result.data.lgas.data;\n    });\n  }\n  getAreas(lgaid?) {\n    this.dataservice.getAreas(lgaid).valueChanges.subscribe((result: any) => {\n      console.log(\"getAreas\", result.data.areas.data);\n      this.Areas = result.data.areas.data;\n    });\n  }\n  getVillages(areaid?) {\n    this.dataservice\n      .getVillages(areaid)\n      .valueChanges.subscribe((result: any) => {\n        console.log(\"getVillages\", result.data.villages.data);\n        this.Villages = result.data.villages.data;\n      });\n  }\n  getMarkets() {\n    this.dataservice.getMarkets().valueChanges.subscribe((result: any) => {\n      console.log(\"getMarkets\", result.data.markets.data);\n      this.Markets = result.data.markets.data;\n    });\n  }\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.gridApi.sizeColumnsToFit();\n  }\n  onRowClicked(event: any) {\n    console.log(\"row\", event);\n    alert(\"Parent Component Method from \" + event + \"!\");\n    // this.router.navigate(\n    //   [\"/cropprices/kp_customer_details\", event.data.id, this.router.url],\n    //   {\n    //     state: { data: event.data },\n    //   }\n    // );\n  }\n  onSelectionChanged(event: any) {\n    this.selectedRows = this.gridApi.getSelectedRows();\n    if (this.selectedRows.length > 0) {\n      this.disableButton = false;\n    } else {\n      this.disableButton = true;\n    }\n    console.log(this.selectedRows, this.selectedRows[0].attributes.Name);\n\n    // this.router.navigate(\n    //   [\"/cropprices/kp_customer_details\", selectedRows[0].id, this.router.url],\n    //   {\n    //     state: { data: selectedRows },\n    //   }\n    // );\n  }\n  openModal(data?: any) {\n    switch (this.router.url) {\n      case \"/masters/Villages\":\n        this.villageModal.show();\n        if (data) {\n          this.villageForm = this.fb.group({\n            village: [\n              this.selectedRows[0].attributes.Name,\n              Validators.required,\n            ],\n            area: [\n              Number(this.selectedRows[0].attributes.area.data.id),\n              Validators.required,\n            ],\n            lga: [\n              Number(\n                this.selectedRows[0].attributes.area.data.attributes.lga.data.id\n              ),\n            ],\n            state: [\n              Number(\n                this.selectedRows[0].attributes.area.data.attributes.lga.data\n                  .attributes.state.data.id\n              ),\n            ],\n          });\n        } else {\n          this.villageForm = this.fb.group({\n            village: [\"\", Validators.required],\n            area: [\"\", Validators.required],\n            lga: [\"\"],\n            state: [\"\"],\n          });\n        }\n        break;\n      case \"/masters/Cities\":\n        this.areaModal.show();\n        if (data) {\n          this.areaForm = this.fb.group({\n            area: [this.selectedRows[0].attributes.Name, Validators.required],\n            PostalCode: [\n              this.selectedRows[0].attributes.PostalCode,\n              Validators.required,\n            ],\n            lga: [\n              Number(this.selectedRows[0].attributes.lga.data.id),\n              Validators.required,\n            ],\n            state: [\n              Number(\n                this.selectedRows[0].attributes.lga.data.attributes.state.data\n                  .id\n              ),\n              Validators.required,\n            ],\n          });\n        } else {\n          this.areaForm = this.fb.group({\n            area: [\"\", Validators.required],\n            PostalCode: [\"\", Validators.required],\n            lga: [\"\", Validators.required],\n            state: [\"\", Validators.required],\n          });\n        }\n        break;\n      case \"/masters/LGA\":\n        this.lgaModal.show();\n        if (data) {\n          this.lgaForm = this.fb.group({\n            lga: [this.selectedRows[0].attributes.Name, Validators.required],\n            state: [\n              Number(this.selectedRows[0].attributes.state.data.id),\n              Validators.required,\n            ],\n          });\n        } else {\n          this.lgaForm = this.fb.group({\n            lga: [\"\", Validators.required],\n            state: [\"\", Validators.required],\n          });\n        }\n        break;\n      case \"/masters/States\":\n        this.stateModal.show();\n        if (data) {\n          this.stateForm = this.fb.group({\n            state: [this.selectedRows[0].attributes.Name, Validators.required],\n          });\n        } else {\n          this.stateForm = this.fb.group({\n            state: [\"\", Validators.required],\n          });\n        }\n        break;\n      case \"/masters/Markets\":\n        this.marketModal.show();\n        if (data) {\n          this.marketForm = this.fb.group({\n            market: [this.selectedRows[0].attributes.Name, Validators.required],\n            state: [\n              this.selectedRows[0].attributes.state.data.id,\n              Validators.required,\n            ],\n          });\n        } else {\n          this.marketForm = this.fb.group({\n            market: [\"\", Validators.required],\n            state: [\"\", Validators.required],\n          });\n        }\n        break;\n      case \"/masters/Crops\":\n        this.cropModal.show();\n        if (data) {\n          this.cropForm = this.fb.group({\n            crop: [this.selectedRows[0].attributes.Name, Validators.required],\n            Image: [\n              this.selectedRows[0].attributes.Image?.data?.id,\n              Validators.required,\n            ],\n          });\n          this.imageUrl = this.selectedRows[0].attributes.Image?.data\n            ?.attributes?.url\n            ? `${environment.apiUrl}` +\n              this.selectedRows[0].attributes.Image?.data?.attributes?.url\n            : null;\n        } else {\n          this.cropForm = this.fb.group({\n            crop: [\"\", Validators.required],\n            Image: [\"\", Validators.required],\n          });\n          this.imageUrl = null;\n        }\n        break;\n    }\n  }\n  // On file Select\n  onChange(event: any) {\n    this.file = [];\n    for (var i = 0; i < event.target.files.length; i++) {\n      this.file.push(event.target.files[i]);\n    }\n    console.log(this.file);\n  }\n  // loadNext() {\n  //   this.count++;\n  //    this.disablePrevButton = false;\n  //   this.from = this.from + this.pageSize;\n  //   this.to =\n  //     this.to + this.pageSize > this.meta?.pagination?.total\n  //       ? this.meta?.pagination?.total\n  //       : this.to + this.pageSize;\n  //   if (this.count === this.meta.pagination.pageCount) {\n  //     this.disableNextButton = true;\n  //   }\n  //   // this.dataservice\n  //   //   .getFarmDemos(this.count, this.pageSize)\n  //   //   .valueChanges.subscribe((result: any) => {\n  //   //     this.meta = result.data.farmDemos.meta;\n  //   //     this.rowData = result.data.farmDemos.data;\n  //   //   });\n  // }\n  // loadPrev() {\n  //   this.count--;\n  //   if (this.count < this.meta.pagination.pageCount) {\n  //     this.disableNextButton = false;\n  //   }\n  //   if (this.count === 1) {\n  //     this.disablePrevButton = true;\n  //   }\n  //   this.from = this.from - this.pageSize;\n  //   this.to = this.to - this.rowData.length;\n  //   // this.dataservice\n  //   //   .getFarmDemos(this.count, this.pageSize)\n  //   //   .valueChanges.subscribe((result: any) => {\n  //   //     this.meta = result.data.farmDemos.meta;\n  //   //     this.rowData = result.data.farmDemos.data;\n  //   //   });\n  // }\n  filterLGA(event) {\n    this.getLGAs(event.target.value);\n  }\n  filterArea(event) {\n    this.getAreas(event.target.value);\n  }\n  stateSubmit() {\n    let resp = {};\n    console.log(this.stateForm.value);\n    if (!this.disableButton) {\n      this.dataservice\n        .UpdateState(this.stateForm.value, this.selectedRows[0].id)\n        .subscribe((result: any) => {\n          resp = result.data;\n          console.log(\"response\", result);\n          if (result.data.updateState) {\n            this.toastr.success(\"Success!\");\n            this.gridApi.deselectAll();\n            this.stateModal.hide();\n            this.stateForm.reset();\n            this.dataservice\n              .getStates()\n              .valueChanges.subscribe((result: any) => {\n                console.log(\"getStates\", result.data.states.data);\n                this.rowData = result.data.states.data;\n              });\n          } else {\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\n              this.toastr.error(\"Can't be added as the value already exists\");\n            } else {\n              this.toastr.error(\"Failed. Please check the fields!\");\n            }\n          }\n        });\n    } else {\n      this.dataservice.AddStates(this.stateForm.value).subscribe(\n        (result: any) => {\n          resp = result.data;\n          console.log(\"response\", result);\n          if (result.data.createState) {\n            this.toastr.success(\"Success!\");\n            this.gridApi.deselectAll();\n            this.stateModal.hide();\n            this.stateForm.reset();\n            this.dataservice\n              .getStates()\n              .valueChanges.subscribe((result: any) => {\n                console.log(\"getStates\", result.data.states.data);\n                this.rowData = result.data.states.data;\n              });\n          } else {\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\n              this.toastr.error(\"Can't be added as the value already exists\");\n            } else {\n              this.toastr.error(\"Failed. Please check the fields!\");\n            }\n          }\n        },\n        (error) => {\n          console.log(error);\n          this.toastr.error(\"Failed.\");\n        }\n      );\n    }\n  }\n  lgaSubmit() {\n    let resp = {};\n    console.log(this.lgaForm.value);\n    if (!this.disableButton) {\n      this.dataservice\n        .UpdateLGA(this.lgaForm.value, this.selectedRows[0].id)\n        .subscribe((result: any) => {\n          resp = result.data;\n          console.log(\"response\", result);\n          if (result.data.updateLga) {\n            this.toastr.success(\"Success!\");\n            this.gridApi.deselectAll();\n\n            this.lgaModal.hide();\n            this.lgaForm.reset();\n            this.dataservice.getLGAs().valueChanges.subscribe((result: any) => {\n              console.log(\"getLGAs\", result.data.lgas.data);\n              this.rowData = result.data.lgas.data;\n            });\n          } else {\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\n              this.toastr.error(\"Can't be added as the value already exists\");\n            } else {\n              this.toastr.error(\"Failed. Please check the fields!\");\n            }\n          }\n        });\n    } else {\n      this.dataservice.AddLGA(this.lgaForm.value).subscribe((result: any) => {\n        resp = result.data;\n        console.log(\"response\", result);\n        if (result.data.createLga) {\n          this.toastr.success(\"Success!\");\n          this.gridApi.deselectAll();\n          this.lgaModal.hide();\n          this.lgaForm.reset();\n          this.dataservice.getLGAs().valueChanges.subscribe((result: any) => {\n            console.log(\"getLGAs\", result.data.lgas.data);\n            this.rowData = result.data.lgas.data;\n          });\n        } else {\n          if (result.errors[0].extensions.error.name == \"ValidationError\") {\n            this.toastr.error(\"Can't be added as the value already exists\");\n          } else {\n            this.toastr.error(\"Failed. Please check the fields!\");\n          }\n        }\n      });\n    }\n  }\n  areaSubmit() {\n    let resp = {};\n    console.log(this.areaForm.value);\n    if (!this.disableButton) {\n      this.dataservice\n        .UpdateArea(this.areaForm.value, this.selectedRows[0].id)\n        .subscribe((result: any) => {\n          resp = result.data;\n          console.log(\"response\", result);\n          if (result.data.updateArea) {\n            this.toastr.success(\"Success!\");\n            this.gridApi.deselectAll();\n            this.areaModal.hide();\n            this.areaForm.reset();\n            this.dataservice\n              .getAreas()\n              .valueChanges.subscribe((result: any) => {\n                console.log(\"getAreas\", result.data.areas.data);\n                this.rowData = result.data.areas.data;\n              });\n          } else {\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\n              this.toastr.error(\"Can't be added as the value already exists\");\n            } else {\n              this.toastr.error(\"Failed. Please check the fields!\");\n            }\n          }\n        });\n    } else {\n      this.dataservice.AddArea(this.areaForm.value).subscribe((result: any) => {\n        resp = result.data;\n        console.log(\"response\", result);\n        if (result.data.createArea) {\n          this.toastr.success(\"Success!\");\n          this.gridApi.deselectAll();\n          this.areaModal.hide();\n          this.areaForm.reset();\n          this.dataservice.getAreas().valueChanges.subscribe((result: any) => {\n            console.log(\"getAreas\", result.data.areas.data);\n            this.rowData = result.data.areas.data;\n          });\n        } else {\n          if (result.errors[0].extensions.error.name == \"ValidationError\") {\n            this.toastr.error(\"Can't be added as the value already exists\");\n          } else {\n            this.toastr.error(\"Failed. Please check the fields!\");\n          }\n        }\n      });\n    }\n  }\n  marketSubmit() {\n    let resp = {};\n    console.log(this.marketForm.value);\n    if (!this.disableButton) {\n      this.dataservice\n        .UpdateMarket(this.marketForm.value, this.selectedRows[0].id)\n        .subscribe((result: any) => {\n          resp = result.data;\n          console.log(\"response\", result);\n          if (result.data.updateMarket) {\n            this.toastr.success(\"Success!\");\n            this.gridApi.deselectAll();\n            this.marketModal.hide();\n            this.marketForm.reset();\n            this.dataservice\n              .getMarkets()\n              .valueChanges.subscribe((result: any) => {\n                console.log(\"getMarkets\", result.data.markets.data);\n                this.rowData = result.data.markets.data;\n              });\n          } else {\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\n              this.toastr.error(\"Can't be added as the value already exists\");\n            } else {\n              this.toastr.error(\"Failed. Please check the fields!\");\n            }\n          }\n        });\n    } else {\n      this.dataservice\n        .AddMarket(this.marketForm.value)\n        .subscribe((result: any) => {\n          resp = result.data;\n          console.log(\"response\", result);\n          if (result.data.createMarket) {\n            this.toastr.success(\"Success!\");\n            this.gridApi.deselectAll();\n            this.marketModal.hide();\n            this.marketForm.reset();\n            this.dataservice\n              .getMarkets()\n              .valueChanges.subscribe((result: any) => {\n                console.log(\"getMarkets\", result.data.markets.data);\n                this.rowData = result.data.markets.data;\n              });\n          } else {\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\n              this.toastr.error(\"Can't be added as the value already exists\");\n            } else {\n              this.toastr.error(\"Failed. Please check the fields!\");\n            }\n          }\n        });\n    }\n  }\n  cropSubmit() {\n    let resp = {};\n    this.btnLoading = true;\n    console.log(this.cropForm.value);\n    if (!this.disableButton) {\n      if (this.file) {\n        this.dataservice.upload(this.file).subscribe((response: any) => {\n          if (response.status == 200) {\n            console.log(response);\n            this.dataservice\n              .UpdateCrop(\n                this.cropForm.value,\n                this.selectedRows[0].id,\n                response.body[0]?.id\n              )\n              .subscribe(\n                (result: any) => {\n                  resp = result.data;\n                  console.log(\"response\", result);\n                  if (result.data.updateCrop) {\n                    this.toastr.success(\"Success!\");\n                    this.gridApi.deselectAll();\n                    this.cropModal.hide();\n                    this.cropForm.reset();\n                    this.btnLoading = false;\n                    this.dataservice\n                      .getCrops()\n                      .valueChanges.subscribe((result: any) => {\n                        console.log(\"getCrops\", result.data.crops.data);\n                        this.rowData = result.data.crops.data;\n                      });\n                  } else {\n                    if (\n                      result.errors[0].extensions.error.name ==\n                      \"ValidationError\"\n                    ) {\n                      this.toastr.error(\n                        \"Can't be added as the value already exists\"\n                      );\n                      this.btnLoading = false;\n                    } else {\n                      this.toastr.error(\"Failed. Please check the fields!\");\n                      this.btnLoading = false;\n                    }\n                  }\n                },\n                (error) => {\n                  this.btnLoading = false;\n                }\n              );\n          }\n        });\n      } else {\n        this.dataservice\n          .UpdateCrop(this.cropForm.value, this.selectedRows[0].id, null)\n          .subscribe((result: any) => {\n            resp = result.data;\n            console.log(\"response\", result);\n            if (result.data.updateCrop) {\n              this.toastr.success(\"Success!\");\n              this.gridApi.deselectAll();\n              this.cropModal.hide();\n              this.cropForm.reset();\n              this.dataservice\n                .getCrops()\n                .valueChanges.subscribe((result: any) => {\n                  console.log(\"getCrops\", result.data.crops.data);\n                  this.rowData = result.data.crops.data;\n                });\n            } else {\n              if (result.errors[0].extensions.error.name == \"ValidationError\") {\n                this.toastr.error(\"Can't be added as the value already exists\");\n              } else {\n                this.toastr.error(\"Failed. Please check the fields!\");\n              }\n            }\n          });\n      }\n    } else {\n      this.dataservice.upload(this.file).subscribe((response: any) => {\n        if (response.status == 200) {\n          console.log(response);\n          this.dataservice\n            .AddCrop(this.cropForm.value, response.body[0]?.id)\n            .subscribe((result: any) => {\n              resp = result.data;\n              console.log(\"response\", result);\n              if (result.data.createCrop) {\n                this.toastr.success(\"Success!\");\n                this.gridApi.deselectAll();\n                this.cropModal.hide();\n                this.cropForm.reset();\n                this.dataservice\n                  .getCrops()\n                  .valueChanges.subscribe((result: any) => {\n                    console.log(\"getCrops\", result.data.crops.data);\n                    this.rowData = result.data.crops.data;\n                  });\n              } else {\n                if (\n                  result.errors[0].extensions.error.name == \"ValidationError\"\n                ) {\n                  this.toastr.error(\n                    \"Can't be added as the value already exists\"\n                  );\n                } else {\n                  this.toastr.error(\"Failed. Please check the fields!\");\n                }\n              }\n            });\n        }\n      });\n    }\n  }\n  vilageSubmit() {\n    let resp = {};\n    console.log(this.villageForm.value);\n    if (!this.disableButton) {\n      this.dataservice\n        .Updatevillage(this.villageForm.value, this.selectedRows[0].id)\n        .subscribe((result: any) => {\n          resp = result.data;\n          console.log(\"response\", result);\n          if (result.data.updateVillage) {\n            this.toastr.success(\"Success!\");\n            this.gridApi.deselectAll();\n            this.villageModal.hide();\n            this.villageForm.reset();\n            this.dataservice\n              .getVillages()\n              .valueChanges.subscribe((result: any) => {\n                console.log(\"getVillages\", result.data.villages.data);\n                this.rowData = result.data.villages.data;\n              });\n          } else {\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\n              this.toastr.error(\"Can't be added as the value already exists\");\n            } else {\n              this.toastr.error(\"Failed. Please check the fields!\");\n            }\n          }\n        });\n    } else {\n      this.dataservice\n        .Addvillage(this.villageForm.value)\n        .subscribe((result: any) => {\n          resp = result.data;\n          console.log(\"response\", result);\n          if (result.data.createVillage) {\n            this.toastr.success(\"Success!\");\n            this.gridApi.deselectAll();\n            this.villageModal.hide();\n            this.villageForm.reset();\n            this.dataservice\n              .getVillages()\n              .valueChanges.subscribe((result: any) => {\n                console.log(\"getVillages\", result.data.villages.data);\n                this.rowData = result.data.villages.data;\n              });\n          } else {\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\n              this.toastr.error(\"Can't be added as the value already exists\");\n            } else {\n              this.toastr.error(\"Failed. Please check the fields!\");\n            }\n          }\n        });\n    }\n  }\n  deleteRecord() {\n    // this.lgaForm = this.fb.group({\n    //   isDelete: [true, Validators.required],\n    // });\n    // this.stateForm = this.fb.group({\n    //   isDelete: [true, Validators.required],\n    // });\n    // this.villageForm = this.fb.group({\n    //   isDelete: [true, Validators.required],\n    // });\n    // this.lgaForm = this.fb.group({\n    //   isDelete: [true, Validators.required],\n    // });\n    // this.marketForm = this.fb.group({\n    //   isDelete: [true, Validators.required],\n    // });\n    // this.cropForm = this.fb.group({\n    //   isDelete: [true, Validators.required],\n    // });\n    console.log(this.lgaForm.value);\n    switch (this.router.url) {\n      case \"/masters/Villages\":\n        this.dataservice\n          .deleteVillage(this.selectedRows[0].id)\n          .subscribe((result: any) => {\n            console.log(\"response\", result);\n            if (result.data.updateVillage) {\n              this.toastr.success(\"Success!\");\n              this.gridApi.deselectAll();\n              this.deleteModal.hide();\n              this.dataservice\n                .getVillages()\n                .valueChanges.subscribe((result: any) => {\n                  this.rowData = result.data.villages.data;\n                });\n            } else {\n              this.toastr.error(\"Failed!\");\n            }\n          });\n        break;\n      case \"/masters/Cities\":\n        this.dataservice\n          .deleteArea(this.selectedRows[0].id)\n          .subscribe((result: any) => {\n            console.log(\"response\", result);\n            if (result.data.updateArea) {\n              this.toastr.success(\"Success!\");\n              this.gridApi.deselectAll();\n              this.deleteModal.hide();\n              this.dataservice\n                .getAreas()\n                .valueChanges.subscribe((result: any) => {\n                  this.rowData = result.data.areas.data;\n                });\n            } else {\n              this.toastr.error(\"Failed!\");\n            }\n          });\n        break;\n      case \"/masters/LGA\":\n        this.dataservice\n          .deleteLGA(this.selectedRows[0].id)\n          .subscribe((result: any) => {\n            console.log(\"response\", result);\n            if (result.data.updateLga) {\n              this.toastr.success(\"Success!\");\n              this.gridApi.deselectAll();\n              this.deleteModal.hide();\n              this.dataservice\n                .getLGAs()\n                .valueChanges.subscribe((result: any) => {\n                  this.rowData = result.data.lgas.data;\n                });\n            } else {\n              this.toastr.error(\"Failed!\");\n            }\n          });\n        break;\n      case \"/masters/States\":\n        this.dataservice\n          .deleteState(this.selectedRows[0].id)\n          .subscribe((result: any) => {\n            console.log(\"response\", result);\n            if (result.data.updateState) {\n              this.toastr.success(\"Success!\");\n              this.gridApi.deselectAll();\n              this.deleteModal.hide();\n              this.dataservice\n                .getStates()\n                .valueChanges.subscribe((result: any) => {\n                  this.rowData = result.data.states.data;\n                });\n            } else {\n              this.toastr.error(\"Failed!\");\n            }\n          });\n        break;\n      case \"/masters/Markets\":\n        this.dataservice\n          .deleteMarket(this.selectedRows[0].id)\n          .subscribe((result: any) => {\n            console.log(\"response\", result);\n            if (result.data.updateMarket) {\n              this.toastr.success(\"Success!\");\n              this.gridApi.deselectAll();\n              this.deleteModal.hide();\n              this.dataservice\n                .getMarkets()\n                .valueChanges.subscribe((result: any) => {\n                  this.rowData = result.data.markets.data;\n                });\n            } else {\n              this.toastr.error(\"Failed!\");\n            }\n          });\n        break;\n      case \"/masters/Crops\":\n        this.dataservice\n          .deleteCrop(this.selectedRows[0].id)\n          .subscribe((result: any) => {\n            console.log(\"response\", result);\n            if (result.data.updateCrop) {\n              this.toastr.success(\"Success!\");\n              this.gridApi.deselectAll();\n              this.deleteModal.hide();\n              this.dataservice\n                .getCrops()\n                .valueChanges.subscribe((result: any) => {\n                  this.rowData = result.data.crops.data;\n                });\n            } else {\n              this.toastr.error(\"Failed!\");\n            }\n          });\n        break;\n    }\n  }\n}\n","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div\\n      class=\\\"card-header\\\"\\n      style=\\\"display: flex; justify-content: space-between\\\"\\n    >\\n      <h2>{{ this.route.snapshot.data.title }} Master</h2>\\n      <div>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-danger\\\"\\n          data-toggle=\\\"modal\\\"\\n          [disabled]=\\\"disableButton\\\"\\n          (click)=\\\"deleteModal.show()\\\"\\n        >\\n          Delete\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          [disabled]=\\\"disableButton\\\"\\n          class=\\\"btn btn-info\\\"\\n          data-toggle=\\\"modal\\\"\\n          (click)=\\\"openModal('Edit')\\\"\\n        >\\n          Edit\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-primary\\\"\\n          [disabled]=\\\"!disableButton\\\"\\n          data-toggle=\\\"modal\\\"\\n          (click)=\\\"openModal()\\\"\\n        >\\n          Add New {{ this.route.snapshot.data.title }}\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <ag-grid-angular\\n            #agGrid\\n            style=\\\"width: 100%; height: 65vh\\\"\\n            id=\\\"myGrid\\\"\\n            class=\\\"ag-theme-alpine\\\"\\n            [columnDefs]=\\\"columnDefs\\\"\\n            [rowData]=\\\"rowData\\\"\\n            [context]=\\\"context\\\"\\n            [pagination]=\\\"true\\\"\\n            [rowSelection]=\\\"rowSelection\\\"\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\n            [frameworkComponents]=\\\"frameworkComponents\\\"\\n            (gridReady)=\\\"onGridReady($event)\\\"\\n            animateRows=\\\"true\\\"\\n          >\\n          </ag-grid-angular>\\n          <!-- <span class=\\\"float-left mt-3\\\">{{from}} to {{to}}  of {{meta?.pagination?.total}}</span>\\n            <button\\n              type=\\\"button\\\"\\n              [disabled]=\\\"disableNextButton\\\"\\n              class=\\\"btn btn-primary float-right m-2\\\"\\n              (click)=\\\"loadNext()\\\"\\n            >\\n              Next\\n            </button>\\n            <span class=\\\"float-right mt-3\\\"\\n              >Page {{ meta?.pagination?.page }} of\\n              {{ meta?.pagination?.pageCount }}</span\\n            >\\n            <button\\n              type=\\\"button\\\"\\n              [disabled]=\\\"disablePrevButton\\\"\\n              class=\\\"btn btn-primary float-right m-2\\\"\\n              (click)=\\\"loadPrev()\\\"\\n            >\\n              Prev\\n            </button> -->\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div\\n  bsModal\\n  #stateModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add/Edit State</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"stateModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"stateForm\\\" (ngSubmit)=\\\"stateSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">State</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"state\\\"\\n              name=\\\"state\\\"\\n              formControlName=\\\"state\\\"\\n              placeholder=\\\"Enter State Name\\\"\\n            />\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"stateModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !stateForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Save changes\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div\\n  bsModal\\n  #lgaModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add/Edit LGA</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"lgaModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"lgaForm\\\" (ngSubmit)=\\\"lgaSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"lga\\\">LGA</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"lga\\\"\\n              name=\\\"lga\\\"\\n              formControlName=\\\"lga\\\"\\n              placeholder=\\\"Enter LGA Name\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"state\\\">State</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"state\\\"\\n              required\\n              ngModel\\n              name=\\\"state\\\"\\n              formControlName=\\\"state\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"lgaModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !lgaForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Save changes\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div\\n  bsModal\\n  #areaModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add/Edit City</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"areaModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"areaForm\\\" (ngSubmit)=\\\"areaSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"area\\\">City Name</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"area\\\"\\n              name=\\\"area\\\"\\n              formControlName=\\\"area\\\"\\n              placeholder=\\\"Enter City Name\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"area\\\">Postal code</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"PostalCode\\\"\\n              name=\\\"PostalCode\\\"\\n              formControlName=\\\"PostalCode\\\"\\n              placeholder=\\\"Enter Postal Code\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"state\\\">State</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"state\\\"\\n              required\\n              ngModel\\n              name=\\\"state\\\"\\n              formControlName=\\\"state\\\"\\n              (change)=\\\"filterLGA($event)\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"lga\\\">LGA</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"lga\\\"\\n              required\\n              ngModel\\n              name=\\\"lga\\\"\\n              formControlName=\\\"lga\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"areaModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !areaForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Save changes\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div\\n  bsModal\\n  #marketModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add/Edit Market</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"marketModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"marketForm\\\" (ngSubmit)=\\\"marketSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"market\\\">Market</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"market\\\"\\n              name=\\\"market\\\"\\n              formControlName=\\\"market\\\"\\n              placeholder=\\\"Enter Market Name\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"state\\\">State</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"state\\\"\\n              required\\n              ngModel\\n              name=\\\"state\\\"\\n              formControlName=\\\"state\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"marketModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !marketForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Save changes\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div\\n  bsModal\\n  #cropModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add/Edit Crop</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"cropModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"cropForm\\\" (ngSubmit)=\\\"cropSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Crop</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"crop\\\"\\n              name=\\\"crop\\\"\\n              formControlName=\\\"crop\\\"\\n              placeholder=\\\"Enter Crop Name\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"Image\\\">Image</label>\\n            <div>\\n              <img\\n                *ngIf=\\\"imageUrl\\\"\\n                src=\\\"{{ imageUrl }}\\\"\\n                width=\\\"100\\\"\\n                height=\\\"100\\\"\\n                style=\\\"object-fit: cover\\\"\\n              />\\n            </div>\\n            <input\\n              type=\\\"file\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"Image\\\"\\n              accept=\\\".jpg,.jpeg,.JPEG,.png\\\"\\n              name=\\\"Image\\\"\\n              (change)=\\\"onChange($event)\\\"\\n              formControlName=\\\"Image\\\"\\n              placeholder=\\\"Choose image\\\"\\n            />\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"cropModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !cropForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Save changes\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div\\n  bsModal\\n  #villageModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add/Edit Village</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"villageModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"villageForm\\\" (ngSubmit)=\\\"vilageSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"market\\\">Village Name</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"village\\\"\\n              name=\\\"village\\\"\\n              formControlName=\\\"village\\\"\\n              placeholder=\\\"Enter Village Name\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"state\\\">State</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"state\\\"\\n              ngModel\\n              name=\\\"state\\\"\\n              (change)=\\\"filterLGA($event)\\\"\\n              formControlName=\\\"state\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"lga\\\">LGA</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"lga\\\"\\n              ngModel\\n              (change)=\\\"filterArea($event)\\\"\\n              name=\\\"lga\\\"\\n              formControlName=\\\"lga\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"area\\\">City</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"area\\\"\\n              ngModel\\n              name=\\\"area\\\"\\n              formControlName=\\\"area\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of Areas\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"villageModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !villageForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Save changes\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div\\n  bsModal\\n  #deleteModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-body text-center\\\">\\n        Do you want to delete this record?\\n      </div>\\n      <div class=\\\"modal-footer justify-content-around\\\">\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-secondary\\\"\\n          (click)=\\\"deleteModal.hide()\\\"\\n        >\\n          No! Cancel.\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deleteRecord()\\\">\\n          Yes! Delete.\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { mastersComponent } from './masters.component';\nimport { AuthGuard } from '../login/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    \n    children: [\n      {\n        path: '',\n        redirectTo: 'masters'\n      },\n      {\n        path: 'States',\n        // canActivate: [AuthGuard],\n        component: mastersComponent,\n        data: {\n          roles: 'States',\n          title: 'States'\n        }\n      },\n      {\n        path: 'LGA',\n        // canActivate: [AuthGuard],\n        component: mastersComponent,\n        data: {\n          roles: 'LGA',\n          title: 'LGA'\n        }\n      },\n      {\n        path: 'Cities',\n        // canActivate: [AuthGuard],\n        component: mastersComponent,\n        data: {\n          roles: 'Cities',\n          title: 'Cities'\n        }\n      },\n      {\n        path: 'Villages',\n        // canActivate: [AuthGuard],\n        component: mastersComponent,\n        data: {\n          roles: 'Villages',\n          title: 'Villages'\n        }\n      },\n      {\n        path: 'Markets',\n        // canActivate: [AuthGuard],\n        component: mastersComponent,\n        data: {\n          roles: 'Markets',\n          title: 'Markets'\n        }\n      },\n      {\n        path: 'Crops',\n        // canActivate: [AuthGuard],\n        component: mastersComponent,\n        data: {\n          roles: 'Crops',\n          title: 'Crops'\n        }\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class mastersRoutingModule {}\n"]}