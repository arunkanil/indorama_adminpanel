{"version":3,"sources":["webpack:///src/app/views/masters/masters.module.ts","webpack:///src/app/views/masters/masters.component.ts","webpack:///src/app/views/masters/masters.component.html","webpack:///src/app/views/masters/masters-routing.module.ts"],"names":["MastersModule","imports","withComponents","forRoot","declarations","mastersComponent","dataservice","route","router","fb","toastr","columnDefs","loading","disableButton","btnLoading","count","Villages","LGA","Areas","States","Markets","Crops","frameworkComponents","statusRenderer","stateForm","group","state","required","lgaForm","lga","areaForm","area","PostalCode","marketForm","market","cropForm","crop","villageForm","village","selectedYear","Date","getFullYear","years","filter","selectedRows","context","componentParent","rowSelection","console","log","url","getVillages","valueChanges","subscribe","result","data","villages","rowData","getAreas","areas","getLGAs","lgas","getStates","states","getMarkets","markets","getCrops","crops","stateid","lgaid","areaid","params","gridApi","api","gridColumnApi","columnApi","sizeColumnsToFit","event","alert","getSelectedRows","length","attributes","Name","villageModal","show","Number","id","areaModal","lgaModal","stateModal","marketModal","cropModal","target","value","resp","UpdateState","updateState","success","deselectAll","hide","errors","extensions","error","name","AddStates","createState","UpdateLGA","updateLga","AddLGA","createLga","UpdateArea","updateArea","AddArea","createArea","UpdateMarket","updateMarket","AddMarket","createMarket","UpdateCrop","updateCrop","AddCrop","createCrop","Updatevillage","updateVillage","Addvillage","createVillage","deleteVillage","deleteModal","deleteArea","deleteLGA","deleteLga","deleteState","deleteMarket","deleteCrop","template","routes","path","children","redirectTo","component","roles","title","mastersRoutingModule","forChild","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAMA;AAIA;AAGA;;;UAqBaA,aAAa;AAAA;AAAA,O;;AAAbA,mBAAa,6DAhBzB,+DAAS;AACRC,eAAO,EAAE,CACP,4DADO,EAEP,6DAFO,EAGP,kEAHO,EAIP,6DAAaC,cAAb,CAA4B,EAA5B,CAJO,EAKP,4EALO,EAMP,wEAAiBC,OAAjB,EANO,EAOP,gEAAYA,OAAZ,EAPO,EAQP,0DARO,CADD;AAWRC,oBAAY,EAAE,CACZ,mEADY,EAEZ,qEAFY;AAXN,OAAT,CAgByB,GAAbJ,aAAa,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCdAK,gBAAgB;AAQ3B,kCACSC,WADT,EAESC,KAFT,EAGSC,MAHT,EAIUC,EAJV,EAKUC,MALV,EAK+B;AAAA;;AAJtB,eAAAJ,WAAA,GAAAA,WAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACC,eAAAC,EAAA,GAAAA,EAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AAPH,eAAAC,UAAA,GAAoB,EAApB;AAoBP,eAAAC,OAAA,GAAU,IAAV;AACA,eAAAC,aAAA,GAAgB,IAAhB;AACA,eAAAC,UAAA,GAAa,KAAb,CAf+B,CAgB/B;AACA;AACA;AACA;AACA;AACA;;AACA,eAAAC,KAAA,GAAQ,CAAR;AACA,eAAAC,QAAA,GAAgB,EAAhB;AACA,eAAAC,GAAA,GAAW,EAAX;AACA,eAAAC,KAAA,GAAa,EAAb;AACA,eAAAC,MAAA,GAAc,EAAd;AACA,eAAAC,OAAA,GAAe,EAAf;AACA,eAAAC,KAAA,GAAa,EAAb;AAEA,eAAAC,mBAAA,GAAsB;AACpBC,0BAAc,EAAE,IAAI,oEAAJ;AADI,WAAtB;AAGA,eAAAC,SAAA,GAAY,KAAKf,EAAL,CAAQgB,KAAR,CAAc;AACxBC,iBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB;AADiB,WAAd,CAAZ;AAGA,eAAAC,OAAA,GAAU,KAAKnB,EAAL,CAAQgB,KAAR,CAAc;AACtBI,eAAG,EAAE,CAAC,EAAD,EAAK,0DAAWF,QAAhB,CADiB;AAEtBD,iBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB;AAFe,WAAd,CAAV;AAIA,eAAAG,QAAA,GAAW,KAAKrB,EAAL,CAAQgB,KAAR,CAAc;AACvBM,gBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWJ,QAAhB,CADiB;AAEvBK,sBAAU,EAAE,CAAC,EAAD,EAAK,0DAAWL,QAAhB,CAFW;AAGvBE,eAAG,EAAE,CAAC,EAAD,EAAK,0DAAWF,QAAhB,CAHkB;AAIvBD,iBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB;AAJgB,WAAd,CAAX;AAMA,eAAAM,UAAA,GAAa,KAAKxB,EAAL,CAAQgB,KAAR,CAAc;AACzBS,kBAAM,EAAE,CAAC,EAAD,EAAK,0DAAWP,QAAhB,CADiB;AAEzBD,iBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB;AAFkB,WAAd,CAAb;AAIA,eAAAQ,QAAA,GAAW,KAAK1B,EAAL,CAAQgB,KAAR,CAAc;AACvBW,gBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWT,QAAhB;AADiB,WAAd,CAAX;AAGA,eAAAU,WAAA,GAAc,KAAK5B,EAAL,CAAQgB,KAAR,CAAc;AAC1Ba,mBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWX,QAAhB,CADiB;AAE1BI,gBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWJ,QAAhB,CAFoB;AAG1BE,eAAG,EAAE,CAAC,EAAD,CAHqB;AAI1BH,iBAAK,EAAE,CAAC,EAAD;AAJmB,WAAd,CAAd;AAOA,eAAAa,YAAA,GAAoB,IAAIC,IAAJ,GAAWC,WAAX,EAApB;AACA,eAAAC,KAAA,GAAa,EAAb;AACA,eAAAC,MAAA,GAAc,EAAd;AACA,eAAAC,YAAA,GAAoB,EAApB;AA7DE,eAAKC,OAAL,GAAe;AAAEC,2BAAe,EAAE;AAAnB,WAAf;AACA,eAAKC,YAAL,GAAoB,QAApB;AACD;;AAjB0B;AAAA;AAAA,iBA8E3B,oBAAQ;AAAA;;AACN,iBAAKnC,OAAL,GAAe,IAAf;AACAoC,mBAAO,CAACC,GAAR,CAAY,KAAKzC,MAAL,CAAY0C,GAAxB;;AACA,oBAAQ,KAAK1C,MAAL,CAAY0C,GAApB;AACE,mBAAK,mBAAL;AACE,qBAAKvC,UAAL,sBAAsB,6EAAtB;AACA,qBAAKL,WAAL,CAAiB6C,WAAjB,GAA+BC,YAA/B,CAA4CC,SAA5C,CAAsD,UAACC,MAAD,EAAiB;AACrEN,yBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BK,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBD,IAAhD;AACA,uBAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBD,IAApC,CAFqE,CAGrE;AACA;AACA;AACA;AACA;AACD,iBARD;AASA;;AACF,mBAAK,gBAAL;AACE,qBAAK5C,UAAL,sBAAsB,0EAAtB;AACA,qBAAKL,WAAL,CAAiBoD,QAAjB,GAA4BN,YAA5B,CAAyCC,SAAzC,CAAmD,UAACC,MAAD,EAAiB;AAClEN,yBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAM,CAACC,IAAP,CAAYI,KAAZ,CAAkBJ,IAA1C;AACA,uBAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYI,KAAZ,CAAkBJ,IAAjC,CAFkE,CAGlE;AACA;AACA;AACA;AACA;AACD,iBARD;AASA;;AACF,mBAAK,cAAL;AACE,qBAAK5C,UAAL,sBAAsB,yEAAtB;AACA,qBAAKL,WAAL,CAAiBsD,OAAjB,GAA2BR,YAA3B,CAAwCC,SAAxC,CAAkD,UAACC,MAAD,EAAiB;AACjEN,yBAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBK,MAAM,CAACC,IAAP,CAAYM,IAAZ,CAAiBN,IAAxC;AACA,uBAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYM,IAAZ,CAAiBN,IAAhC,CAFiE,CAGjE;AACA;AACA;AACA;AACA;AACD,iBARD;AASA;;AACF,mBAAK,iBAAL;AACE,qBAAK5C,UAAL,sBAAsB,2EAAtB;AACA,qBAAKL,WAAL,CAAiBwD,SAAjB,GAA6BV,YAA7B,CAA0CC,SAA1C,CAAoD,UAACC,MAAD,EAAiB;AACnEN,yBAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBK,MAAM,CAACC,IAAP,CAAYQ,MAAZ,CAAmBR,IAA5C;AACA,uBAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYQ,MAAZ,CAAmBR,IAAlC,CAFmE,CAGnE;AACA;AACA;AACA;AACA;AACD,iBARD;AASA;;AACF,mBAAK,kBAAL;AACE,qBAAK5C,UAAL,sBAAsB,4EAAtB;AACA,qBAAKL,WAAL,CAAiB0D,UAAjB,GAA8BZ,YAA9B,CAA2CC,SAA3C,CAAqD,UAACC,MAAD,EAAiB;AACpEN,yBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BK,MAAM,CAACC,IAAP,CAAYU,OAAZ,CAAoBV,IAA9C;AACA,uBAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYU,OAAZ,CAAoBV,IAAnC,CAFoE,CAGpE;AACA;AACA;AACA;AACA;AACD,iBARD;AASA;;AACF,mBAAK,gBAAL;AACE,qBAAK5C,UAAL,sBAAsB,0EAAtB;AACA,qBAAKL,WAAL,CAAiB4D,QAAjB,GAA4Bd,YAA5B,CAAyCC,SAAzC,CAAmD,UAACC,MAAD,EAAiB;AAClEN,yBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAM,CAACC,IAAP,CAAYY,KAAZ,CAAkBZ,IAA1C;AACA,uBAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYY,KAAZ,CAAkBZ,IAAjC,CAFkE,CAGlE;AACA;AACA;AACA;AACA;AACD,iBARD;AASA;AAxEJ;;AA0EA,iBAAKG,QAAL;AACA,iBAAKQ,QAAL;AACA,iBAAKN,OAAL;AACA,iBAAKI,UAAL;AACA,iBAAKF,SAAL;AACA,iBAAKX,WAAL;AACD;AAjK0B;AAAA;AAAA,iBAkK3B,oBAAW;AAAA;;AACT,iBAAK7C,WAAL,CAAiB4D,QAAjB,GAA4Bd,YAA5B,CAAyCC,SAAzC,CAAmD,UAACC,MAAD,EAAiB;AAClEN,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAM,CAACC,IAAP,CAAYY,KAAZ,CAAkBZ,IAA1C;AACA,oBAAI,CAAClC,KAAL,GAAaiC,MAAM,CAACC,IAAP,CAAYY,KAAZ,CAAkBZ,IAA/B;AACD,aAHD;AAID;AAvK0B;AAAA;AAAA,iBAwK3B,qBAAY;AAAA;;AACV,iBAAKjD,WAAL,CAAiBwD,SAAjB,GAA6BV,YAA7B,CAA0CC,SAA1C,CAAoD,UAACC,MAAD,EAAiB;AACnEN,qBAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBK,MAAM,CAACC,IAAP,CAAYQ,MAAZ,CAAmBR,IAA5C;AACA,oBAAI,CAACpC,MAAL,GAAcmC,MAAM,CAACC,IAAP,CAAYQ,MAAZ,CAAmBR,IAAjC;AACD,aAHD;AAID;AA7K0B;AAAA;AAAA,iBA8K3B,iBAAQa,OAAR,EAAkB;AAAA;;AAChB,iBAAK9D,WAAL,CAAiBsD,OAAjB,CAAyBQ,OAAzB,EAAkChB,YAAlC,CAA+CC,SAA/C,CAAyD,UAACC,MAAD,EAAiB;AACxEN,qBAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBK,MAAM,CAACC,IAAP,CAAYM,IAAZ,CAAiBN,IAAxC;AACA,oBAAI,CAACtC,GAAL,GAAWqC,MAAM,CAACC,IAAP,CAAYM,IAAZ,CAAiBN,IAA5B;AACD,aAHD;AAID;AAnL0B;AAAA;AAAA,iBAoL3B,kBAASc,KAAT,EAAiB;AAAA;;AACf,iBAAK/D,WAAL,CAAiBoD,QAAjB,CAA0BW,KAA1B,EAAiCjB,YAAjC,CAA8CC,SAA9C,CAAwD,UAACC,MAAD,EAAiB;AACvEN,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAM,CAACC,IAAP,CAAYI,KAAZ,CAAkBJ,IAA1C;AACA,oBAAI,CAACrC,KAAL,GAAaoC,MAAM,CAACC,IAAP,CAAYI,KAAZ,CAAkBJ,IAA/B;AACD,aAHD;AAID;AAzL0B;AAAA;AAAA,iBA0L3B,qBAAYe,MAAZ,EAAqB;AAAA;;AACnB,iBAAKhE,WAAL,CACG6C,WADH,CACemB,MADf,EAEGlB,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvCN,qBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BK,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBD,IAAhD;AACA,oBAAI,CAACvC,QAAL,GAAgBsC,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBD,IAArC;AACD,aALH;AAMD;AAjM0B;AAAA;AAAA,iBAkM3B,sBAAa;AAAA;;AACX,iBAAKjD,WAAL,CAAiB0D,UAAjB,GAA8BZ,YAA9B,CAA2CC,SAA3C,CAAqD,UAACC,MAAD,EAAiB;AACpEN,qBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BK,MAAM,CAACC,IAAP,CAAYU,OAAZ,CAAoBV,IAA9C;AACA,oBAAI,CAACnC,OAAL,GAAekC,MAAM,CAACC,IAAP,CAAYU,OAAZ,CAAoBV,IAAnC;AACD,aAHD;AAID;AAvM0B;AAAA;AAAA,iBAwM3B,qBAAYgB,MAAZ,EAAoB;AAClB,iBAAKC,OAAL,GAAeD,MAAM,CAACE,GAAtB;AACA,iBAAKC,aAAL,GAAqBH,MAAM,CAACI,SAA5B;AACA,iBAAKH,OAAL,CAAaI,gBAAb;AACD;AA5M0B;AAAA;AAAA,iBA6M3B,sBAAaC,KAAb,EAAyB;AACvB7B,mBAAO,CAACC,GAAR,CAAY,KAAZ,EAAmB4B,KAAnB;AACAC,iBAAK,CAAC,kCAAkCD,KAAlC,GAA0C,GAA3C,CAAL,CAFuB,CAGvB;AACA;AACA;AACA;AACA;AACA;AACD;AAtN0B;AAAA;AAAA,iBAuN3B,4BAAmBA,KAAnB,EAA+B;AAC7B,iBAAKjC,YAAL,GAAoB,KAAK4B,OAAL,CAAaO,eAAb,EAApB;;AACA,gBAAI,KAAKnC,YAAL,CAAkBoC,MAAlB,GAA2B,CAA/B,EAAkC;AAChC,mBAAKnE,aAAL,GAAqB,KAArB;AACD,aAFD,MAEO;AACL,mBAAKA,aAAL,GAAqB,IAArB;AACD;;AACDmC,mBAAO,CAACC,GAAR,CAAY,KAAKL,YAAjB,EAA+B,KAAKA,YAAL,CAAkB,CAAlB,EAAqBqC,UAArB,CAAgCC,IAA/D,EAP6B,CAS7B;AACA;AACA;AACA;AACA;AACA;AACD;AAtO0B;AAAA;AAAA,iBAuO3B,mBAAU3B,IAAV,EAAsB;AACpB,oBAAQ,KAAK/C,MAAL,CAAY0C,GAApB;AACE,mBAAK,mBAAL;AACE,qBAAKiC,YAAL,CAAkBC,IAAlB;;AACA,oBAAI7B,IAAJ,EAAU;AACR,uBAAKlB,WAAL,GAAmB,KAAK5B,EAAL,CAAQgB,KAAR,CAAc;AAC/Ba,2BAAO,EAAE,CACP,KAAKM,YAAL,CAAkB,CAAlB,EAAqBqC,UAArB,CAAgCC,IADzB,EAEP,0DAAWvD,QAFJ,CADsB;AAK/BI,wBAAI,EAAE,CACJsD,MAAM,CAAC,KAAKzC,YAAL,CAAkB,CAAlB,EAAqBqC,UAArB,CAAgClD,IAAhC,CAAqCwB,IAArC,CAA0C+B,EAA3C,CADF,EAEJ,0DAAW3D,QAFP,CALyB;AAS/BE,uBAAG,EAAE,CACHwD,MAAM,CACJ,KAAKzC,YAAL,CAAkB,CAAlB,EAAqBqC,UAArB,CAAgClD,IAAhC,CAAqCwB,IAArC,CAA0C0B,UAA1C,CAAqDpD,GAArD,CAAyD0B,IAAzD,CAA8D+B,EAD1D,CADH,CAT0B;AAc/B5D,yBAAK,EAAE,CACL2D,MAAM,CACJ,KAAKzC,YAAL,CAAkB,CAAlB,EAAqBqC,UAArB,CAAgClD,IAAhC,CAAqCwB,IAArC,CAA0C0B,UAA1C,CAAqDpD,GAArD,CAAyD0B,IAAzD,CACG0B,UADH,CACcvD,KADd,CACoB6B,IADpB,CACyB+B,EAFrB,CADD;AAdwB,mBAAd,CAAnB;AAqBD,iBAtBD,MAsBO;AACL,uBAAKjD,WAAL,GAAmB,KAAK5B,EAAL,CAAQgB,KAAR,CAAc;AAC/Ba,2BAAO,EAAE,CAAC,EAAD,EAAK,0DAAWX,QAAhB,CADsB;AAE/BI,wBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWJ,QAAhB,CAFyB;AAG/BE,uBAAG,EAAE,CAAC,EAAD,CAH0B;AAI/BH,yBAAK,EAAE,CAAC,EAAD;AAJwB,mBAAd,CAAnB;AAMD;;AACD;;AACF,mBAAK,gBAAL;AACE,qBAAK6D,SAAL,CAAeH,IAAf;;AACA,oBAAI7B,IAAJ,EAAU;AACR,uBAAKzB,QAAL,GAAgB,KAAKrB,EAAL,CAAQgB,KAAR,CAAc;AAC5BM,wBAAI,EAAE,CAAC,KAAKa,YAAL,CAAkB,CAAlB,EAAqBqC,UAArB,CAAgCC,IAAjC,EAAuC,0DAAWvD,QAAlD,CADsB;AAE5BK,8BAAU,EAAE,CACV,KAAKY,YAAL,CAAkB,CAAlB,EAAqBqC,UAArB,CAAgCjD,UADtB,EAEV,0DAAWL,QAFD,CAFgB;AAM5BE,uBAAG,EAAE,CACHwD,MAAM,CAAC,KAAKzC,YAAL,CAAkB,CAAlB,EAAqBqC,UAArB,CAAgCpD,GAAhC,CAAoC0B,IAApC,CAAyC+B,EAA1C,CADH,EAEH,0DAAW3D,QAFR,CANuB;AAU5BD,yBAAK,EAAE,CACL2D,MAAM,CACJ,KAAKzC,YAAL,CAAkB,CAAlB,EAAqBqC,UAArB,CAAgCpD,GAAhC,CAAoC0B,IAApC,CAAyC0B,UAAzC,CAAoDvD,KAApD,CAA0D6B,IAA1D,CACG+B,EAFC,CADD,EAKL,0DAAW3D,QALN;AAVqB,mBAAd,CAAhB;AAkBD,iBAnBD,MAmBO;AACL,uBAAKG,QAAL,GAAgB,KAAKrB,EAAL,CAAQgB,KAAR,CAAc;AAC5BM,wBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWJ,QAAhB,CADsB;AAE5BK,8BAAU,EAAE,CAAC,EAAD,EAAK,0DAAWL,QAAhB,CAFgB;AAG5BE,uBAAG,EAAE,CAAC,EAAD,EAAK,0DAAWF,QAAhB,CAHuB;AAI5BD,yBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB;AAJqB,mBAAd,CAAhB;AAMD;;AACD;;AACF,mBAAK,cAAL;AACE,qBAAK6D,QAAL,CAAcJ,IAAd;;AACA,oBAAI7B,IAAJ,EAAU;AACR,uBAAK3B,OAAL,GAAe,KAAKnB,EAAL,CAAQgB,KAAR,CAAc;AAC3BI,uBAAG,EAAE,CAAC,KAAKe,YAAL,CAAkB,CAAlB,EAAqBqC,UAArB,CAAgCC,IAAjC,EAAuC,0DAAWvD,QAAlD,CADsB;AAE3BD,yBAAK,EAAE,CACL2D,MAAM,CAAC,KAAKzC,YAAL,CAAkB,CAAlB,EAAqBqC,UAArB,CAAgCvD,KAAhC,CAAsC6B,IAAtC,CAA2C+B,EAA5C,CADD,EAEL,0DAAW3D,QAFN;AAFoB,mBAAd,CAAf;AAOD,iBARD,MAQO;AACL,uBAAKC,OAAL,GAAe,KAAKnB,EAAL,CAAQgB,KAAR,CAAc;AAC3BI,uBAAG,EAAE,CAAC,EAAD,EAAK,0DAAWF,QAAhB,CADsB;AAE3BD,yBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB;AAFoB,mBAAd,CAAf;AAID;;AACD;;AACF,mBAAK,iBAAL;AACE,qBAAK8D,UAAL,CAAgBL,IAAhB;;AACA,oBAAI7B,IAAJ,EAAU;AACR,uBAAK/B,SAAL,GAAiB,KAAKf,EAAL,CAAQgB,KAAR,CAAc;AAC7BC,yBAAK,EAAE,CAAC,KAAKkB,YAAL,CAAkB,CAAlB,EAAqBqC,UAArB,CAAgCC,IAAjC,EAAuC,0DAAWvD,QAAlD;AADsB,mBAAd,CAAjB;AAGD,iBAJD,MAIO;AACL,uBAAKH,SAAL,GAAiB,KAAKf,EAAL,CAAQgB,KAAR,CAAc;AAC7BC,yBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB;AADsB,mBAAd,CAAjB;AAGD;;AACD;;AACF,mBAAK,kBAAL;AACE,qBAAK+D,WAAL,CAAiBN,IAAjB;;AACA,oBAAI7B,IAAJ,EAAU;AACR,uBAAKtB,UAAL,GAAkB,KAAKxB,EAAL,CAAQgB,KAAR,CAAc;AAC9BS,0BAAM,EAAE,CAAC,KAAKU,YAAL,CAAkB,CAAlB,EAAqBqC,UAArB,CAAgCC,IAAjC,EAAuC,0DAAWvD,QAAlD,CADsB;AAE9BD,yBAAK,EAAE,CACL,KAAKkB,YAAL,CAAkB,CAAlB,EAAqBqC,UAArB,CAAgCvD,KAAhC,CAAsC6B,IAAtC,CAA2C+B,EADtC,EAEL,0DAAW3D,QAFN;AAFuB,mBAAd,CAAlB;AAOD,iBARD,MAQO;AACL,uBAAKM,UAAL,GAAkB,KAAKxB,EAAL,CAAQgB,KAAR,CAAc;AAC9BS,0BAAM,EAAE,CAAC,EAAD,EAAK,0DAAWP,QAAhB,CADsB;AAE9BD,yBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB;AAFuB,mBAAd,CAAlB;AAID;;AACD;;AACF,mBAAK,gBAAL;AACE,qBAAKgE,SAAL,CAAeP,IAAf;;AACA,oBAAI7B,IAAJ,EAAU;AACR,uBAAKpB,QAAL,GAAgB,KAAK1B,EAAL,CAAQgB,KAAR,CAAc;AAC5BW,wBAAI,EAAE,CAAC,KAAKQ,YAAL,CAAkB,CAAlB,EAAqBqC,UAArB,CAAgCC,IAAjC,EAAuC,0DAAWvD,QAAlD;AADsB,mBAAd,CAAhB;AAGD,iBAJD,MAIO;AACL,uBAAKQ,QAAL,GAAgB,KAAK1B,EAAL,CAAQgB,KAAR,CAAc;AAC5BW,wBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWT,QAAhB;AADsB,mBAAd,CAAhB;AAGD;;AACD;AAzHJ;AA2HD,WAnW0B,CAoW3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAtY2B;AAAA;AAAA,iBAuY3B,mBAAUkD,KAAV,EAAiB;AACf,iBAAKjB,OAAL,CAAaiB,KAAK,CAACe,MAAN,CAAaC,KAA1B;AACD;AAzY0B;AAAA;AAAA,iBA0Y3B,oBAAWhB,KAAX,EAAkB;AAChB,iBAAKnB,QAAL,CAAcmB,KAAK,CAACe,MAAN,CAAaC,KAA3B;AACD;AA5Y0B;AAAA;AAAA,iBA6Y3B,uBAAc;AAAA;;AACZ,gBAAIC,IAAI,GAAG,EAAX;AACA9C,mBAAO,CAACC,GAAR,CAAY,KAAKzB,SAAL,CAAeqE,KAA3B;;AACA,gBAAI,CAAC,KAAKhF,aAAV,EAAyB;AACvB,mBAAKP,WAAL,CACGyF,WADH,CACe,KAAKvE,SAAL,CAAeqE,KAD9B,EACqC,KAAKjD,YAAL,CAAkB,CAAlB,EAAqB0C,EAD1D,EAEGjC,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BwC,oBAAI,GAAGxC,MAAM,CAACC,IAAd;AACAP,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,oBAAIA,MAAM,CAACC,IAAP,CAAYyC,WAAhB,EAA6B;AAC3B,wBAAI,CAACtF,MAAL,CAAYuF,OAAZ,CAAoB,UAApB;;AACA,wBAAI,CAACzB,OAAL,CAAa0B,WAAb;;AACA,wBAAI,CAACT,UAAL,CAAgBU,IAAhB;;AACA,wBAAI,CAAC7F,WAAL,CACGwD,SADH,GAEGV,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvCN,2BAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBK,MAAM,CAACC,IAAP,CAAYQ,MAAZ,CAAmBR,IAA5C;AACA,0BAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYQ,MAAZ,CAAmBR,IAAlC;AACD,mBALH;AAMD,iBAVD,MAUO;AACL,sBAAID,MAAM,CAAC8C,MAAP,CAAc,CAAd,EAAiBC,UAAjB,CAA4BC,KAA5B,CAAkCC,IAAlC,IAA0C,iBAA9C,EAAiE;AAC/D,0BAAI,CAAC7F,MAAL,CAAY4F,KAAZ,CAAkB,4CAAlB;AACD,mBAFD,MAEO;AACL,0BAAI,CAAC5F,MAAL,CAAY4F,KAAZ,CAAkB,kCAAlB;AACD;AACF;AACF,eAtBH;AAuBD,aAxBD,MAwBO;AACL,mBAAKhG,WAAL,CAAiBkG,SAAjB,CAA2B,KAAKhF,SAAL,CAAeqE,KAA1C,EAAiDxC,SAAjD,CACE,UAACC,MAAD,EAAiB;AACfwC,oBAAI,GAAGxC,MAAM,CAACC,IAAd;AACAP,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,oBAAIA,MAAM,CAACC,IAAP,CAAYkD,WAAhB,EAA6B;AAC3B,wBAAI,CAAC/F,MAAL,CAAYuF,OAAZ,CAAoB,UAApB;;AACA,wBAAI,CAACzB,OAAL,CAAa0B,WAAb;;AACA,wBAAI,CAACT,UAAL,CAAgBU,IAAhB;;AACA,wBAAI,CAAC7F,WAAL,CACGwD,SADH,GAEGV,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvCN,2BAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBK,MAAM,CAACC,IAAP,CAAYQ,MAAZ,CAAmBR,IAA5C;AACA,0BAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYQ,MAAZ,CAAmBR,IAAlC;AACD,mBALH;AAMD,iBAVD,MAUO;AACL,sBAAID,MAAM,CAAC8C,MAAP,CAAc,CAAd,EAAiBC,UAAjB,CAA4BC,KAA5B,CAAkCC,IAAlC,IAA0C,iBAA9C,EAAiE;AAC/D,0BAAI,CAAC7F,MAAL,CAAY4F,KAAZ,CAAkB,4CAAlB;AACD,mBAFD,MAEO;AACL,0BAAI,CAAC5F,MAAL,CAAY4F,KAAZ,CAAkB,kCAAlB;AACD;AACF;AACF,eArBH,EAsBE,UAACA,KAAD,EAAW;AACTtD,uBAAO,CAACC,GAAR,CAAYqD,KAAZ;;AACA,sBAAI,CAAC5F,MAAL,CAAY4F,KAAZ,CAAkB,SAAlB;AACD,eAzBH;AA2BD;AACF;AArc0B;AAAA;AAAA,iBAsc3B,qBAAY;AAAA;;AACV,gBAAIR,IAAI,GAAG,EAAX;AACA9C,mBAAO,CAACC,GAAR,CAAY,KAAKrB,OAAL,CAAaiE,KAAzB;;AACA,gBAAI,CAAC,KAAKhF,aAAV,EAAyB;AACvB,mBAAKP,WAAL,CACGoG,SADH,CACa,KAAK9E,OAAL,CAAaiE,KAD1B,EACiC,KAAKjD,YAAL,CAAkB,CAAlB,EAAqB0C,EADtD,EAEGjC,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BwC,oBAAI,GAAGxC,MAAM,CAACC,IAAd;AACAP,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,oBAAIA,MAAM,CAACC,IAAP,CAAYoD,SAAhB,EAA2B;AACzB,wBAAI,CAACjG,MAAL,CAAYuF,OAAZ,CAAoB,UAApB;;AACA,wBAAI,CAACzB,OAAL,CAAa0B,WAAb;;AAEA,wBAAI,CAACV,QAAL,CAAcW,IAAd;;AACA,wBAAI,CAAC7F,WAAL,CAAiBsD,OAAjB,GAA2BR,YAA3B,CAAwCC,SAAxC,CAAkD,UAACC,MAAD,EAAiB;AACjEN,2BAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBK,MAAM,CAACC,IAAP,CAAYM,IAAZ,CAAiBN,IAAxC;AACA,0BAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYM,IAAZ,CAAiBN,IAAhC;AACD,mBAHD;AAID,iBATD,MASO;AACL,sBAAID,MAAM,CAAC8C,MAAP,CAAc,CAAd,EAAiBC,UAAjB,CAA4BC,KAA5B,CAAkCC,IAAlC,IAA0C,iBAA9C,EAAiE;AAC/D,0BAAI,CAAC7F,MAAL,CAAY4F,KAAZ,CAAkB,4CAAlB;AACD,mBAFD,MAEO;AACL,0BAAI,CAAC5F,MAAL,CAAY4F,KAAZ,CAAkB,kCAAlB;AACD;AACF;AACF,eArBH;AAsBD,aAvBD,MAuBO;AACL,mBAAKhG,WAAL,CAAiBsG,MAAjB,CAAwB,KAAKhF,OAAL,CAAaiE,KAArC,EAA4CxC,SAA5C,CAAsD,UAACC,MAAD,EAAiB;AACrEwC,oBAAI,GAAGxC,MAAM,CAACC,IAAd;AACAP,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,oBAAIA,MAAM,CAACC,IAAP,CAAYsD,SAAhB,EAA2B;AACzB,wBAAI,CAACnG,MAAL,CAAYuF,OAAZ,CAAoB,UAApB;;AACA,wBAAI,CAACzB,OAAL,CAAa0B,WAAb;;AACA,wBAAI,CAACV,QAAL,CAAcW,IAAd;;AACA,wBAAI,CAAC7F,WAAL,CAAiBsD,OAAjB,GAA2BR,YAA3B,CAAwCC,SAAxC,CAAkD,UAACC,MAAD,EAAiB;AACjEN,2BAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBK,MAAM,CAACC,IAAP,CAAYM,IAAZ,CAAiBN,IAAxC;AACA,0BAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYM,IAAZ,CAAiBN,IAAhC;AACD,mBAHD;AAID,iBARD,MAQO;AACL,sBAAID,MAAM,CAAC8C,MAAP,CAAc,CAAd,EAAiBC,UAAjB,CAA4BC,KAA5B,CAAkCC,IAAlC,IAA0C,iBAA9C,EAAiE;AAC/D,0BAAI,CAAC7F,MAAL,CAAY4F,KAAZ,CAAkB,4CAAlB;AACD,mBAFD,MAEO;AACL,0BAAI,CAAC5F,MAAL,CAAY4F,KAAZ,CAAkB,kCAAlB;AACD;AACF;AACF,eAlBD;AAmBD;AACF;AArf0B;AAAA;AAAA,iBAsf3B,sBAAa;AAAA;;AACX,gBAAIR,IAAI,GAAG,EAAX;AACA9C,mBAAO,CAACC,GAAR,CAAY,KAAKnB,QAAL,CAAc+D,KAA1B;;AACA,gBAAI,CAAC,KAAKhF,aAAV,EAAyB;AACvB,mBAAKP,WAAL,CACGwG,UADH,CACc,KAAKhF,QAAL,CAAc+D,KAD5B,EACmC,KAAKjD,YAAL,CAAkB,CAAlB,EAAqB0C,EADxD,EAEGjC,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BwC,oBAAI,GAAGxC,MAAM,CAACC,IAAd;AACAP,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,oBAAIA,MAAM,CAACC,IAAP,CAAYwD,UAAhB,EAA4B;AAC1B,yBAAI,CAACrG,MAAL,CAAYuF,OAAZ,CAAoB,UAApB;;AACA,yBAAI,CAACzB,OAAL,CAAa0B,WAAb;;AACA,yBAAI,CAACX,SAAL,CAAeY,IAAf;;AACA,yBAAI,CAAC7F,WAAL,CACGoD,QADH,GAEGN,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvCN,2BAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAM,CAACC,IAAP,CAAYI,KAAZ,CAAkBJ,IAA1C;AACA,2BAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYI,KAAZ,CAAkBJ,IAAjC;AACD,mBALH;AAMD,iBAVD,MAUO;AACL,sBAAID,MAAM,CAAC8C,MAAP,CAAc,CAAd,EAAiBC,UAAjB,CAA4BC,KAA5B,CAAkCC,IAAlC,IAA0C,iBAA9C,EAAiE;AAC/D,2BAAI,CAAC7F,MAAL,CAAY4F,KAAZ,CAAkB,4CAAlB;AACD,mBAFD,MAEO;AACL,2BAAI,CAAC5F,MAAL,CAAY4F,KAAZ,CAAkB,kCAAlB;AACD;AACF;AACF,eAtBH;AAuBD,aAxBD,MAwBO;AACL,mBAAKhG,WAAL,CAAiB0G,OAAjB,CAAyB,KAAKlF,QAAL,CAAc+D,KAAvC,EAA8CxC,SAA9C,CAAwD,UAACC,MAAD,EAAiB;AACvEwC,oBAAI,GAAGxC,MAAM,CAACC,IAAd;AACAP,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,oBAAIA,MAAM,CAACC,IAAP,CAAY0D,UAAhB,EAA4B;AAC1B,yBAAI,CAACvG,MAAL,CAAYuF,OAAZ,CAAoB,UAApB;;AACA,yBAAI,CAACzB,OAAL,CAAa0B,WAAb;;AACA,yBAAI,CAACX,SAAL,CAAeY,IAAf;;AACA,yBAAI,CAAC7F,WAAL,CAAiBoD,QAAjB,GAA4BN,YAA5B,CAAyCC,SAAzC,CAAmD,UAACC,MAAD,EAAiB;AAClEN,2BAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAM,CAACC,IAAP,CAAYI,KAAZ,CAAkBJ,IAA1C;AACA,2BAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYI,KAAZ,CAAkBJ,IAAjC;AACD,mBAHD;AAID,iBARD,MAQO;AACL,sBAAID,MAAM,CAAC8C,MAAP,CAAc,CAAd,EAAiBC,UAAjB,CAA4BC,KAA5B,CAAkCC,IAAlC,IAA0C,iBAA9C,EAAiE;AAC/D,2BAAI,CAAC7F,MAAL,CAAY4F,KAAZ,CAAkB,4CAAlB;AACD,mBAFD,MAEO;AACL,2BAAI,CAAC5F,MAAL,CAAY4F,KAAZ,CAAkB,kCAAlB;AACD;AACF;AACF,eAlBD;AAmBD;AACF;AAtiB0B;AAAA;AAAA,iBAuiB3B,wBAAe;AAAA;;AACb,gBAAIR,IAAI,GAAG,EAAX;AACA9C,mBAAO,CAACC,GAAR,CAAY,KAAKhB,UAAL,CAAgB4D,KAA5B;;AACA,gBAAI,CAAC,KAAKhF,aAAV,EAAyB;AACvB,mBAAKP,WAAL,CACG4G,YADH,CACgB,KAAKjF,UAAL,CAAgB4D,KADhC,EACuC,KAAKjD,YAAL,CAAkB,CAAlB,EAAqB0C,EAD5D,EAEGjC,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BwC,oBAAI,GAAGxC,MAAM,CAACC,IAAd;AACAP,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,oBAAIA,MAAM,CAACC,IAAP,CAAY4D,YAAhB,EAA8B;AAC5B,yBAAI,CAACzG,MAAL,CAAYuF,OAAZ,CAAoB,UAApB;;AACA,yBAAI,CAACzB,OAAL,CAAa0B,WAAb;;AACA,yBAAI,CAACR,WAAL,CAAiBS,IAAjB;;AACA,yBAAI,CAAC7F,WAAL,CACG0D,UADH,GAEGZ,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvCN,2BAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BK,MAAM,CAACC,IAAP,CAAYU,OAAZ,CAAoBV,IAA9C;AACA,2BAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYU,OAAZ,CAAoBV,IAAnC;AACD,mBALH;AAMD,iBAVD,MAUO;AACL,sBAAID,MAAM,CAAC8C,MAAP,CAAc,CAAd,EAAiBC,UAAjB,CAA4BC,KAA5B,CAAkCC,IAAlC,IAA0C,iBAA9C,EAAiE;AAC/D,2BAAI,CAAC7F,MAAL,CAAY4F,KAAZ,CAAkB,4CAAlB;AACD,mBAFD,MAEO;AACL,2BAAI,CAAC5F,MAAL,CAAY4F,KAAZ,CAAkB,kCAAlB;AACD;AACF;AACF,eAtBH;AAuBD,aAxBD,MAwBO;AACL,mBAAKhG,WAAL,CACG8G,SADH,CACa,KAAKnF,UAAL,CAAgB4D,KAD7B,EAEGxC,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BwC,oBAAI,GAAGxC,MAAM,CAACC,IAAd;AACAP,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,oBAAIA,MAAM,CAACC,IAAP,CAAY8D,YAAhB,EAA8B;AAC5B,yBAAI,CAAC3G,MAAL,CAAYuF,OAAZ,CAAoB,UAApB;;AACA,yBAAI,CAACzB,OAAL,CAAa0B,WAAb;;AACA,yBAAI,CAACR,WAAL,CAAiBS,IAAjB;;AACA,yBAAI,CAAC7F,WAAL,CACG0D,UADH,GAEGZ,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvCN,2BAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BK,MAAM,CAACC,IAAP,CAAYU,OAAZ,CAAoBV,IAA9C;AACA,2BAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYU,OAAZ,CAAoBV,IAAnC;AACD,mBALH;AAMD,iBAVD,MAUO;AACL,sBAAID,MAAM,CAAC8C,MAAP,CAAc,CAAd,EAAiBC,UAAjB,CAA4BC,KAA5B,CAAkCC,IAAlC,IAA0C,iBAA9C,EAAiE;AAC/D,2BAAI,CAAC7F,MAAL,CAAY4F,KAAZ,CAAkB,4CAAlB;AACD,mBAFD,MAEO;AACL,2BAAI,CAAC5F,MAAL,CAAY4F,KAAZ,CAAkB,kCAAlB;AACD;AACF;AACF,eAtBH;AAuBD;AACF;AA3lB0B;AAAA;AAAA,iBA4lB3B,sBAAa;AAAA;;AACX,gBAAIR,IAAI,GAAG,EAAX;AACA9C,mBAAO,CAACC,GAAR,CAAY,KAAKd,QAAL,CAAc0D,KAA1B;;AACA,gBAAI,CAAC,KAAKhF,aAAV,EAAyB;AACvB,mBAAKP,WAAL,CACGgH,UADH,CACc,KAAKnF,QAAL,CAAc0D,KAD5B,EACmC,KAAKjD,YAAL,CAAkB,CAAlB,EAAqB0C,EADxD,EAEGjC,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BwC,oBAAI,GAAGxC,MAAM,CAACC,IAAd;AACAP,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,oBAAIA,MAAM,CAACC,IAAP,CAAYgE,UAAhB,EAA4B;AAC1B,yBAAI,CAAC7G,MAAL,CAAYuF,OAAZ,CAAoB,UAApB;;AACA,yBAAI,CAACzB,OAAL,CAAa0B,WAAb;;AACA,yBAAI,CAACP,SAAL,CAAeQ,IAAf;;AACA,yBAAI,CAAC7F,WAAL,CACG4D,QADH,GAEGd,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvCN,2BAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAM,CAACC,IAAP,CAAYY,KAAZ,CAAkBZ,IAA1C;AACA,2BAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYY,KAAZ,CAAkBZ,IAAjC;AACD,mBALH;AAMD,iBAVD,MAUO;AACL,sBAAID,MAAM,CAAC8C,MAAP,CAAc,CAAd,EAAiBC,UAAjB,CAA4BC,KAA5B,CAAkCC,IAAlC,IAA0C,iBAA9C,EAAiE;AAC/D,2BAAI,CAAC7F,MAAL,CAAY4F,KAAZ,CAAkB,4CAAlB;AACD,mBAFD,MAEO;AACL,2BAAI,CAAC5F,MAAL,CAAY4F,KAAZ,CAAkB,kCAAlB;AACD;AACF;AACF,eAtBH;AAuBD,aAxBD,MAwBO;AACL,mBAAKhG,WAAL,CAAiBkH,OAAjB,CAAyB,KAAKrF,QAAL,CAAc0D,KAAvC,EAA8CxC,SAA9C,CAAwD,UAACC,MAAD,EAAiB;AACvEwC,oBAAI,GAAGxC,MAAM,CAACC,IAAd;AACAP,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,oBAAIA,MAAM,CAACC,IAAP,CAAYkE,UAAhB,EAA4B;AAC1B,yBAAI,CAAC/G,MAAL,CAAYuF,OAAZ,CAAoB,UAApB;;AACA,yBAAI,CAACzB,OAAL,CAAa0B,WAAb;;AACA,yBAAI,CAACP,SAAL,CAAeQ,IAAf;;AACA,yBAAI,CAAC7F,WAAL,CAAiB4D,QAAjB,GAA4Bd,YAA5B,CAAyCC,SAAzC,CAAmD,UAACC,MAAD,EAAiB;AAClEN,2BAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAM,CAACC,IAAP,CAAYY,KAAZ,CAAkBZ,IAA1C;AACA,2BAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYY,KAAZ,CAAkBZ,IAAjC;AACD,mBAHD;AAID,iBARD,MAQO;AACL,sBAAID,MAAM,CAAC8C,MAAP,CAAc,CAAd,EAAiBC,UAAjB,CAA4BC,KAA5B,CAAkCC,IAAlC,IAA0C,iBAA9C,EAAiE;AAC/D,2BAAI,CAAC7F,MAAL,CAAY4F,KAAZ,CAAkB,4CAAlB;AACD,mBAFD,MAEO;AACL,2BAAI,CAAC5F,MAAL,CAAY4F,KAAZ,CAAkB,kCAAlB;AACD;AACF;AACF,eAlBD;AAmBD;AACF;AA5oB0B;AAAA;AAAA,iBA6oB3B,wBAAe;AAAA;;AACb,gBAAIR,IAAI,GAAG,EAAX;AACA9C,mBAAO,CAACC,GAAR,CAAY,KAAKZ,WAAL,CAAiBwD,KAA7B;;AACA,gBAAI,CAAC,KAAKhF,aAAV,EAAyB;AACvB,mBAAKP,WAAL,CACGoH,aADH,CACiB,KAAKrF,WAAL,CAAiBwD,KADlC,EACyC,KAAKjD,YAAL,CAAkB,CAAlB,EAAqB0C,EAD9D,EAEGjC,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BwC,oBAAI,GAAGxC,MAAM,CAACC,IAAd;AACAP,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,oBAAIA,MAAM,CAACC,IAAP,CAAYoE,aAAhB,EAA+B;AAC7B,yBAAI,CAACjH,MAAL,CAAYuF,OAAZ,CAAoB,UAApB;;AACA,yBAAI,CAACzB,OAAL,CAAa0B,WAAb;;AACA,yBAAI,CAACf,YAAL,CAAkBgB,IAAlB;;AACA,yBAAI,CAAC7F,WAAL,CACG6C,WADH,GAEGC,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvCN,2BAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BK,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBD,IAAhD;AACA,2BAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBD,IAApC;AACD,mBALH;AAMD,iBAVD,MAUO;AACL,sBAAID,MAAM,CAAC8C,MAAP,CAAc,CAAd,EAAiBC,UAAjB,CAA4BC,KAA5B,CAAkCC,IAAlC,IAA0C,iBAA9C,EAAiE;AAC/D,2BAAI,CAAC7F,MAAL,CAAY4F,KAAZ,CAAkB,4CAAlB;AACD,mBAFD,MAEO;AACL,2BAAI,CAAC5F,MAAL,CAAY4F,KAAZ,CAAkB,kCAAlB;AACD;AACF;AACF,eAtBH;AAuBD,aAxBD,MAwBO;AACL,mBAAKhG,WAAL,CACGsH,UADH,CACc,KAAKvF,WAAL,CAAiBwD,KAD/B,EAEGxC,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BwC,oBAAI,GAAGxC,MAAM,CAACC,IAAd;AACAP,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,oBAAIA,MAAM,CAACC,IAAP,CAAYsE,aAAhB,EAA+B;AAC7B,yBAAI,CAACnH,MAAL,CAAYuF,OAAZ,CAAoB,UAApB;;AACA,yBAAI,CAACzB,OAAL,CAAa0B,WAAb;;AACA,yBAAI,CAACf,YAAL,CAAkBgB,IAAlB;;AACA,yBAAI,CAAC7F,WAAL,CACG6C,WADH,GAEGC,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvCN,2BAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BK,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBD,IAAhD;AACA,2BAAI,CAACE,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBD,IAApC;AACD,mBALH;AAMD,iBAVD,MAUO;AACL,sBAAID,MAAM,CAAC8C,MAAP,CAAc,CAAd,EAAiBC,UAAjB,CAA4BC,KAA5B,CAAkCC,IAAlC,IAA0C,iBAA9C,EAAiE;AAC/D,2BAAI,CAAC7F,MAAL,CAAY4F,KAAZ,CAAkB,4CAAlB;AACD,mBAFD,MAEO;AACL,2BAAI,CAAC5F,MAAL,CAAY4F,KAAZ,CAAkB,kCAAlB;AACD;AACF;AACF,eAtBH;AAuBD;AACF;AAjsB0B;AAAA;AAAA,iBAksB3B,wBAAe;AAAA;;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAtD,mBAAO,CAACC,GAAR,CAAY,KAAKrB,OAAL,CAAaiE,KAAzB;;AACA,oBAAQ,KAAKrF,MAAL,CAAY0C,GAApB;AACE,mBAAK,mBAAL;AACE,qBAAK5C,WAAL,CACGwH,aADH,CACiB,KAAKlF,YAAL,CAAkB,CAAlB,EAAqB0C,EADtC,EAEGjC,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BN,yBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,sBAAIA,MAAM,CAACC,IAAP,CAAYuE,aAAhB,EAA+B;AAC7B,2BAAI,CAACpH,MAAL,CAAYuF,OAAZ,CAAoB,UAApB;;AACA,2BAAI,CAACzB,OAAL,CAAa0B,WAAb;;AACA,2BAAI,CAAC6B,WAAL,CAAiB5B,IAAjB;;AACA,2BAAI,CAAC7F,WAAL,CACG6C,WADH,GAEGC,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvC,6BAAI,CAACG,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBD,IAApC;AACD,qBAJH;AAKD,mBATD,MASO;AACL,2BAAI,CAAC7C,MAAL,CAAY4F,KAAZ,CAAkB,SAAlB;AACD;AACF,iBAhBH;AAiBA;;AACF,mBAAK,gBAAL;AACE,qBAAKhG,WAAL,CACG0H,UADH,CACc,KAAKpF,YAAL,CAAkB,CAAlB,EAAqB0C,EADnC,EAEGjC,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BN,yBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,sBAAIA,MAAM,CAACC,IAAP,CAAYyE,UAAhB,EAA4B;AAC1B,2BAAI,CAACtH,MAAL,CAAYuF,OAAZ,CAAoB,UAApB;;AACA,2BAAI,CAACzB,OAAL,CAAa0B,WAAb;;AACA,2BAAI,CAAC6B,WAAL,CAAiB5B,IAAjB;;AACA,2BAAI,CAAC7F,WAAL,CACGoD,QADH,GAEGN,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvC,6BAAI,CAACG,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYI,KAAZ,CAAkBJ,IAAjC;AACD,qBAJH;AAKD,mBATD,MASO;AACL,2BAAI,CAAC7C,MAAL,CAAY4F,KAAZ,CAAkB,SAAlB;AACD;AACF,iBAhBH;AAiBA;;AACF,mBAAK,cAAL;AACE,qBAAKhG,WAAL,CACG2H,SADH,CACa,KAAKrF,YAAL,CAAkB,CAAlB,EAAqB0C,EADlC,EAEGjC,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BN,yBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,sBAAIA,MAAM,CAACC,IAAP,CAAY2E,SAAhB,EAA2B;AACzB,2BAAI,CAACxH,MAAL,CAAYuF,OAAZ,CAAoB,UAApB;;AACA,2BAAI,CAACzB,OAAL,CAAa0B,WAAb;;AACA,2BAAI,CAAC6B,WAAL,CAAiB5B,IAAjB;;AACA,2BAAI,CAAC7F,WAAL,CACGsD,OADH,GAEGR,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvC,6BAAI,CAACG,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYM,IAAZ,CAAiBN,IAAhC;AACD,qBAJH;AAKD,mBATD,MASO;AACL,2BAAI,CAAC7C,MAAL,CAAY4F,KAAZ,CAAkB,SAAlB;AACD;AACF,iBAhBH;AAiBA;;AACF,mBAAK,iBAAL;AACE,qBAAKhG,WAAL,CACG6H,WADH,CACe,KAAKvF,YAAL,CAAkB,CAAlB,EAAqB0C,EADpC,EAEGjC,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BN,yBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,sBAAIA,MAAM,CAACC,IAAP,CAAY4E,WAAhB,EAA6B;AAC3B,2BAAI,CAACzH,MAAL,CAAYuF,OAAZ,CAAoB,UAApB;;AACA,2BAAI,CAACzB,OAAL,CAAa0B,WAAb;;AACA,2BAAI,CAAC6B,WAAL,CAAiB5B,IAAjB;;AACA,2BAAI,CAAC7F,WAAL,CACGwD,SADH,GAEGV,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvC,6BAAI,CAACG,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYQ,MAAZ,CAAmBR,IAAlC;AACD,qBAJH;AAKD,mBATD,MASO;AACL,2BAAI,CAAC7C,MAAL,CAAY4F,KAAZ,CAAkB,SAAlB;AACD;AACF,iBAhBH;AAiBA;;AACF,mBAAK,kBAAL;AACE,qBAAKhG,WAAL,CACG8H,YADH,CACgB,KAAKxF,YAAL,CAAkB,CAAlB,EAAqB0C,EADrC,EAEGjC,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BN,yBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,sBAAIA,MAAM,CAACC,IAAP,CAAY6E,YAAhB,EAA8B;AAC5B,2BAAI,CAAC1H,MAAL,CAAYuF,OAAZ,CAAoB,UAApB;;AACA,2BAAI,CAACzB,OAAL,CAAa0B,WAAb;;AACA,2BAAI,CAAC6B,WAAL,CAAiB5B,IAAjB;;AACA,2BAAI,CAAC7F,WAAL,CACG0D,UADH,GAEGZ,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvC,6BAAI,CAACG,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYU,OAAZ,CAAoBV,IAAnC;AACD,qBAJH;AAKD,mBATD,MASO;AACL,2BAAI,CAAC7C,MAAL,CAAY4F,KAAZ,CAAkB,SAAlB;AACD;AACF,iBAhBH;AAiBA;;AACF,mBAAK,gBAAL;AACE,qBAAKhG,WAAL,CACG+H,UADH,CACc,KAAKzF,YAAL,CAAkB,CAAlB,EAAqB0C,EADnC,EAEGjC,SAFH,CAEa,UAACC,MAAD,EAAiB;AAC1BN,yBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,MAAxB;;AACA,sBAAIA,MAAM,CAACC,IAAP,CAAY8E,UAAhB,EAA4B;AAC1B,2BAAI,CAAC3H,MAAL,CAAYuF,OAAZ,CAAoB,UAApB;;AACA,2BAAI,CAACzB,OAAL,CAAa0B,WAAb;;AACA,2BAAI,CAAC6B,WAAL,CAAiB5B,IAAjB;;AACA,2BAAI,CAAC7F,WAAL,CACG4D,QADH,GAEGd,YAFH,CAEgBC,SAFhB,CAE0B,UAACC,MAAD,EAAiB;AACvC,6BAAI,CAACG,OAAL,GAAeH,MAAM,CAACC,IAAP,CAAYY,KAAZ,CAAkBZ,IAAjC;AACD,qBAJH;AAKD,mBATD,MASO;AACL,2BAAI,CAAC7C,MAAL,CAAY4F,KAAZ,CAAkB,SAAlB;AACD;AACF,iBAhBH;AAiBA;AAlHJ;AAoHD;AA10B0B;;AAAA;AAAA,S;;;;gBAhBpB;;gBAHA;;gBAAgB;;gBAChB;;gBACA;;;;;;gBAmCN,uD;AAAS,iBAAC,YAAD;;;gBACT,uD;AAAS,iBAAC,UAAD;;;gBACT,uD;AAAS,iBAAC,cAAD;;;gBACT,uD;AAAS,iBAAC,aAAD;;;gBACT,uD;AAAS,iBAAC,WAAD;;;gBACT,uD;AAAS,iBAAC,WAAD;;;gBACT,uD;AAAS,iBAAC,aAAD;;;AAxBCjG,sBAAgB,6DAH5B,gEAAU;AACTiI,gBAAQ,EAAR;AADS,OAAV,CAG4B,E,+EASL,yD,EACN,8D,EACC,sD,EACH,0D,EACI,wD,EAbS,GAAhBjI,gBAAgB,CAAhB;;;;;;;;ACpBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMf,UAAMkI,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAGEC,gBAAQ,EAAE,CACR;AACED,cAAI,EAAE,EADR;AAEEE,oBAAU,EAAE;AAFd,SADQ,EAKR;AACEF,cAAI,EAAE,QADR;AAEE;AACAG,mBAAS,EAAE,mEAHb;AAIEpF,cAAI,EAAE;AACJqF,iBAAK,EAAE,QADH;AAEJC,iBAAK,EAAE;AAFH;AAJR,SALQ,EAcR;AACEL,cAAI,EAAE,KADR;AAEE;AACAG,mBAAS,EAAE,mEAHb;AAIEpF,cAAI,EAAE;AACJqF,iBAAK,EAAE,KADH;AAEJC,iBAAK,EAAE;AAFH;AAJR,SAdQ,EAuBR;AACEL,cAAI,EAAE,OADR;AAEE;AACAG,mBAAS,EAAE,mEAHb;AAIEpF,cAAI,EAAE;AACJqF,iBAAK,EAAE,OADH;AAEJC,iBAAK,EAAE;AAFH;AAJR,SAvBQ,EAgCR;AACEL,cAAI,EAAE,UADR;AAEE;AACAG,mBAAS,EAAE,mEAHb;AAIEpF,cAAI,EAAE;AACJqF,iBAAK,EAAE,UADH;AAEJC,iBAAK,EAAE;AAFH;AAJR,SAhCQ,EAyCR;AACEL,cAAI,EAAE,SADR;AAEE;AACAG,mBAAS,EAAE,mEAHb;AAIEpF,cAAI,EAAE;AACJqF,iBAAK,EAAE,SADH;AAEJC,iBAAK,EAAE;AAFH;AAJR,SAzCQ,EAkDR;AACEL,cAAI,EAAE,OADR;AAEE;AACAG,mBAAS,EAAE,mEAHb;AAIEpF,cAAI,EAAE;AACJqF,iBAAK,EAAE,OADH;AAEJC,iBAAK,EAAE;AAFH;AAJR,SAlDQ;AAHZ,OADqB,CAAvB;;UAuEaC,oBAAoB;AAAA;AAAA,O;;AAApBA,0BAAoB,6DAJhC,+DAAS;AACR7I,eAAO,EAAE,CAAC,6DAAa8I,QAAb,CAAsBR,MAAtB,CAAD,CADD;AAERS,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIgC,GAApBF,oBAAoB,CAApB","file":"views-masters-masters-module-es5.js","sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { mastersComponent } from './masters.component';\r\n\r\n// Dropdowns Component\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\n// Buttons Routing\r\nimport { mastersRoutingModule } from './masters-routing.module';\r\n\r\n// Angular\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { ActionRenderer } from '../../utils/StatusRenderer';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TabsModule,\r\n    ReactiveFormsModule,\r\n    AgGridModule.withComponents([]),\r\n    mastersRoutingModule,\r\n    BsDropdownModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    mastersComponent,\r\n    ActionRenderer\r\n  ]\r\n})\r\nexport class MastersModule { }\r\n","import { Component, ViewChild } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DataService } from \"../../data.service\";\r\nimport { ActionRenderer } from \"../../utils/StatusRenderer\";\r\n\r\nimport {\r\n  VillageMasterColumn,\r\n  AreaMasterColumn,\r\n  LGAMasterColumn,\r\n  StateMasterColumn,\r\n  MarketMasterColumn,\r\n  CropMasterColumn,\r\n} from \"../../constants/columnMetadata\";\r\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\r\n\r\n@Component({\r\n  templateUrl: \"masters.component.html\",\r\n})\r\nexport class mastersComponent {\r\n  private gridApi;\r\n  private gridColumnApi;\r\n  rowSelection: string;\r\n  public context: any;\r\n  public rowData: any[];\r\n  public columnDefs: any[] = [];\r\n\r\n  constructor(\r\n    public dataservice: DataService,\r\n    public route: ActivatedRoute,\r\n    public router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.context = { componentParent: this };\r\n    this.rowSelection = \"single\";\r\n  }\r\n  @ViewChild(\"stateModal\") public stateModal: ModalDirective;\r\n  @ViewChild(\"lgaModal\") public lgaModal: ModalDirective;\r\n  @ViewChild(\"villageModal\") public villageModal: ModalDirective;\r\n  @ViewChild(\"marketModal\") public marketModal: ModalDirective;\r\n  @ViewChild(\"areaModal\") public areaModal: ModalDirective;\r\n  @ViewChild(\"cropModal\") public cropModal: ModalDirective;\r\n  @ViewChild(\"deleteModal\") public deleteModal: ModalDirective;\r\n\r\n  loading = true;\r\n  disableButton = true;\r\n  btnLoading = false;\r\n  // disableNextButton = false;\r\n  // disablePrevButton = true;\r\n  // meta;\r\n  // pageSize = 20;\r\n  // from = 1;\r\n  // to = 20;\r\n  count = 1;\r\n  Villages: any = [];\r\n  LGA: any = [];\r\n  Areas: any = [];\r\n  States: any = [];\r\n  Markets: any = [];\r\n  Crops: any = [];\r\n\r\n  frameworkComponents = {\r\n    statusRenderer: new ActionRenderer(),\r\n  };\r\n  stateForm = this.fb.group({\r\n    state: [\"\", Validators.required],\r\n  });\r\n  lgaForm = this.fb.group({\r\n    lga: [\"\", Validators.required],\r\n    state: [\"\", Validators.required],\r\n  });\r\n  areaForm = this.fb.group({\r\n    area: [\"\", Validators.required],\r\n    PostalCode: [\"\", Validators.required],\r\n    lga: [\"\", Validators.required],\r\n    state: [\"\", Validators.required],\r\n  });\r\n  marketForm = this.fb.group({\r\n    market: [\"\", Validators.required],\r\n    state: [\"\", Validators.required],\r\n  });\r\n  cropForm = this.fb.group({\r\n    crop: [\"\", Validators.required],\r\n  });\r\n  villageForm = this.fb.group({\r\n    village: [\"\", Validators.required],\r\n    area: [\"\", Validators.required],\r\n    lga: [\"\"],\r\n    state: [\"\"],\r\n  });\r\n\r\n  selectedYear: any = new Date().getFullYear();\r\n  years: any = [];\r\n  filter: any = {};\r\n  selectedRows: any = [];\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    console.log(this.router.url);\r\n    switch (this.router.url) {\r\n      case \"/masters/Villages\":\r\n        this.columnDefs = [...VillageMasterColumn];\r\n        this.dataservice.getVillages().valueChanges.subscribe((result: any) => {\r\n          console.log(\"getVillages\", result.data.villages.data);\r\n          this.rowData = result.data.villages.data;\r\n          // this.meta = result.data.villages.meta;\r\n          // if (this.meta?.pagination?.pageCount <= 1) {\r\n          //   this.disablePrevButton = true;\r\n          //   this.disableNextButton = true;\r\n          // }\r\n        });\r\n        break;\r\n      case \"/masters/Areas\":\r\n        this.columnDefs = [...AreaMasterColumn];\r\n        this.dataservice.getAreas().valueChanges.subscribe((result: any) => {\r\n          console.log(\"getAreas\", result.data.areas.data);\r\n          this.rowData = result.data.areas.data;\r\n          // this.meta = result.data.areas.meta;\r\n          // if (this.meta?.pagination?.pageCount <= 1) {\r\n          //   this.disablePrevButton = true;\r\n          //   this.disableNextButton = true;\r\n          // }\r\n        });\r\n        break;\r\n      case \"/masters/LGA\":\r\n        this.columnDefs = [...LGAMasterColumn];\r\n        this.dataservice.getLGAs().valueChanges.subscribe((result: any) => {\r\n          console.log(\"getLGAs\", result.data.lgas.data);\r\n          this.rowData = result.data.lgas.data;\r\n          // this.meta = result.data.lgas.meta;\r\n          // if (this.meta?.pagination?.pageCount <= 1) {\r\n          //   this.disablePrevButton = true;\r\n          //   this.disableNextButton = true;\r\n          // }\r\n        });\r\n        break;\r\n      case \"/masters/States\":\r\n        this.columnDefs = [...StateMasterColumn];\r\n        this.dataservice.getStates().valueChanges.subscribe((result: any) => {\r\n          console.log(\"getStates\", result.data.states.data);\r\n          this.rowData = result.data.states.data;\r\n          // this.meta = result.data.states.meta;\r\n          // if (this.meta?.pagination?.pageCount <= 1) {\r\n          //   this.disablePrevButton = true;\r\n          //   this.disableNextButton = true;\r\n          // }\r\n        });\r\n        break;\r\n      case \"/masters/Markets\":\r\n        this.columnDefs = [...MarketMasterColumn];\r\n        this.dataservice.getMarkets().valueChanges.subscribe((result: any) => {\r\n          console.log(\"getMarkets\", result.data.markets.data);\r\n          this.rowData = result.data.markets.data;\r\n          // this.meta = result.data.markets.meta;\r\n          // if (this.meta?.pagination?.pageCount <= 1) {\r\n          //   this.disablePrevButton = true;\r\n          //   this.disableNextButton = true;\r\n          // }\r\n        });\r\n        break;\r\n      case \"/masters/Crops\":\r\n        this.columnDefs = [...CropMasterColumn];\r\n        this.dataservice.getCrops().valueChanges.subscribe((result: any) => {\r\n          console.log(\"getCrops\", result.data.crops.data);\r\n          this.rowData = result.data.crops.data;\r\n          // this.meta = result.data.crops.meta;\r\n          // if (this.meta?.pagination?.pageCount <= 1) {\r\n          //   this.disablePrevButton = true;\r\n          //   this.disableNextButton = true;\r\n          // }\r\n        });\r\n        break;\r\n    }\r\n    this.getAreas();\r\n    this.getCrops();\r\n    this.getLGAs();\r\n    this.getMarkets();\r\n    this.getStates();\r\n    this.getVillages();\r\n  }\r\n  getCrops() {\r\n    this.dataservice.getCrops().valueChanges.subscribe((result: any) => {\r\n      console.log(\"getCrops\", result.data.crops.data);\r\n      this.Crops = result.data.crops.data;\r\n    });\r\n  }\r\n  getStates() {\r\n    this.dataservice.getStates().valueChanges.subscribe((result: any) => {\r\n      console.log(\"getStates\", result.data.states.data);\r\n      this.States = result.data.states.data;\r\n    });\r\n  }\r\n  getLGAs(stateid?) {\r\n    this.dataservice.getLGAs(stateid).valueChanges.subscribe((result: any) => {\r\n      console.log(\"getLGAs\", result.data.lgas.data);\r\n      this.LGA = result.data.lgas.data;\r\n    });\r\n  }\r\n  getAreas(lgaid?) {\r\n    this.dataservice.getAreas(lgaid).valueChanges.subscribe((result: any) => {\r\n      console.log(\"getAreas\", result.data.areas.data);\r\n      this.Areas = result.data.areas.data;\r\n    });\r\n  }\r\n  getVillages(areaid?) {\r\n    this.dataservice\r\n      .getVillages(areaid)\r\n      .valueChanges.subscribe((result: any) => {\r\n        console.log(\"getVillages\", result.data.villages.data);\r\n        this.Villages = result.data.villages.data;\r\n      });\r\n  }\r\n  getMarkets() {\r\n    this.dataservice.getMarkets().valueChanges.subscribe((result: any) => {\r\n      console.log(\"getMarkets\", result.data.markets.data);\r\n      this.Markets = result.data.markets.data;\r\n    });\r\n  }\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n  onRowClicked(event: any) {\r\n    console.log(\"row\", event);\r\n    alert(\"Parent Component Method from \" + event + \"!\");\r\n    // this.router.navigate(\r\n    //   [\"/cropprices/kp_customer_details\", event.data.id, this.router.url],\r\n    //   {\r\n    //     state: { data: event.data },\r\n    //   }\r\n    // );\r\n  }\r\n  onSelectionChanged(event: any) {\r\n    this.selectedRows = this.gridApi.getSelectedRows();\r\n    if (this.selectedRows.length > 0) {\r\n      this.disableButton = false;\r\n    } else {\r\n      this.disableButton = true;\r\n    }\r\n    console.log(this.selectedRows, this.selectedRows[0].attributes.Name);\r\n\r\n    // this.router.navigate(\r\n    //   [\"/cropprices/kp_customer_details\", selectedRows[0].id, this.router.url],\r\n    //   {\r\n    //     state: { data: selectedRows },\r\n    //   }\r\n    // );\r\n  }\r\n  openModal(data?: any) {\r\n    switch (this.router.url) {\r\n      case \"/masters/Villages\":\r\n        this.villageModal.show();\r\n        if (data) {\r\n          this.villageForm = this.fb.group({\r\n            village: [\r\n              this.selectedRows[0].attributes.Name,\r\n              Validators.required,\r\n            ],\r\n            area: [\r\n              Number(this.selectedRows[0].attributes.area.data.id),\r\n              Validators.required,\r\n            ],\r\n            lga: [\r\n              Number(\r\n                this.selectedRows[0].attributes.area.data.attributes.lga.data.id\r\n              ),\r\n            ],\r\n            state: [\r\n              Number(\r\n                this.selectedRows[0].attributes.area.data.attributes.lga.data\r\n                  .attributes.state.data.id\r\n              ),\r\n            ],\r\n          });\r\n        } else {\r\n          this.villageForm = this.fb.group({\r\n            village: [\"\", Validators.required],\r\n            area: [\"\", Validators.required],\r\n            lga: [\"\"],\r\n            state: [\"\"],\r\n          });\r\n        }\r\n        break;\r\n      case \"/masters/Areas\":\r\n        this.areaModal.show();\r\n        if (data) {\r\n          this.areaForm = this.fb.group({\r\n            area: [this.selectedRows[0].attributes.Name, Validators.required],\r\n            PostalCode: [\r\n              this.selectedRows[0].attributes.PostalCode,\r\n              Validators.required,\r\n            ],\r\n            lga: [\r\n              Number(this.selectedRows[0].attributes.lga.data.id),\r\n              Validators.required,\r\n            ],\r\n            state: [\r\n              Number(\r\n                this.selectedRows[0].attributes.lga.data.attributes.state.data\r\n                  .id\r\n              ),\r\n              Validators.required,\r\n            ],\r\n          });\r\n        } else {\r\n          this.areaForm = this.fb.group({\r\n            area: [\"\", Validators.required],\r\n            PostalCode: [\"\", Validators.required],\r\n            lga: [\"\", Validators.required],\r\n            state: [\"\", Validators.required],\r\n          });\r\n        }\r\n        break;\r\n      case \"/masters/LGA\":\r\n        this.lgaModal.show();\r\n        if (data) {\r\n          this.lgaForm = this.fb.group({\r\n            lga: [this.selectedRows[0].attributes.Name, Validators.required],\r\n            state: [\r\n              Number(this.selectedRows[0].attributes.state.data.id),\r\n              Validators.required,\r\n            ],\r\n          });\r\n        } else {\r\n          this.lgaForm = this.fb.group({\r\n            lga: [\"\", Validators.required],\r\n            state: [\"\", Validators.required],\r\n          });\r\n        }\r\n        break;\r\n      case \"/masters/States\":\r\n        this.stateModal.show();\r\n        if (data) {\r\n          this.stateForm = this.fb.group({\r\n            state: [this.selectedRows[0].attributes.Name, Validators.required],\r\n          });\r\n        } else {\r\n          this.stateForm = this.fb.group({\r\n            state: [\"\", Validators.required],\r\n          });\r\n        }\r\n        break;\r\n      case \"/masters/Markets\":\r\n        this.marketModal.show();\r\n        if (data) {\r\n          this.marketForm = this.fb.group({\r\n            market: [this.selectedRows[0].attributes.Name, Validators.required],\r\n            state: [\r\n              this.selectedRows[0].attributes.state.data.id,\r\n              Validators.required,\r\n            ],\r\n          });\r\n        } else {\r\n          this.marketForm = this.fb.group({\r\n            market: [\"\", Validators.required],\r\n            state: [\"\", Validators.required],\r\n          });\r\n        }\r\n        break;\r\n      case \"/masters/Crops\":\r\n        this.cropModal.show();\r\n        if (data) {\r\n          this.cropForm = this.fb.group({\r\n            crop: [this.selectedRows[0].attributes.Name, Validators.required],\r\n          });\r\n        } else {\r\n          this.cropForm = this.fb.group({\r\n            crop: [\"\", Validators.required],\r\n          });\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  // loadNext() {\r\n  //   this.count++;\r\n  //    this.disablePrevButton = false;\r\n  //   this.from = this.from + this.pageSize;\r\n  //   this.to =\r\n  //     this.to + this.pageSize > this.meta?.pagination?.total\r\n  //       ? this.meta?.pagination?.total\r\n  //       : this.to + this.pageSize;\r\n  //   if (this.count === this.meta.pagination.pageCount) {\r\n  //     this.disableNextButton = true;\r\n  //   }\r\n  //   // this.dataservice\r\n  //   //   .getFarmDemos(this.count, this.pageSize)\r\n  //   //   .valueChanges.subscribe((result: any) => {\r\n  //   //     this.meta = result.data.farmDemos.meta;\r\n  //   //     this.rowData = result.data.farmDemos.data;\r\n  //   //   });\r\n  // }\r\n  // loadPrev() {\r\n  //   this.count--;\r\n  //   if (this.count < this.meta.pagination.pageCount) {\r\n  //     this.disableNextButton = false;\r\n  //   }\r\n  //   if (this.count === 1) {\r\n  //     this.disablePrevButton = true;\r\n  //   }\r\n  //   this.from = this.from - this.pageSize;\r\n  //   this.to = this.to - this.rowData.length;\r\n  //   // this.dataservice\r\n  //   //   .getFarmDemos(this.count, this.pageSize)\r\n  //   //   .valueChanges.subscribe((result: any) => {\r\n  //   //     this.meta = result.data.farmDemos.meta;\r\n  //   //     this.rowData = result.data.farmDemos.data;\r\n  //   //   });\r\n  // }\r\n  filterLGA(event) {\r\n    this.getLGAs(event.target.value);\r\n  }\r\n  filterArea(event) {\r\n    this.getAreas(event.target.value);\r\n  }\r\n  stateSubmit() {\r\n    let resp = {};\r\n    console.log(this.stateForm.value);\r\n    if (!this.disableButton) {\r\n      this.dataservice\r\n        .UpdateState(this.stateForm.value, this.selectedRows[0].id)\r\n        .subscribe((result: any) => {\r\n          resp = result.data;\r\n          console.log(\"response\", result);\r\n          if (result.data.updateState) {\r\n            this.toastr.success(\"Success!\");\r\n            this.gridApi.deselectAll();\r\n            this.stateModal.hide();\r\n            this.dataservice\r\n              .getStates()\r\n              .valueChanges.subscribe((result: any) => {\r\n                console.log(\"getStates\", result.data.states.data);\r\n                this.rowData = result.data.states.data;\r\n              });\r\n          } else {\r\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\r\n              this.toastr.error(\"Can't be added as the value already exists\");\r\n            } else {\r\n              this.toastr.error(\"Failed. Please check the fields!\");\r\n            }\r\n          }\r\n        });\r\n    } else {\r\n      this.dataservice.AddStates(this.stateForm.value).subscribe(\r\n        (result: any) => {\r\n          resp = result.data;\r\n          console.log(\"response\", result);\r\n          if (result.data.createState) {\r\n            this.toastr.success(\"Success!\");\r\n            this.gridApi.deselectAll();\r\n            this.stateModal.hide();\r\n            this.dataservice\r\n              .getStates()\r\n              .valueChanges.subscribe((result: any) => {\r\n                console.log(\"getStates\", result.data.states.data);\r\n                this.rowData = result.data.states.data;\r\n              });\r\n          } else {\r\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\r\n              this.toastr.error(\"Can't be added as the value already exists\");\r\n            } else {\r\n              this.toastr.error(\"Failed. Please check the fields!\");\r\n            }\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n          this.toastr.error(\"Failed.\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n  lgaSubmit() {\r\n    let resp = {};\r\n    console.log(this.lgaForm.value);\r\n    if (!this.disableButton) {\r\n      this.dataservice\r\n        .UpdateLGA(this.lgaForm.value, this.selectedRows[0].id)\r\n        .subscribe((result: any) => {\r\n          resp = result.data;\r\n          console.log(\"response\", result);\r\n          if (result.data.updateLga) {\r\n            this.toastr.success(\"Success!\");\r\n            this.gridApi.deselectAll();\r\n\r\n            this.lgaModal.hide();\r\n            this.dataservice.getLGAs().valueChanges.subscribe((result: any) => {\r\n              console.log(\"getLGAs\", result.data.lgas.data);\r\n              this.rowData = result.data.lgas.data;\r\n            });\r\n          } else {\r\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\r\n              this.toastr.error(\"Can't be added as the value already exists\");\r\n            } else {\r\n              this.toastr.error(\"Failed. Please check the fields!\");\r\n            }\r\n          }\r\n        });\r\n    } else {\r\n      this.dataservice.AddLGA(this.lgaForm.value).subscribe((result: any) => {\r\n        resp = result.data;\r\n        console.log(\"response\", result);\r\n        if (result.data.createLga) {\r\n          this.toastr.success(\"Success!\");\r\n          this.gridApi.deselectAll();\r\n          this.lgaModal.hide();\r\n          this.dataservice.getLGAs().valueChanges.subscribe((result: any) => {\r\n            console.log(\"getLGAs\", result.data.lgas.data);\r\n            this.rowData = result.data.lgas.data;\r\n          });\r\n        } else {\r\n          if (result.errors[0].extensions.error.name == \"ValidationError\") {\r\n            this.toastr.error(\"Can't be added as the value already exists\");\r\n          } else {\r\n            this.toastr.error(\"Failed. Please check the fields!\");\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  areaSubmit() {\r\n    let resp = {};\r\n    console.log(this.areaForm.value);\r\n    if (!this.disableButton) {\r\n      this.dataservice\r\n        .UpdateArea(this.areaForm.value, this.selectedRows[0].id)\r\n        .subscribe((result: any) => {\r\n          resp = result.data;\r\n          console.log(\"response\", result);\r\n          if (result.data.updateArea) {\r\n            this.toastr.success(\"Success!\");\r\n            this.gridApi.deselectAll();\r\n            this.areaModal.hide();\r\n            this.dataservice\r\n              .getAreas()\r\n              .valueChanges.subscribe((result: any) => {\r\n                console.log(\"getAreas\", result.data.areas.data);\r\n                this.rowData = result.data.areas.data;\r\n              });\r\n          } else {\r\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\r\n              this.toastr.error(\"Can't be added as the value already exists\");\r\n            } else {\r\n              this.toastr.error(\"Failed. Please check the fields!\");\r\n            }\r\n          }\r\n        });\r\n    } else {\r\n      this.dataservice.AddArea(this.areaForm.value).subscribe((result: any) => {\r\n        resp = result.data;\r\n        console.log(\"response\", result);\r\n        if (result.data.createArea) {\r\n          this.toastr.success(\"Success!\");\r\n          this.gridApi.deselectAll();\r\n          this.areaModal.hide();\r\n          this.dataservice.getAreas().valueChanges.subscribe((result: any) => {\r\n            console.log(\"getAreas\", result.data.areas.data);\r\n            this.rowData = result.data.areas.data;\r\n          });\r\n        } else {\r\n          if (result.errors[0].extensions.error.name == \"ValidationError\") {\r\n            this.toastr.error(\"Can't be added as the value already exists\");\r\n          } else {\r\n            this.toastr.error(\"Failed. Please check the fields!\");\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  marketSubmit() {\r\n    let resp = {};\r\n    console.log(this.marketForm.value);\r\n    if (!this.disableButton) {\r\n      this.dataservice\r\n        .UpdateMarket(this.marketForm.value, this.selectedRows[0].id)\r\n        .subscribe((result: any) => {\r\n          resp = result.data;\r\n          console.log(\"response\", result);\r\n          if (result.data.updateMarket) {\r\n            this.toastr.success(\"Success!\");\r\n            this.gridApi.deselectAll();\r\n            this.marketModal.hide();\r\n            this.dataservice\r\n              .getMarkets()\r\n              .valueChanges.subscribe((result: any) => {\r\n                console.log(\"getMarkets\", result.data.markets.data);\r\n                this.rowData = result.data.markets.data;\r\n              });\r\n          } else {\r\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\r\n              this.toastr.error(\"Can't be added as the value already exists\");\r\n            } else {\r\n              this.toastr.error(\"Failed. Please check the fields!\");\r\n            }\r\n          }\r\n        });\r\n    } else {\r\n      this.dataservice\r\n        .AddMarket(this.marketForm.value)\r\n        .subscribe((result: any) => {\r\n          resp = result.data;\r\n          console.log(\"response\", result);\r\n          if (result.data.createMarket) {\r\n            this.toastr.success(\"Success!\");\r\n            this.gridApi.deselectAll();\r\n            this.marketModal.hide();\r\n            this.dataservice\r\n              .getMarkets()\r\n              .valueChanges.subscribe((result: any) => {\r\n                console.log(\"getMarkets\", result.data.markets.data);\r\n                this.rowData = result.data.markets.data;\r\n              });\r\n          } else {\r\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\r\n              this.toastr.error(\"Can't be added as the value already exists\");\r\n            } else {\r\n              this.toastr.error(\"Failed. Please check the fields!\");\r\n            }\r\n          }\r\n        });\r\n    }\r\n  }\r\n  cropSubmit() {\r\n    let resp = {};\r\n    console.log(this.cropForm.value);\r\n    if (!this.disableButton) {\r\n      this.dataservice\r\n        .UpdateCrop(this.cropForm.value, this.selectedRows[0].id)\r\n        .subscribe((result: any) => {\r\n          resp = result.data;\r\n          console.log(\"response\", result);\r\n          if (result.data.updateCrop) {\r\n            this.toastr.success(\"Success!\");\r\n            this.gridApi.deselectAll();\r\n            this.cropModal.hide();\r\n            this.dataservice\r\n              .getCrops()\r\n              .valueChanges.subscribe((result: any) => {\r\n                console.log(\"getCrops\", result.data.crops.data);\r\n                this.rowData = result.data.crops.data;\r\n              });\r\n          } else {\r\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\r\n              this.toastr.error(\"Can't be added as the value already exists\");\r\n            } else {\r\n              this.toastr.error(\"Failed. Please check the fields!\");\r\n            }\r\n          }\r\n        });\r\n    } else {\r\n      this.dataservice.AddCrop(this.cropForm.value).subscribe((result: any) => {\r\n        resp = result.data;\r\n        console.log(\"response\", result);\r\n        if (result.data.createCrop) {\r\n          this.toastr.success(\"Success!\");\r\n          this.gridApi.deselectAll();\r\n          this.cropModal.hide();\r\n          this.dataservice.getCrops().valueChanges.subscribe((result: any) => {\r\n            console.log(\"getCrops\", result.data.crops.data);\r\n            this.rowData = result.data.crops.data;\r\n          });\r\n        } else {\r\n          if (result.errors[0].extensions.error.name == \"ValidationError\") {\r\n            this.toastr.error(\"Can't be added as the value already exists\");\r\n          } else {\r\n            this.toastr.error(\"Failed. Please check the fields!\");\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  vilageSubmit() {\r\n    let resp = {};\r\n    console.log(this.villageForm.value);\r\n    if (!this.disableButton) {\r\n      this.dataservice\r\n        .Updatevillage(this.villageForm.value, this.selectedRows[0].id)\r\n        .subscribe((result: any) => {\r\n          resp = result.data;\r\n          console.log(\"response\", result);\r\n          if (result.data.updateVillage) {\r\n            this.toastr.success(\"Success!\");\r\n            this.gridApi.deselectAll();\r\n            this.villageModal.hide();\r\n            this.dataservice\r\n              .getVillages()\r\n              .valueChanges.subscribe((result: any) => {\r\n                console.log(\"getVillages\", result.data.villages.data);\r\n                this.rowData = result.data.villages.data;\r\n              });\r\n          } else {\r\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\r\n              this.toastr.error(\"Can't be added as the value already exists\");\r\n            } else {\r\n              this.toastr.error(\"Failed. Please check the fields!\");\r\n            }\r\n          }\r\n        });\r\n    } else {\r\n      this.dataservice\r\n        .Addvillage(this.villageForm.value)\r\n        .subscribe((result: any) => {\r\n          resp = result.data;\r\n          console.log(\"response\", result);\r\n          if (result.data.createVillage) {\r\n            this.toastr.success(\"Success!\");\r\n            this.gridApi.deselectAll();\r\n            this.villageModal.hide();\r\n            this.dataservice\r\n              .getVillages()\r\n              .valueChanges.subscribe((result: any) => {\r\n                console.log(\"getVillages\", result.data.villages.data);\r\n                this.rowData = result.data.villages.data;\r\n              });\r\n          } else {\r\n            if (result.errors[0].extensions.error.name == \"ValidationError\") {\r\n              this.toastr.error(\"Can't be added as the value already exists\");\r\n            } else {\r\n              this.toastr.error(\"Failed. Please check the fields!\");\r\n            }\r\n          }\r\n        });\r\n    }\r\n  }\r\n  deleteRecord() {\r\n    // this.lgaForm = this.fb.group({\r\n    //   isDelete: [true, Validators.required],\r\n    // });\r\n    // this.stateForm = this.fb.group({\r\n    //   isDelete: [true, Validators.required],\r\n    // });\r\n    // this.villageForm = this.fb.group({\r\n    //   isDelete: [true, Validators.required],\r\n    // });\r\n    // this.lgaForm = this.fb.group({\r\n    //   isDelete: [true, Validators.required],\r\n    // });\r\n    // this.marketForm = this.fb.group({\r\n    //   isDelete: [true, Validators.required],\r\n    // });\r\n    // this.cropForm = this.fb.group({\r\n    //   isDelete: [true, Validators.required],\r\n    // });\r\n    console.log(this.lgaForm.value);\r\n    switch (this.router.url) {\r\n      case \"/masters/Villages\":\r\n        this.dataservice\r\n          .deleteVillage(this.selectedRows[0].id)\r\n          .subscribe((result: any) => {\r\n            console.log(\"response\", result);\r\n            if (result.data.deleteVillage) {\r\n              this.toastr.success(\"Success!\");\r\n              this.gridApi.deselectAll();\r\n              this.deleteModal.hide();\r\n              this.dataservice\r\n                .getVillages()\r\n                .valueChanges.subscribe((result: any) => {\r\n                  this.rowData = result.data.villages.data;\r\n                });\r\n            } else {\r\n              this.toastr.error(\"Failed!\");\r\n            }\r\n          });\r\n        break;\r\n      case \"/masters/Areas\":\r\n        this.dataservice\r\n          .deleteArea(this.selectedRows[0].id)\r\n          .subscribe((result: any) => {\r\n            console.log(\"response\", result);\r\n            if (result.data.deleteArea) {\r\n              this.toastr.success(\"Success!\");\r\n              this.gridApi.deselectAll();\r\n              this.deleteModal.hide();\r\n              this.dataservice\r\n                .getAreas()\r\n                .valueChanges.subscribe((result: any) => {\r\n                  this.rowData = result.data.areas.data;\r\n                });\r\n            } else {\r\n              this.toastr.error(\"Failed!\");\r\n            }\r\n          });\r\n        break;\r\n      case \"/masters/LGA\":\r\n        this.dataservice\r\n          .deleteLGA(this.selectedRows[0].id)\r\n          .subscribe((result: any) => {\r\n            console.log(\"response\", result);\r\n            if (result.data.deleteLga) {\r\n              this.toastr.success(\"Success!\");\r\n              this.gridApi.deselectAll();\r\n              this.deleteModal.hide();\r\n              this.dataservice\r\n                .getLGAs()\r\n                .valueChanges.subscribe((result: any) => {\r\n                  this.rowData = result.data.lgas.data;\r\n                });\r\n            } else {\r\n              this.toastr.error(\"Failed!\");\r\n            }\r\n          });\r\n        break;\r\n      case \"/masters/States\":\r\n        this.dataservice\r\n          .deleteState(this.selectedRows[0].id)\r\n          .subscribe((result: any) => {\r\n            console.log(\"response\", result);\r\n            if (result.data.deleteState) {\r\n              this.toastr.success(\"Success!\");\r\n              this.gridApi.deselectAll();\r\n              this.deleteModal.hide();\r\n              this.dataservice\r\n                .getStates()\r\n                .valueChanges.subscribe((result: any) => {\r\n                  this.rowData = result.data.states.data;\r\n                });\r\n            } else {\r\n              this.toastr.error(\"Failed!\");\r\n            }\r\n          });\r\n        break;\r\n      case \"/masters/Markets\":\r\n        this.dataservice\r\n          .deleteMarket(this.selectedRows[0].id)\r\n          .subscribe((result: any) => {\r\n            console.log(\"response\", result);\r\n            if (result.data.deleteMarket) {\r\n              this.toastr.success(\"Success!\");\r\n              this.gridApi.deselectAll();\r\n              this.deleteModal.hide();\r\n              this.dataservice\r\n                .getMarkets()\r\n                .valueChanges.subscribe((result: any) => {\r\n                  this.rowData = result.data.markets.data;\r\n                });\r\n            } else {\r\n              this.toastr.error(\"Failed!\");\r\n            }\r\n          });\r\n        break;\r\n      case \"/masters/Crops\":\r\n        this.dataservice\r\n          .deleteCrop(this.selectedRows[0].id)\r\n          .subscribe((result: any) => {\r\n            console.log(\"response\", result);\r\n            if (result.data.deleteCrop) {\r\n              this.toastr.success(\"Success!\");\r\n              this.gridApi.deselectAll();\r\n              this.deleteModal.hide();\r\n              this.dataservice\r\n                .getCrops()\r\n                .valueChanges.subscribe((result: any) => {\r\n                  this.rowData = result.data.crops.data;\r\n                });\r\n            } else {\r\n              this.toastr.error(\"Failed!\");\r\n            }\r\n          });\r\n        break;\r\n    }\r\n  }\r\n}\r\n","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div\\r\\n      class=\\\"card-header\\\"\\r\\n      style=\\\"display: flex; justify-content: space-between\\\"\\r\\n    >\\r\\n      <h2>{{ this.route.snapshot.data.title }} Master</h2>\\r\\n      <div>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn btn-danger\\\"\\r\\n          data-toggle=\\\"modal\\\"\\r\\n          [disabled]=\\\"disableButton\\\"\\r\\n          (click)=\\\"deleteModal.show()\\\"\\r\\n        >\\r\\n          Delete\\r\\n        </button>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          [disabled]=\\\"disableButton\\\"\\r\\n          class=\\\"btn btn-info\\\"\\r\\n          data-toggle=\\\"modal\\\"\\r\\n          (click)=\\\"openModal('Edit')\\\"\\r\\n        >\\r\\n          Edit\\r\\n        </button>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn btn-primary\\\"\\r\\n          [disabled]=\\\"!disableButton\\\"\\r\\n          data-toggle=\\\"modal\\\"\\r\\n          (click)=\\\"openModal()\\\"\\r\\n        >\\r\\n          Add New {{ this.route.snapshot.data.title }}\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <ag-grid-angular\\r\\n            #agGrid\\r\\n            style=\\\"width: 100%; height: 65vh\\\"\\r\\n            id=\\\"myGrid\\\"\\r\\n            class=\\\"ag-theme-alpine\\\"\\r\\n            [columnDefs]=\\\"columnDefs\\\"\\r\\n            [rowData]=\\\"rowData\\\"\\r\\n            [context]=\\\"context\\\"\\r\\n            [pagination]=\\\"true\\\"\\r\\n            [rowSelection]=\\\"rowSelection\\\"\\r\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\r\\n            [frameworkComponents]=\\\"frameworkComponents\\\"\\r\\n            (gridReady)=\\\"onGridReady($event)\\\"\\r\\n            animateRows=\\\"true\\\"\\r\\n          >\\r\\n          </ag-grid-angular>\\r\\n          <!-- <span class=\\\"float-left mt-3\\\">{{from}} to {{to}}  of {{meta?.pagination?.total}}</span>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              [disabled]=\\\"disableNextButton\\\"\\r\\n              class=\\\"btn btn-primary float-right m-2\\\"\\r\\n              (click)=\\\"loadNext()\\\"\\r\\n            >\\r\\n              Next\\r\\n            </button>\\r\\n            <span class=\\\"float-right mt-3\\\"\\r\\n              >Page {{ meta?.pagination?.page }} of\\r\\n              {{ meta?.pagination?.pageCount }}</span\\r\\n            >\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              [disabled]=\\\"disablePrevButton\\\"\\r\\n              class=\\\"btn btn-primary float-right m-2\\\"\\r\\n              (click)=\\\"loadPrev()\\\"\\r\\n            >\\r\\n              Prev\\r\\n            </button> -->\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div\\r\\n  bsModal\\r\\n  #stateModal=\\\"bs-modal\\\"\\r\\n  class=\\\"modal fade\\\"\\r\\n  tabindex=\\\"-1\\\"\\r\\n  role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\"\\r\\n>\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Add/Edit State</h4>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"close\\\"\\r\\n          (click)=\\\"stateModal.hide()\\\"\\r\\n          aria-label=\\\"Close\\\"\\r\\n        >\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"stateForm\\\" (ngSubmit)=\\\"stateSubmit()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"name\\\">State</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"state\\\"\\r\\n              name=\\\"state\\\"\\r\\n              formControlName=\\\"state\\\"\\r\\n              placeholder=\\\"Enter State Name\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-secondary\\\"\\r\\n            (click)=\\\"stateModal.hide()\\\"\\r\\n          >\\r\\n            Close\\r\\n          </button>\\r\\n          <button\\r\\n            type=\\\"submit\\\"\\r\\n            class=\\\"btn btn-primary ml-2\\\"\\r\\n            [disabled]=\\\"btnLoading || !stateForm.valid\\\"\\r\\n          >\\r\\n            <span\\r\\n              *ngIf=\\\"btnLoading\\\"\\r\\n              class=\\\"spinner-border spinner-border-sm\\\"\\r\\n              role=\\\"status\\\"\\r\\n              aria-hidden=\\\"true\\\"\\r\\n            ></span>\\r\\n            Save changes\\r\\n          </button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div\\r\\n  bsModal\\r\\n  #lgaModal=\\\"bs-modal\\\"\\r\\n  class=\\\"modal fade\\\"\\r\\n  tabindex=\\\"-1\\\"\\r\\n  role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\"\\r\\n>\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Add/Edit LGA</h4>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"close\\\"\\r\\n          (click)=\\\"lgaModal.hide()\\\"\\r\\n          aria-label=\\\"Close\\\"\\r\\n        >\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"lgaForm\\\" (ngSubmit)=\\\"lgaSubmit()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"lga\\\">LGA</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"lga\\\"\\r\\n              name=\\\"lga\\\"\\r\\n              formControlName=\\\"lga\\\"\\r\\n              placeholder=\\\"Enter LGA Name\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"state\\\">State</label>\\r\\n            <select\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"state\\\"\\r\\n              required\\r\\n              ngModel\\r\\n              name=\\\"state\\\"\\r\\n              formControlName=\\\"state\\\"\\r\\n            >\\r\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n              <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\r\\n                {{ item.attributes.Name }}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-secondary\\\"\\r\\n            (click)=\\\"lgaModal.hide()\\\"\\r\\n          >\\r\\n            Close\\r\\n          </button>\\r\\n          <button\\r\\n            type=\\\"submit\\\"\\r\\n            class=\\\"btn btn-primary ml-2\\\"\\r\\n            [disabled]=\\\"btnLoading || !lgaForm.valid\\\"\\r\\n          >\\r\\n            <span\\r\\n              *ngIf=\\\"btnLoading\\\"\\r\\n              class=\\\"spinner-border spinner-border-sm\\\"\\r\\n              role=\\\"status\\\"\\r\\n              aria-hidden=\\\"true\\\"\\r\\n            ></span>\\r\\n            Save changes\\r\\n          </button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div\\r\\n  bsModal\\r\\n  #areaModal=\\\"bs-modal\\\"\\r\\n  class=\\\"modal fade\\\"\\r\\n  tabindex=\\\"-1\\\"\\r\\n  role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\"\\r\\n>\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Add/Edit Area</h4>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"close\\\"\\r\\n          (click)=\\\"areaModal.hide()\\\"\\r\\n          aria-label=\\\"Close\\\"\\r\\n        >\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"areaForm\\\" (ngSubmit)=\\\"areaSubmit()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"area\\\">Area Name</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"area\\\"\\r\\n              name=\\\"area\\\"\\r\\n              formControlName=\\\"area\\\"\\r\\n              placeholder=\\\"Enter Area Name\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"area\\\">Postal code</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"PostalCode\\\"\\r\\n              name=\\\"PostalCode\\\"\\r\\n              formControlName=\\\"PostalCode\\\"\\r\\n              placeholder=\\\"Enter Postal Code\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"state\\\">State</label>\\r\\n            <select\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"state\\\"\\r\\n              required\\r\\n              ngModel\\r\\n              name=\\\"state\\\"\\r\\n              formControlName=\\\"state\\\"\\r\\n              (change)=\\\"filterLGA($event)\\\"\\r\\n            >\\r\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n              <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\r\\n                {{ item.attributes.Name }}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"lga\\\">LGA</label>\\r\\n            <select\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"lga\\\"\\r\\n              required\\r\\n              ngModel\\r\\n              name=\\\"lga\\\"\\r\\n              formControlName=\\\"lga\\\"\\r\\n            >\\r\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n              <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\r\\n                {{ item.attributes.Name }}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-secondary\\\"\\r\\n            (click)=\\\"areaModal.hide()\\\"\\r\\n          >\\r\\n            Close\\r\\n          </button>\\r\\n          <button\\r\\n            type=\\\"submit\\\"\\r\\n            class=\\\"btn btn-primary ml-2\\\"\\r\\n            [disabled]=\\\"btnLoading || !areaForm.valid\\\"\\r\\n          >\\r\\n            <span\\r\\n              *ngIf=\\\"btnLoading\\\"\\r\\n              class=\\\"spinner-border spinner-border-sm\\\"\\r\\n              role=\\\"status\\\"\\r\\n              aria-hidden=\\\"true\\\"\\r\\n            ></span>\\r\\n            Save changes\\r\\n          </button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div\\r\\n  bsModal\\r\\n  #marketModal=\\\"bs-modal\\\"\\r\\n  class=\\\"modal fade\\\"\\r\\n  tabindex=\\\"-1\\\"\\r\\n  role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\"\\r\\n>\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Add/Edit Market</h4>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"close\\\"\\r\\n          (click)=\\\"marketModal.hide()\\\"\\r\\n          aria-label=\\\"Close\\\"\\r\\n        >\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"marketForm\\\" (ngSubmit)=\\\"marketSubmit()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"market\\\">Market</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"market\\\"\\r\\n              name=\\\"market\\\"\\r\\n              formControlName=\\\"market\\\"\\r\\n              placeholder=\\\"Enter Market Name\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"state\\\">State</label>\\r\\n            <select\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"state\\\"\\r\\n              required\\r\\n              ngModel\\r\\n              name=\\\"state\\\"\\r\\n              formControlName=\\\"state\\\"\\r\\n            >\\r\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n              <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\r\\n                {{ item.attributes.Name }}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-secondary\\\"\\r\\n            (click)=\\\"marketModal.hide()\\\"\\r\\n          >\\r\\n            Close\\r\\n          </button>\\r\\n          <button\\r\\n            type=\\\"submit\\\"\\r\\n            class=\\\"btn btn-primary ml-2\\\"\\r\\n            [disabled]=\\\"btnLoading || !marketForm.valid\\\"\\r\\n          >\\r\\n            <span\\r\\n              *ngIf=\\\"btnLoading\\\"\\r\\n              class=\\\"spinner-border spinner-border-sm\\\"\\r\\n              role=\\\"status\\\"\\r\\n              aria-hidden=\\\"true\\\"\\r\\n            ></span>\\r\\n            Save changes\\r\\n          </button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div\\r\\n  bsModal\\r\\n  #cropModal=\\\"bs-modal\\\"\\r\\n  class=\\\"modal fade\\\"\\r\\n  tabindex=\\\"-1\\\"\\r\\n  role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\"\\r\\n>\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Add/Edit Crop</h4>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"close\\\"\\r\\n          (click)=\\\"cropModal.hide()\\\"\\r\\n          aria-label=\\\"Close\\\"\\r\\n        >\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"cropForm\\\" (ngSubmit)=\\\"cropSubmit()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"name\\\">Crop</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"crop\\\"\\r\\n              name=\\\"crop\\\"\\r\\n              formControlName=\\\"crop\\\"\\r\\n              placeholder=\\\"Enter Crop Name\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-secondary\\\"\\r\\n            (click)=\\\"cropModal.hide()\\\"\\r\\n          >\\r\\n            Close\\r\\n          </button>\\r\\n          <button\\r\\n            type=\\\"submit\\\"\\r\\n            class=\\\"btn btn-primary ml-2\\\"\\r\\n            [disabled]=\\\"btnLoading || !cropForm.valid\\\"\\r\\n          >\\r\\n            <span\\r\\n              *ngIf=\\\"btnLoading\\\"\\r\\n              class=\\\"spinner-border spinner-border-sm\\\"\\r\\n              role=\\\"status\\\"\\r\\n              aria-hidden=\\\"true\\\"\\r\\n            ></span>\\r\\n            Save changes\\r\\n          </button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div\\r\\n  bsModal\\r\\n  #villageModal=\\\"bs-modal\\\"\\r\\n  class=\\\"modal fade\\\"\\r\\n  tabindex=\\\"-1\\\"\\r\\n  role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\"\\r\\n>\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Add/Edit Village</h4>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"close\\\"\\r\\n          (click)=\\\"villageModal.hide()\\\"\\r\\n          aria-label=\\\"Close\\\"\\r\\n        >\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"villageForm\\\" (ngSubmit)=\\\"vilageSubmit()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"market\\\">Village Name</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"village\\\"\\r\\n              name=\\\"village\\\"\\r\\n              formControlName=\\\"village\\\"\\r\\n              placeholder=\\\"Enter Village Name\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"state\\\">State</label>\\r\\n            <select\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"state\\\"\\r\\n              ngModel\\r\\n              name=\\\"state\\\"\\r\\n              (change)=\\\"filterLGA($event)\\\"\\r\\n              formControlName=\\\"state\\\"\\r\\n            >\\r\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n              <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\r\\n                {{ item.attributes.Name }}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"lga\\\">LGA</label>\\r\\n            <select\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"lga\\\"\\r\\n              ngModel\\r\\n              (change)=\\\"filterArea($event)\\\"\\r\\n              name=\\\"lga\\\"\\r\\n              formControlName=\\\"lga\\\"\\r\\n            >\\r\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n              <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\r\\n                {{ item.attributes.Name }}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"area\\\">Area</label>\\r\\n            <select\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"area\\\"\\r\\n              ngModel\\r\\n              name=\\\"area\\\"\\r\\n              formControlName=\\\"area\\\"\\r\\n            >\\r\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n              <option *ngFor=\\\"let item of Areas\\\" value=\\\"{{ item.id }}\\\">\\r\\n                {{ item.attributes.Name }}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-secondary\\\"\\r\\n            (click)=\\\"villageModal.hide()\\\"\\r\\n          >\\r\\n            Close\\r\\n          </button>\\r\\n          <button\\r\\n            type=\\\"submit\\\"\\r\\n            class=\\\"btn btn-primary ml-2\\\"\\r\\n            [disabled]=\\\"btnLoading || !villageForm.valid\\\"\\r\\n          >\\r\\n            <span\\r\\n              *ngIf=\\\"btnLoading\\\"\\r\\n              class=\\\"spinner-border spinner-border-sm\\\"\\r\\n              role=\\\"status\\\"\\r\\n              aria-hidden=\\\"true\\\"\\r\\n            ></span>\\r\\n            Save changes\\r\\n          </button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div\\r\\n  bsModal\\r\\n  #deleteModal=\\\"bs-modal\\\"\\r\\n  class=\\\"modal fade\\\"\\r\\n  tabindex=\\\"-1\\\"\\r\\n  role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\"\\r\\n>\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body text-center\\\">\\r\\n        Do you want to delete this record?\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer justify-content-around\\\">\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn btn-secondary\\\"\\r\\n          (click)=\\\"deleteModal.hide()\\\"\\r\\n        >\\r\\n          No! Cancel.\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deleteRecord()\\\">\\r\\n          Yes! Delete.\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { mastersComponent } from './masters.component';\r\nimport { AuthGuard } from '../login/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    \r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'masters'\r\n      },\r\n      {\r\n        path: 'States',\r\n        // canActivate: [AuthGuard],\r\n        component: mastersComponent,\r\n        data: {\r\n          roles: 'States',\r\n          title: 'States'\r\n        }\r\n      },\r\n      {\r\n        path: 'LGA',\r\n        // canActivate: [AuthGuard],\r\n        component: mastersComponent,\r\n        data: {\r\n          roles: 'LGA',\r\n          title: 'LGA'\r\n        }\r\n      },\r\n      {\r\n        path: 'Areas',\r\n        // canActivate: [AuthGuard],\r\n        component: mastersComponent,\r\n        data: {\r\n          roles: 'Areas',\r\n          title: 'Areas'\r\n        }\r\n      },\r\n      {\r\n        path: 'Villages',\r\n        // canActivate: [AuthGuard],\r\n        component: mastersComponent,\r\n        data: {\r\n          roles: 'Villages',\r\n          title: 'Villages'\r\n        }\r\n      },\r\n      {\r\n        path: 'Markets',\r\n        // canActivate: [AuthGuard],\r\n        component: mastersComponent,\r\n        data: {\r\n          roles: 'Markets',\r\n          title: 'Markets'\r\n        }\r\n      },\r\n      {\r\n        path: 'Crops',\r\n        // canActivate: [AuthGuard],\r\n        component: mastersComponent,\r\n        data: {\r\n          roles: 'Crops',\r\n          title: 'Crops'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class mastersRoutingModule {}\r\n"]}