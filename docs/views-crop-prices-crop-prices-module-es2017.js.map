{"version":3,"sources":["./src/app/views/crop-prices/crop-prices-routing.module.ts","./src/app/views/crop-prices/crop-prices.module.ts","./src/app/views/crop-prices/crop-prices.component.html","./src/app/views/crop-prices/crop-prices.component.ts"],"names":[],"mappings":"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","file":"views-crop-prices-crop-prices-module-es2017.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CropPricesComponent } from './crop-prices.component';\r\nimport { AuthGuard } from '../login/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    \r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'cropprices'\r\n      },\r\n      {\r\n        path: 'all',\r\n        // canActivate: [AuthGuard],\r\n        component: CropPricesComponent,\r\n        data: {\r\n          roles: 'KP_CALLER',\r\n          title: 'Crop Prices'\r\n        }\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SoilTestRoutingModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { CropPricesComponent } from './crop-prices.component';\r\n\r\n// Dropdowns Component\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\n// Buttons Routing\r\nimport { SoilTestRoutingModule } from './crop-prices-routing.module';\r\n\r\n// Angular\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TabsModule,\r\n    ReactiveFormsModule,\r\n    AgGridModule.withComponents([]),\r\n    SoilTestRoutingModule,\r\n    BsDropdownModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    CropPricesComponent,\r\n  ]\r\n})\r\nexport class CropPricesModule { }\r\n","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div\\r\\n      class=\\\"card-header\\\"\\r\\n      style=\\\"display: flex; justify-content: space-between\\\"\\r\\n    >\\r\\n      <h2>Crop Prices Home</h2>\\r\\n      <div>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn btn-warning\\\"\\r\\n          data-toggle=\\\"modal\\\"\\r\\n          [disabled]=\\\"disableButton\\\"\\r\\n          (click)=\\\"openApproveModal()\\\"\\r\\n        >\\r\\n          Approve / Reject\\r\\n        </button>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          [disabled]=\\\"disableButton\\\"\\r\\n          class=\\\"btn btn-info\\\"\\r\\n          data-toggle=\\\"modal\\\"\\r\\n          (click)=\\\"openModal('Edit')\\\"\\r\\n        >\\r\\n          Edit\\r\\n        </button>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          [disabled]=\\\"!disableButton\\\"\\r\\n          class=\\\"btn btn-primary\\\"\\r\\n          data-toggle=\\\"modal\\\"\\r\\n          (click)=\\\"openModal()\\\"\\r\\n        >\\r\\n          Add New Price\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <div class=\\\"btn-group float-right mb-3\\\" dropdown>\\r\\n            <button\\r\\n              dropdownToggle\\r\\n              type=\\\"button\\\"\\r\\n              class=\\\"btn btn-primary dropdown-toggle\\\"\\r\\n            >\\r\\n              {{ selectedList }}<span class=\\\"caret\\\"></span>\\r\\n            </button>\\r\\n            <ul *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\r\\n              <li role=\\\"menuitem\\\">\\r\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"toggleCropPrices('All')\\\"\\r\\n                  >All</a\\r\\n                >\\r\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"toggleCropPrices('Approvalpending')\\\"\\r\\n                  >Approval pending</a\\r\\n                >\\r\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"toggleCropPrices('Rejected')\\\"\\r\\n                  >Rejected</a\\r\\n                >\\r\\n              </li>\\r\\n            </ul>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <ag-grid-angular\\r\\n            #agGrid\\r\\n            style=\\\"width: 100%; height: 65vh\\\"\\r\\n            id=\\\"myGrid\\\"\\r\\n            class=\\\"ag-theme-alpine\\\"\\r\\n            [columnDefs]=\\\"columnDefs\\\"\\r\\n            [rowData]=\\\"rowData\\\"\\r\\n            [rowSelection]=\\\"rowSelection\\\"\\r\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\r\\n            (gridReady)=\\\"onGridReady($event)\\\"\\r\\n            animateRows=\\\"true\\\"\\r\\n          >\\r\\n          </ag-grid-angular>\\r\\n          <span class=\\\"float-left mt-3\\\"\\r\\n            >{{ from }} to {{ to }} of {{ meta?.pagination?.total }}</span\\r\\n          >\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            [disabled]=\\\"disableNextButton\\\"\\r\\n            class=\\\"btn btn-primary float-right m-2\\\"\\r\\n            (click)=\\\"loadNext()\\\"\\r\\n          >\\r\\n            Next\\r\\n          </button>\\r\\n          <span class=\\\"float-right mt-3\\\"\\r\\n            >Page {{ meta?.pagination?.page }} of\\r\\n            {{ meta?.pagination?.pageCount }}</span\\r\\n          >\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            [disabled]=\\\"disablePrevButton\\\"\\r\\n            class=\\\"btn btn-primary float-right m-2\\\"\\r\\n            (click)=\\\"loadPrev()\\\"\\r\\n          >\\r\\n            Prev\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div\\r\\n  bsModal\\r\\n  #cropPriceModal=\\\"bs-modal\\\"\\r\\n  class=\\\"modal fade\\\"\\r\\n  tabindex=\\\"-1\\\"\\r\\n  role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\"\\r\\n>\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Add/Edit Crop Price</h4>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"close\\\"\\r\\n          (click)=\\\"cropPriceModal.hide()\\\"\\r\\n          aria-label=\\\"Close\\\"\\r\\n        >\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"cropPriceForm\\\" (ngSubmit)=\\\"cropPriceSubmit()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"state\\\">State</label>\\r\\n            <select\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"state\\\"\\r\\n              (change)=\\\"filterMarkets($event)\\\"\\r\\n              required\\r\\n              ngModel\\r\\n              name=\\\"state\\\"\\r\\n              formControlName=\\\"state\\\"\\r\\n            >\\r\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n              <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\r\\n                {{ item.attributes.Name }}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"market\\\">Market</label>\\r\\n            <select\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"market\\\"\\r\\n              required\\r\\n              ngModel\\r\\n              name=\\\"market\\\"\\r\\n              formControlName=\\\"market\\\"\\r\\n            >\\r\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n              <option *ngFor=\\\"let item of Markets\\\" value=\\\"{{ item.id }}\\\">\\r\\n                {{ item.attributes.Name }}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"crop\\\">Crop</label>\\r\\n            <select\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"crop\\\"\\r\\n              required\\r\\n              ngModel\\r\\n              name=\\\"crop\\\"\\r\\n              formControlName=\\\"crop\\\"\\r\\n            >\\r\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n              <option *ngFor=\\\"let item of Crops\\\" value=\\\"{{ item.id }}\\\">\\r\\n                {{ item.attributes.Name }}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"name\\\">Price</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"Price\\\"\\r\\n              name=\\\"Price\\\"\\r\\n              formControlName=\\\"Price\\\"\\r\\n              placeholder=\\\"Enter price\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"name\\\">Unit</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"Unit\\\"\\r\\n              name=\\\"Unit\\\"\\r\\n              formControlName=\\\"Unit\\\"\\r\\n              placeholder=\\\"Enter unit\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"Image\\\">Image</label>\\r\\n            <div>\\r\\n              <img\\r\\n                *ngIf=\\\"imageUrl\\\"\\r\\n                src=\\\"{{ imageUrl }}\\\"\\r\\n                width=\\\"100\\\"\\r\\n                height=\\\"100\\\"\\r\\n                style=\\\"object-fit: cover\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <input\\r\\n              type=\\\"file\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"Image\\\"\\r\\n              accept=\\\".jpg,.jpeg,.JPEG,.png\\\"\\r\\n              name=\\\"Image\\\"\\r\\n              (change)=\\\"onChange($event)\\\"\\r\\n              formControlName=\\\"Image\\\"\\r\\n              placeholder=\\\"Choose image\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-secondary\\\"\\r\\n            (click)=\\\"cropPriceModal.hide()\\\"\\r\\n          >\\r\\n            Close\\r\\n          </button>\\r\\n          <button\\r\\n            type=\\\"submit\\\"\\r\\n            class=\\\"btn btn-primary ml-2\\\"\\r\\n            [disabled]=\\\"btnLoading || !cropPriceForm.valid\\\"\\r\\n          >\\r\\n            <span\\r\\n              *ngIf=\\\"btnLoading\\\"\\r\\n              class=\\\"spinner-border spinner-border-sm\\\"\\r\\n              role=\\\"status\\\"\\r\\n              aria-hidden=\\\"true\\\"\\r\\n            ></span>\\r\\n            Save changes\\r\\n          </button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- /.modal-content -->\\r\\n  </div>\\r\\n  <!-- /.modal-dialog -->\\r\\n</div>\\r\\n<div\\r\\n  bsModal\\r\\n  #approveModal=\\\"bs-modal\\\"\\r\\n  class=\\\"modal fade\\\"\\r\\n  tabindex=\\\"-1\\\"\\r\\n  role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\"\\r\\n>\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body text-center\\\">\\r\\n        Do you want to approve this record?\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer justify-content-around\\\">\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn btn-secondary\\\"\\r\\n          (click)=\\\"approveOrReject(true)\\\"\\r\\n        >\\r\\n          No! Reject.\\r\\n        </button>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn btn-primary\\\"\\r\\n          (click)=\\\"approveOrReject(false)\\\"\\r\\n        >\\r\\n          Yes! Approve.\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Component, ViewChild } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DataService } from \"../../data.service\";\r\n// import { ActionRenderer } from \"../../utils/StatusRenderer\";\r\n\r\nimport { CropPricesColumn } from \"../../constants/columnMetadata\";\r\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\r\nimport { environment } from \"../../../environments/environment\";\r\n\r\n@Component({\r\n  templateUrl: \"crop-prices.component.html\",\r\n})\r\nexport class CropPricesComponent {\r\n  rowSelection: string;\r\n  constructor(\r\n    public dataservice: DataService,\r\n    public router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.columnDefs = [...CropPricesColumn];\r\n    this.rowSelection = \"single\";\r\n  }\r\n  @ViewChild(\"cropPriceModal\") public cropPriceModal: ModalDirective;\r\n  @ViewChild(\"approveModal\") public approveModal: ModalDirective;\r\n\r\n  loading = true;\r\n  btnLoading = false;\r\n  disableButton = true;\r\n  disableNextButton = false;\r\n  disablePrevButton = true;\r\n  selectedList = \"All\";\r\n  listCheck = false;\r\n  publicationState = \"PREVIEW\";\r\n  toApprove = undefined;\r\n  isRejected = undefined;\r\n  columnDefs = [];\r\n  States: any = [];\r\n  Markets: any = [];\r\n  Crops: any = [];\r\n  imageUrl;\r\n  meta;\r\n  pageSize = 20;\r\n  from = 1;\r\n  to = 20;\r\n  count = 1;\r\n  cropPriceForm = this.fb.group({\r\n    crop: [\"\", Validators.required],\r\n    state: [\"\", Validators.required],\r\n    market: [\"\", Validators.required],\r\n    Price: [\"\", Validators.required],\r\n    Unit: [\"\", Validators.required],\r\n    Image: [\"\"],\r\n  });\r\n  // frameworkComponents = {\r\n  //   statusRenderer: ActionRenderer,\r\n  // };\r\n  rowData: any = [];\r\n  selectedRows: any = [];\r\n  selectedYear: any = new Date().getFullYear();\r\n  years: any = [];\r\n  private gridApi;\r\n  private gridColumnApi;\r\n  filter: any = {};\r\n  file: any = null;\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    console.log(this.router);\r\n    this.getCropPrices();\r\n    this.getCrops();\r\n    this.getMarkets();\r\n    this.getStates();\r\n  }\r\n  getCropPrices() {\r\n    this.dataservice\r\n      .getCropPrices(\r\n        1,\r\n        this.pageSize,\r\n        this.publicationState,\r\n        this.toApprove,\r\n        this.isRejected\r\n      )\r\n      .valueChanges.subscribe((result: any) => {\r\n        this.rowData = result.data.cropPrices.data;\r\n        this.meta = result.data.cropPrices.meta;\r\n        if (this.meta?.pagination?.pageCount <= 1) {\r\n          this.disablePrevButton = true;\r\n          this.disableNextButton = true;\r\n        }\r\n        if (this.meta?.pagination?.total < this.pageSize) {\r\n          this.to = this.meta?.pagination?.total;\r\n        }\r\n      });\r\n  }\r\n  getCrops() {\r\n    this.dataservice.getCrops().valueChanges.subscribe((result: any) => {\r\n      this.Crops = result.data.crops.data;\r\n    });\r\n  }\r\n  loadNext() {\r\n    this.count++;\r\n    this.disablePrevButton = false;\r\n    this.from = this.from + this.pageSize;\r\n    this.to =\r\n      this.to + this.pageSize > this.meta?.pagination?.total\r\n        ? this.meta?.pagination?.total\r\n        : this.to + this.pageSize;\r\n    if (this.count === this.meta.pagination.pageCount) {\r\n      this.disableNextButton = true;\r\n    }\r\n    this.dataservice\r\n      .getCropPrices(\r\n        this.count,\r\n        this.pageSize,\r\n        this.publicationState,\r\n        this.toApprove\r\n      )\r\n      .valueChanges.subscribe((result: any) => {\r\n        this.meta = result.data.cropPrices.meta;\r\n        this.rowData = result.data.cropPrices.data;\r\n      });\r\n  }\r\n  loadPrev() {\r\n    this.count--;\r\n    if (this.count < this.meta.pagination.pageCount) {\r\n      this.disableNextButton = false;\r\n    }\r\n    if (this.count === 1) {\r\n      this.disablePrevButton = true;\r\n    }\r\n    this.from = this.from - this.pageSize;\r\n    this.to = this.to - this.rowData.length;\r\n    this.dataservice\r\n      .getCropPrices(\r\n        this.count,\r\n        this.pageSize,\r\n        this.publicationState,\r\n        this.toApprove\r\n      )\r\n      .valueChanges.subscribe((result: any) => {\r\n        this.meta = result.data.cropPrices.meta;\r\n        this.rowData = result.data.cropPrices.data;\r\n      });\r\n  }\r\n  getStates() {\r\n    this.dataservice.getStates().valueChanges.subscribe((result: any) => {\r\n      console.log(\"getStates\", result.data.states.data);\r\n      this.States = result.data.states.data;\r\n    });\r\n  }\r\n  getMarkets(id?) {\r\n    this.dataservice.getMarkets(id).valueChanges.subscribe((result: any) => {\r\n      console.log(\"getMarkets\", result.data.markets.data);\r\n      this.Markets = result.data.markets.data;\r\n    });\r\n  }\r\n  filterMarkets(event) {\r\n    this.getMarkets(event.target.value);\r\n  }\r\n  toggleCropPrices(data) {\r\n    switch (data) {\r\n      case \"Rejected\":\r\n        this.selectedList = \"Rejected\";\r\n        this.publicationState = \"PREVIEW\";\r\n        this.toApprove = null;\r\n        this.isRejected = true;\r\n        this.getCropPrices();\r\n        break;\r\n      case \"Approvalpending\":\r\n        this.selectedList = \"Pending\";\r\n        this.publicationState = \"PREVIEW\";\r\n        this.toApprove = null;\r\n        this.isRejected = false;\r\n        this.getCropPrices();\r\n        break;\r\n      case \"All\":\r\n        this.selectedList = \"All\";\r\n        this.publicationState = \"PREVIEW\";\r\n        this.toApprove = undefined;\r\n        this.isRejected = undefined;\r\n        this.getCropPrices();\r\n        break;\r\n    }\r\n    // if (data == 'Approvalpending') {\r\n    //   this.selectedList = \"Approval Pending\";\r\n    //   this.publicationState = \"PREVIEW\";\r\n    //   this.toApprove = null;\r\n    //   this.getCropPrices();\r\n    // }\r\n    // else if{\r\n\r\n    // } else {\r\n    //   this.selectedList = \"All\";\r\n    //   this.publicationState = \"PREVIEW\";\r\n    //   this.toApprove = undefined;\r\n    //   this.getCropPrices();\r\n    // }\r\n  }\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n  onRowClicked(event: any) {\r\n    console.log(\"row\", event.data);\r\n  }\r\n  onSelectionChanged(event: any) {\r\n    this.selectedRows = this.gridApi.getSelectedRows();\r\n    if (this.selectedRows.length > 0) {\r\n      this.disableButton = false;\r\n    } else {\r\n      this.disableButton = true;\r\n    }\r\n  }\r\n  // On file Select\r\n  onChange(event: any) {\r\n    this.file = [];\r\n    for (var i = 0; i < event.target.files.length; i++) {\r\n      this.file.push(event.target.files[i]);\r\n    }\r\n    console.log(this.file);\r\n  }\r\n  approveOrReject(check) {\r\n    let published = null;\r\n    if (!check) published = new Date();\r\n    this.dataservice\r\n      .UpdateCropPrice(\r\n        undefined,\r\n        this.selectedRows[0].id,\r\n        undefined,\r\n        check,\r\n        published\r\n      )\r\n      .subscribe(\r\n        (result: any) => {\r\n          console.log(\"response\", result);\r\n          if (result.data.updateCropPrice) {\r\n            this.toastr.success(\"Success!\");\r\n            this.getCropPrices();\r\n            this.file = null;\r\n            this.approveModal.hide();\r\n            this.gridApi.deselectAll();\r\n            this.btnLoading = false;\r\n          }\r\n        },\r\n        (error) => {\r\n          this.toastr.error(\"Failed. Please check the fields!\");\r\n          this.btnLoading = false;\r\n        }\r\n      );\r\n  }\r\n  openApproveModal() {\r\n    this.approveModal.show();\r\n  }\r\n  openModal(data?: any) {\r\n    this.imageUrl = null;\r\n    this.cropPriceModal.show();\r\n    if (data) {\r\n      this.cropPriceForm = this.fb.group({\r\n        crop: [\r\n          this.selectedRows[0].attributes.crop.data.id,\r\n          Validators.required,\r\n        ],\r\n        state: [\r\n          this.selectedRows[0].attributes.state.data.id,\r\n          Validators.required,\r\n        ],\r\n        market: [\r\n          this.selectedRows[0].attributes.market.data.id,\r\n          Validators.required,\r\n        ],\r\n        Price: [this.selectedRows[0].attributes.Price, Validators.required],\r\n        Unit: [this.selectedRows[0].attributes.Unit, Validators.required],\r\n        Image: [\r\n          this.selectedRows[0].attributes.Image?.data?.id,\r\n          Validators.required,\r\n        ],\r\n      });\r\n      this.imageUrl = this.selectedRows[0].attributes.Image?.data?.attributes\r\n        ?.url\r\n        ? `${environment.apiUrl}` +\r\n          this.selectedRows[0].attributes.Image?.data?.attributes?.url\r\n        : null;\r\n    } else {\r\n      this.cropPriceForm = this.fb.group({\r\n        crop: [\"\", Validators.required],\r\n        state: [\"\", Validators.required],\r\n        market: [\"\", Validators.required],\r\n        Price: [\"\", Validators.required],\r\n        Unit: [\"\", Validators.required],\r\n        Image: [\"\", Validators.required],\r\n      });\r\n      this.imageUrl = null;\r\n    }\r\n  }\r\n  cropPriceSubmit() {\r\n    let resp = {};\r\n    this.btnLoading = true;\r\n    console.log(this.cropPriceForm.value);\r\n    if (!this.disableButton) {\r\n      if (this.file) {\r\n        this.dataservice.upload(this.file).subscribe((response: any) => {\r\n          if (response.status == 200) {\r\n            console.log(response);\r\n            this.dataservice\r\n              .UpdateCropPrice(\r\n                this.cropPriceForm.value,\r\n                this.selectedRows[0].id,\r\n                response.body[0]?.id\r\n              )\r\n              .subscribe(\r\n                (result: any) => {\r\n                  resp = result.data;\r\n                  console.log(\"response\", result);\r\n                  if (result.data.updateCropPrice) {\r\n                    this.toastr.success(\"Success!\");\r\n                    this.getCropPrices();\r\n                    this.file = null;\r\n                    this.cropPriceModal.hide();\r\n                    this.cropPriceForm.reset();\r\n                    this.gridApi.deselectAll();\r\n                    this.btnLoading = false;\r\n                  }\r\n                },\r\n                (error) => {\r\n                  this.toastr.error(\"Failed. Please check the fields!\");\r\n                  this.btnLoading = false;\r\n                }\r\n              );\r\n          }\r\n        });\r\n      } else {\r\n        this.dataservice\r\n          .UpdateCropPrice(\r\n            this.cropPriceForm.value,\r\n            this.selectedRows[0].id,\r\n            null\r\n          )\r\n          .subscribe(\r\n            (result: any) => {\r\n              resp = result.data;\r\n              console.log(\"response\", result);\r\n              if (result.data.updateCropPrice) {\r\n                this.toastr.success(\"Success!\");\r\n                this.getCropPrices();\r\n                this.file = null;\r\n                this.cropPriceModal.hide();\r\n                this.cropPriceForm.reset();\r\n                this.gridApi.deselectAll();\r\n                this.btnLoading = false;\r\n              }\r\n            },\r\n            (error) => {\r\n              this.toastr.error(\"Failed. Please check the fields!\");\r\n              this.btnLoading = false;\r\n            }\r\n          );\r\n      }\r\n    } else {\r\n      this.dataservice.upload(this.file).subscribe((response: any) => {\r\n        if (response.status == 200) {\r\n          console.log(response);\r\n          this.dataservice\r\n            .AddCropPrice(this.cropPriceForm.value, response.body[0]?.id)\r\n            .subscribe(\r\n              (result: any) => {\r\n                resp = result.data;\r\n                console.log(\"response\", result);\r\n                if (result.data.createCropPrice) {\r\n                  this.toastr.success(\"Success!\");\r\n                  this.getCropPrices();\r\n                  this.file = null;\r\n                  this.cropPriceModal.hide();\r\n                  this.cropPriceForm.reset();\r\n                  this.gridApi.deselectAll();\r\n                }\r\n                this.btnLoading = false;\r\n              },\r\n              (error) => {\r\n                this.toastr.error(\"Failed. Please check the fields!\");\r\n                this.btnLoading = false;\r\n              }\r\n            );\r\n        } else {\r\n          this.toastr.error(\"Image failed to upload!\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}