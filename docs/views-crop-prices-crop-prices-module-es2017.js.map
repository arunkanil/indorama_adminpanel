{"version":3,"sources":["./src/app/views/crop-prices/crop-prices-routing.module.ts","./src/app/views/crop-prices/crop-prices.module.ts","./src/app/views/crop-prices/crop-prices.component.html","./src/app/views/crop-prices/crop-prices.component.ts"],"names":[],"mappings":"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","file":"views-crop-prices-crop-prices-module-es2017.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CropPricesComponent } from './crop-prices.component';\r\nimport { AuthGuard } from '../login/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    \r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'cropprices'\r\n      },\r\n      {\r\n        path: 'all',\r\n        // canActivate: [AuthGuard],\r\n        component: CropPricesComponent,\r\n        data: {\r\n          roles: 'KP_CALLER',\r\n          title: 'Crop Prices'\r\n        }\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SoilTestRoutingModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { CropPricesComponent } from './crop-prices.component';\r\n\r\n// Dropdowns Component\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\n// Buttons Routing\r\nimport { SoilTestRoutingModule } from './crop-prices-routing.module';\r\n\r\n// Angular\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TabsModule,\r\n    ReactiveFormsModule,\r\n    AgGridModule.withComponents([]),\r\n    SoilTestRoutingModule,\r\n    BsDropdownModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    CropPricesComponent,\r\n  ]\r\n})\r\nexport class CropPricesModule { }\r\n","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div\\n      class=\\\"card-header\\\"\\n      style=\\\"display: flex; justify-content: space-between\\\"\\n    >\\n      <h2>Crop Prices Home</h2>\\n      <div>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-outline-primary\\\"\\n          data-toggle=\\\"modal\\\"\\n          (click)=\\\"downloadExcel()\\\"\\n        >\\n          Download excel\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-warning\\\"\\n          data-toggle=\\\"modal\\\"\\n          [disabled]=\\\"disableButton\\\"\\n          (click)=\\\"openApproveModal()\\\"\\n        >\\n          Approve / Reject\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          [disabled]=\\\"disableButton\\\"\\n          class=\\\"btn btn-info\\\"\\n          data-toggle=\\\"modal\\\"\\n          (click)=\\\"openModal('Edit')\\\"\\n        >\\n          Edit\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          [disabled]=\\\"!disableButton\\\"\\n          class=\\\"btn btn-primary\\\"\\n          data-toggle=\\\"modal\\\"\\n          (click)=\\\"openModal()\\\"\\n        >\\n          Add New Price\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <div class=\\\"btn-group float-right mb-3\\\" dropdown>\\n            <button\\n              dropdownToggle\\n              type=\\\"button\\\"\\n              class=\\\"btn btn-primary dropdown-toggle\\\"\\n            >\\n              {{ selectedList }}<span class=\\\"caret\\\"></span>\\n            </button>\\n            <ul *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\n              <li role=\\\"menuitem\\\">\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"toggleCropPrices('All')\\\"\\n                  >All</a\\n                >\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"toggleCropPrices('Approvalpending')\\\"\\n                  >Approval pending</a\\n                >\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"toggleCropPrices('Rejected')\\\"\\n                  >Rejected</a\\n                >\\n              </li>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <ag-grid-angular\\n            #agGrid\\n            style=\\\"width: 100%; height: 65vh\\\"\\n            id=\\\"myGrid\\\"\\n            class=\\\"ag-theme-alpine\\\"\\n            [columnDefs]=\\\"columnDefs\\\"\\n            [rowData]=\\\"rowData\\\"\\n            [rowSelection]=\\\"rowSelection\\\"\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\n            (gridReady)=\\\"onGridReady($event)\\\"\\n            animateRows=\\\"true\\\"\\n          >\\n          </ag-grid-angular>\\n          <span class=\\\"float-left mt-3\\\"\\n            >{{ from }} to {{ to }} of {{ meta?.pagination?.total }}</span\\n          >\\n          <button\\n            type=\\\"button\\\"\\n            [disabled]=\\\"disableNextButton\\\"\\n            class=\\\"btn btn-primary float-right m-2\\\"\\n            (click)=\\\"loadNext()\\\"\\n          >\\n            Next\\n          </button>\\n          <span class=\\\"float-right mt-3\\\"\\n            >Page {{ meta?.pagination?.page }} of\\n            {{ meta?.pagination?.pageCount }}</span\\n          >\\n          <button\\n            type=\\\"button\\\"\\n            [disabled]=\\\"disablePrevButton\\\"\\n            class=\\\"btn btn-primary float-right m-2\\\"\\n            (click)=\\\"loadPrev()\\\"\\n          >\\n            Prev\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div\\n  bsModal\\n  #cropPriceModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add/Edit Crop Price</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"cropPriceModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"cropPriceForm\\\" (ngSubmit)=\\\"cropPriceSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"state\\\">State</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"state\\\"\\n              (change)=\\\"filterMarkets($event)\\\"\\n              required\\n              ngModel\\n              name=\\\"state\\\"\\n              formControlName=\\\"state\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"market\\\">Market</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"market\\\"\\n              required\\n              ngModel\\n              name=\\\"market\\\"\\n              formControlName=\\\"market\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of Markets\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"crop\\\">Crop</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"crop\\\"\\n              required\\n              ngModel\\n              name=\\\"crop\\\"\\n              formControlName=\\\"crop\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of Crops\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Price</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"Price\\\"\\n              name=\\\"Price\\\"\\n              formControlName=\\\"Price\\\"\\n              placeholder=\\\"Enter price\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Unit</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"Unit\\\"\\n              name=\\\"Unit\\\"\\n              formControlName=\\\"Unit\\\"\\n              placeholder=\\\"Enter unit\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"Image\\\">Image</label>\\n            <div>\\n              <img\\n                *ngIf=\\\"imageUrl\\\"\\n                src=\\\"{{ imageUrl }}\\\"\\n                width=\\\"100\\\"\\n                height=\\\"100\\\"\\n                style=\\\"object-fit: cover\\\"\\n              />\\n            </div>\\n            <input\\n              type=\\\"file\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"Image\\\"\\n              accept=\\\".jpg,.jpeg,.JPEG,.png\\\"\\n              name=\\\"Image\\\"\\n              (change)=\\\"onChange($event)\\\"\\n              formControlName=\\\"Image\\\"\\n              placeholder=\\\"Choose image\\\"\\n            />\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"cropPriceModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !cropPriceForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Save changes\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n    <!-- /.modal-content -->\\n  </div>\\n  <!-- /.modal-dialog -->\\n</div>\\n<div\\n  bsModal\\n  #approveModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-body text-center\\\">\\n        Do you want to approve this record?\\n      </div>\\n      <div class=\\\"modal-footer justify-content-around\\\">\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-secondary\\\"\\n          (click)=\\\"approveOrReject(true)\\\"\\n        >\\n          No! Reject.\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-primary\\\"\\n          (click)=\\\"approveOrReject(false)\\\"\\n        >\\n          Yes! Approve.\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { Component, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { DataService } from \"../../data.service\";\n// import { ActionRenderer } from \"../../utils/StatusRenderer\";\n\nimport { CropPricesColumn } from \"../../constants/columnMetadata\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\nimport { environment } from \"../../../environments/environment\";\n\n@Component({\n  templateUrl: \"crop-prices.component.html\",\n})\nexport class CropPricesComponent {\n  rowSelection: string;\n  constructor(\n    public dataservice: DataService,\n    public router: Router,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) {\n    this.columnDefs = [...CropPricesColumn];\n    this.rowSelection = \"single\";\n  }\n  @ViewChild(\"cropPriceModal\") public cropPriceModal: ModalDirective;\n  @ViewChild(\"approveModal\") public approveModal: ModalDirective;\n\n  loading = true;\n  btnLoading = false;\n  disableButton = true;\n  disableNextButton = false;\n  disablePrevButton = true;\n  selectedList = \"All\";\n  listCheck = false;\n  publicationState = \"PREVIEW\";\n  toApprove = undefined;\n  isRejected = undefined;\n  columnDefs = [];\n  States: any = [];\n  Markets: any = [];\n  Crops: any = [];\n  imageUrl;\n  meta;\n  pageSize = 20;\n  from = 1;\n  to = 20;\n  count = 1;\n  cropPriceForm = this.fb.group({\n    crop: [\"\", Validators.required],\n    state: [\"\", Validators.required],\n    market: [\"\", Validators.required],\n    Price: [\"\", Validators.required],\n    Unit: [\"\", Validators.required],\n    Image: [\"\"],\n  });\n  // frameworkComponents = {\n  //   statusRenderer: ActionRenderer,\n  // };\n  rowData: any = [];\n  selectedRows: any = [];\n  selectedYear: any = new Date().getFullYear();\n  years: any = [];\n  private gridApi;\n  private gridColumnApi;\n  filter: any = {};\n  file: any = null;\n\n  ngOnInit(): void {\n    this.loading = true;\n    console.log(this.router);\n    this.getCropPrices();\n    this.getCrops();\n    this.getMarkets();\n    this.getStates();\n  }\n  getCropPrices() {\n    this.dataservice\n      .getCropPrices(\n        1,\n        this.pageSize,\n        this.publicationState,\n        this.toApprove,\n        this.isRejected\n      )\n      .valueChanges.subscribe((result: any) => {\n        this.rowData = result.data.cropPrices.data;\n        this.meta = result.data.cropPrices.meta;\n        if (this.meta?.pagination?.pageCount <= 1) {\n          this.disablePrevButton = true;\n          this.disableNextButton = true;\n        }\n        if (this.meta?.pagination?.total < this.pageSize) {\n          this.to = this.meta?.pagination?.total;\n        }\n      });\n  }\n  getCrops() {\n    this.dataservice.getCrops().valueChanges.subscribe((result: any) => {\n      this.Crops = result.data.crops.data;\n    });\n  }\n  loadNext() {\n    this.count++;\n    this.disablePrevButton = false;\n    this.from = this.from + this.pageSize;\n    this.to =\n      this.to + this.pageSize > this.meta?.pagination?.total\n        ? this.meta?.pagination?.total\n        : this.to + this.pageSize;\n    if (this.count === this.meta.pagination.pageCount) {\n      this.disableNextButton = true;\n    }\n    this.dataservice\n      .getCropPrices(\n        this.count,\n        this.pageSize,\n        this.publicationState,\n        this.toApprove\n      )\n      .valueChanges.subscribe((result: any) => {\n        this.meta = result.data.cropPrices.meta;\n        this.rowData = result.data.cropPrices.data;\n      });\n  }\n  loadPrev() {\n    this.count--;\n    if (this.count < this.meta.pagination.pageCount) {\n      this.disableNextButton = false;\n    }\n    if (this.count === 1) {\n      this.disablePrevButton = true;\n    }\n    this.from = this.from - this.pageSize;\n    this.to = this.to - this.rowData.length;\n    this.dataservice\n      .getCropPrices(\n        this.count,\n        this.pageSize,\n        this.publicationState,\n        this.toApprove\n      )\n      .valueChanges.subscribe((result: any) => {\n        this.meta = result.data.cropPrices.meta;\n        this.rowData = result.data.cropPrices.data;\n      });\n  }\n  getStates() {\n    this.dataservice.getStates().valueChanges.subscribe((result: any) => {\n      console.log(\"getStates\", result.data.states.data);\n      this.States = result.data.states.data;\n    });\n  }\n  getMarkets(id?) {\n    this.dataservice.getMarkets(id).valueChanges.subscribe((result: any) => {\n      console.log(\"getMarkets\", result.data.markets.data);\n      this.Markets = result.data.markets.data;\n    });\n  }\n  filterMarkets(event) {\n    this.getMarkets(event.target.value);\n  }\n  toggleCropPrices(data) {\n    switch (data) {\n      case \"Rejected\":\n        this.selectedList = \"Rejected\";\n        this.publicationState = \"PREVIEW\";\n        this.toApprove = null;\n        this.isRejected = true;\n        this.getCropPrices();\n        break;\n      case \"Approvalpending\":\n        this.selectedList = \"Pending\";\n        this.publicationState = \"PREVIEW\";\n        this.toApprove = null;\n        this.isRejected = false;\n        this.getCropPrices();\n        break;\n      case \"All\":\n        this.selectedList = \"All\";\n        this.publicationState = \"PREVIEW\";\n        this.toApprove = undefined;\n        this.isRejected = undefined;\n        this.getCropPrices();\n        break;\n    }\n    // if (data == 'Approvalpending') {\n    //   this.selectedList = \"Approval Pending\";\n    //   this.publicationState = \"PREVIEW\";\n    //   this.toApprove = null;\n    //   this.getCropPrices();\n    // }\n    // else if{\n\n    // } else {\n    //   this.selectedList = \"All\";\n    //   this.publicationState = \"PREVIEW\";\n    //   this.toApprove = undefined;\n    //   this.getCropPrices();\n    // }\n  }\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.gridApi.sizeColumnsToFit();\n  }\n  onRowClicked(event: any) {\n    console.log(\"row\", event.data);\n  }\n  onSelectionChanged(event: any) {\n    this.selectedRows = this.gridApi.getSelectedRows();\n    if (this.selectedRows.length > 0) {\n      this.disableButton = false;\n    } else {\n      this.disableButton = true;\n    }\n  }\n  // On file Select\n  onChange(event: any) {\n    this.file = [];\n    for (var i = 0; i < event.target.files.length; i++) {\n      this.file.push(event.target.files[i]);\n    }\n    console.log(this.file);\n  }\n  approveOrReject(check) {\n    let published = null;\n    if (!check) published = new Date();\n    this.dataservice\n      .UpdateCropPrice(\n        undefined,\n        this.selectedRows[0].id,\n        undefined,\n        check,\n        published\n      )\n      .subscribe(\n        (result: any) => {\n          console.log(\"response\", result);\n          if (result.data.updateCropPrice) {\n            this.toastr.success(\"Success!\");\n            this.getCropPrices();\n            this.file = null;\n            this.approveModal.hide();\n            this.gridApi.deselectAll();\n            this.btnLoading = false;\n          }\n        },\n        (error) => {\n          this.toastr.error(\"Failed. Please check the fields!\");\n          this.btnLoading = false;\n        }\n      );\n  }\n\n  downloadExcel() {\n    let resp = {};\n    this.btnLoading = true;\n    this.dataservice\n      .downloadCropPrices()\n      .subscribe((result: any) => {\n        resp = result.body;\n        console.log(result);\n        if (result.status === 200 && result.body.status == \"Success\") {\n          this.toastr.success(result.body.message);\n          this.btnLoading = false;\n          window.open(`${environment.apiUrl}${result?.body?.path}`, \"_blank\");\n        } else {\n          this.btnLoading = false;\n          this.toastr.error(result.body.message);\n        }\n      });\n  }\n\n\n  openApproveModal() {\n    this.approveModal.show();\n  }\n  openModal(data?: any) {\n    this.imageUrl = null;\n    this.cropPriceModal.show();\n    if (data) {\n      this.cropPriceForm = this.fb.group({\n        crop: [\n          this.selectedRows[0].attributes.crop.data.id,\n          Validators.required,\n        ],\n        state: [\n          this.selectedRows[0].attributes.state.data.id,\n          Validators.required,\n        ],\n        market: [\n          this.selectedRows[0].attributes.market.data.id,\n          Validators.required,\n        ],\n        Price: [this.selectedRows[0].attributes.Price, Validators.required],\n        Unit: [this.selectedRows[0].attributes.Unit, Validators.required],\n        Image: [\n          this.selectedRows[0].attributes.Image?.data?.id,\n          Validators.required,\n        ],\n      });\n      this.imageUrl = this.selectedRows[0].attributes.Image?.data?.attributes\n        ?.url\n        ? `${environment.apiUrl}` +\n          this.selectedRows[0].attributes.Image?.data?.attributes?.url\n        : null;\n    } else {\n      this.cropPriceForm = this.fb.group({\n        crop: [\"\", Validators.required],\n        state: [\"\", Validators.required],\n        market: [\"\", Validators.required],\n        Price: [\"\", Validators.required],\n        Unit: [\"\", Validators.required],\n        Image: [\"\", Validators.required],\n      });\n      this.imageUrl = null;\n    }\n  }\n  cropPriceSubmit() {\n    let resp = {};\n    this.btnLoading = true;\n    console.log(this.cropPriceForm.value);\n    if (!this.disableButton) {\n      if (this.file) {\n        this.dataservice.upload(this.file).subscribe((response: any) => {\n          if (response.status == 200) {\n            console.log(response);\n            this.dataservice\n              .UpdateCropPrice(\n                this.cropPriceForm.value,\n                this.selectedRows[0].id,\n                response.body[0]?.id\n              )\n              .subscribe(\n                (result: any) => {\n                  resp = result.data;\n                  console.log(\"response\", result);\n                  if (result.data.updateCropPrice) {\n                    this.toastr.success(\"Success!\");\n                    this.getCropPrices();\n                    this.file = null;\n                    this.cropPriceModal.hide();\n                    this.cropPriceForm.reset();\n                    this.gridApi.deselectAll();\n                    this.btnLoading = false;\n                  }\n                },\n                (error) => {\n                  this.toastr.error(\"Failed. Please check the fields!\");\n                  this.btnLoading = false;\n                }\n              );\n          }\n        });\n      } else {\n        this.dataservice\n          .UpdateCropPrice(\n            this.cropPriceForm.value,\n            this.selectedRows[0].id,\n            null\n          )\n          .subscribe(\n            (result: any) => {\n              resp = result.data;\n              console.log(\"response\", result);\n              if (result.data.updateCropPrice) {\n                this.toastr.success(\"Success!\");\n                this.getCropPrices();\n                this.file = null;\n                this.cropPriceModal.hide();\n                this.cropPriceForm.reset();\n                this.gridApi.deselectAll();\n                this.btnLoading = false;\n              }\n            },\n            (error) => {\n              this.toastr.error(\"Failed. Please check the fields!\");\n              this.btnLoading = false;\n            }\n          );\n      }\n    } else {\n      this.dataservice.upload(this.file).subscribe((response: any) => {\n        if (response.status == 200) {\n          console.log(response);\n          this.dataservice\n            .AddCropPrice(this.cropPriceForm.value, response.body[0]?.id)\n            .subscribe(\n              (result: any) => {\n                resp = result.data;\n                console.log(\"response\", result);\n                if (result.data.createCropPrice) {\n                  this.toastr.success(\"Success!\");\n                  this.getCropPrices();\n                  this.file = null;\n                  this.cropPriceModal.hide();\n                  this.cropPriceForm.reset();\n                  this.gridApi.deselectAll();\n                }\n                this.btnLoading = false;\n              },\n              (error) => {\n                this.toastr.error(\"Failed. Please check the fields!\");\n                this.btnLoading = false;\n              }\n            );\n        } else {\n          this.toastr.error(\"Image failed to upload!\");\n        }\n      });\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}