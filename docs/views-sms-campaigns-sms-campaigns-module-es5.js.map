{"version":3,"sources":["webpack:///src/app/views/sms-campaigns/sms-campaigns.module.ts","webpack:///src/app/views/sms-campaigns/sms-campaigns.component.html","webpack:///src/app/views/sms-campaigns/sms-campaigns.component.ts","webpack:///src/app/views/sms-campaigns/sms-campaigns-detail.component.ts","webpack:///src/app/views/sms-campaigns/sms-campaigns-detail.component.html","webpack:///src/app/views/sms-campaigns/sms-campaigns-routing.module.ts"],"names":["SMSCampaignsModule","imports","withComponents","forRoot","declarations","SMSCampaignsComponent","dataservice","router","fb","toastr","loading","btnLoading","disableButton","disableNextButton","disablePrevButton","pageSize","from","to","count","columnDefs","Farmers","Villages","LGA","Areas","States","rowData","selectedRows","years","filter","messageForm","group","isAllFarmers","message","required","village","area","lga","state","rowSelection","console","log","getSmsCampaigns","getAreas","getLGAs","getStates","getVillages","valueChanges","subscribe","result","data","smsCampaigns","meta","pagination","pageCount","total","length","states","stateid","lgas","lgaid","areas","areaid","villages","event","target","value","params","gridApi","api","gridColumnApi","columnApi","sizeColumnsToFit","getSelectedRows","navigate","id","messageModal","show","createSMSCampaign","createSmsCampaign","success","hide","error","template","SMSCampaignsDetailComponent","activatedRouter","dateConverter","dateConverterMin","details","fetchMessage","attributes","apiKey","SMSGatewayResponse","message_id","routes","path","children","redirectTo","component","title","SMSCampaignsRoutingModule","forChild","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAMA;;MAIA;;MAGA;;UAqBaA,kBAAkB;QAAA;MAAA,EAAI;MAAtBA,kBAAkB,6DAhB9B,8DAAQ,CAAC;QACRC,OAAO,EAAE,CACP,4DAAY,EACZ,6DAAU,EACV,kEAAmB,EACnB,uFAAyB,EACzB,4DAAY,CAACC,cAAc,CAAC,EAAE,CAAC,EAC/B,uEAAgB,CAACC,OAAO,EAAE,EAC1B,+DAAW,CAACA,OAAO,EAAE,EACrB,0DAAW,CACZ;QACDC,YAAY,EAAE,CACZ,8EAAqB,EACrB,4FAA2B;OAE9B,CAAC,C,EACWJ,kBAAkB,CAAI;;;;;;;;;;;;;;MClCnC;MAAe;MAAA,y0QAAwyQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCKvzQ;;UAOaK,qBAAqB;QAEhC,+BACSC,WAAwB,EACxBC,MAAc,EACbC,EAAe,EACfC,MAAqB;UAAA;UAHtB,KAAAH,WAAW,GAAXA,WAAW;UACX,KAAAC,MAAM,GAANA,MAAM;UACL,KAAAC,EAAE,GAAFA,EAAE;UACF,KAAAC,MAAM,GAANA,MAAM;UAQhB,KAAAC,OAAO,GAAG,IAAI;UACd,KAAAC,UAAU,GAAG,KAAK;UAClB,KAAAC,aAAa,GAAG,IAAI;UACpB,KAAAC,iBAAiB,GAAG,KAAK;UACzB,KAAAC,iBAAiB,GAAG,IAAI;UAExB,KAAAC,QAAQ,GAAG,EAAE;UACb,KAAAC,IAAI,GAAG,CAAC;UACR,KAAAC,EAAE,GAAG,EAAE;UACP,KAAAC,KAAK,GAAG,CAAC;UACT,KAAAC,UAAU,GAAG,EAAE;UACf,KAAAC,OAAO,GAAQ,EAAE;UACjB,KAAAC,QAAQ,GAAQ,EAAE;UAClB,KAAAC,GAAG,GAAQ,EAAE;UACb,KAAAC,KAAK,GAAQ,EAAE;UACf,KAAAC,MAAM,GAAQ,EAAE;UAChB,KAAAC,OAAO,GAAQ,EAAE;UACjB,KAAAC,YAAY,GAAQ,EAAE;UACtB,KAAAC,KAAK,GAAQ,EAAE;UAGf,KAAAC,MAAM,GAAQ,CAAC,CAAC;UAGhB,KAAAC,WAAW,GAAG,IAAI,CAACrB,EAAE,CAACsB,KAAK,CAAC;YAC1BC,YAAY,EAAE,CAAC,KAAK,CAAC;YACrBC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAACC,QAAQ,CAAC;YAClCC,OAAO,EAAE,CAAC,EAAE,CAAC;YACbC,IAAI,EAAE,CAAC,EAAE,CAAC;YACVC,GAAG,EAAE,CAAC,EAAE,CAAC;YACTC,KAAK,EAAE,CAAC,EAAE;WACX,CAAC;UArCA,IAAI,CAAClB,UAAU,sBAAO,mEAAS,CAAC;UAChC,IAAI,CAACmB,YAAY,GAAG,QAAQ;QAC9B;QAAC;UAAA;UAAA,OAoCD,oBAAQ;YACN,IAAI,CAAC5B,OAAO,GAAG,IAAI;YACnB6B,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjC,MAAM,CAAC;YACxB,IAAI,CAACkC,eAAe,EAAE;YACtB,IAAI,CAACC,QAAQ,EAAE;YACf,IAAI,CAACC,OAAO,EAAE;YACd,IAAI,CAACC,SAAS,EAAE;YAChB,IAAI,CAACC,WAAW,EAAE;UACpB;QAAC;UAAA;UAAA,OACD,2BAAkB;YAAA;YAChB,IAAI,CAACvC,WAAW,CACbmC,eAAe,CAAC,CAAC,EAAE,IAAI,CAAC1B,QAAQ,CAAC,CACjC+B,YAAY,CAACC,SAAS,CAAC,UAACC,MAAW,EAAK;;cACvC,KAAI,CAACvB,OAAO,GAAGuB,MAAM,CAACC,IAAI,CAACC,YAAY,CAACD,IAAI;cAC5C,KAAI,CAACE,IAAI,GAAGH,MAAM,CAACC,IAAI,CAACC,YAAY,CAACC,IAAI;cACzC,IAAI,kBAAI,CAACA,IAAI,0CAAEC,UAAU,0CAAEC,SAAS,KAAI,CAAC,EAAE;gBACzC,KAAI,CAACvC,iBAAiB,GAAG,IAAI;gBAC7B,KAAI,CAACD,iBAAiB,GAAG,IAAI;;cAE/B,IAAI,kBAAI,CAACsC,IAAI,0CAAEC,UAAU,0CAAEE,KAAK,IAAG,KAAI,CAACvC,QAAQ,EAAE;gBAChD,KAAI,CAACE,EAAE,GAAG,CAAH,WAAG,KAAI,CAACkC,IAAI,0CAAEC,UAAU,0CAAEE,KAAK;;YAE1C,CAAC,CAAC;UACN;QAAC;UAAA;UAAA,OACD,oBAAW;YAAA;;YACT,IAAI,CAACpC,KAAK,EAAE;YACZ,IAAI,CAACJ,iBAAiB,GAAG,KAAK;YAC9B,IAAI,CAACE,IAAI,GAAG,IAAI,CAACA,IAAI,GAAG,IAAI,CAACD,QAAQ;YACrC,IAAI,CAACE,EAAE,GACL,IAAI,CAACA,EAAE,GAAG,IAAI,CAACF,QAAQ,gBAAG,IAAI,CAACoC,IAAI,0CAAEC,UAAU,0CAAEE,KAAK,IAClD,CAAD,WAAC,IAAI,CAACH,IAAI,0CAAEC,UAAU,0CAAEE,KAAK,GAC5B,IAAI,CAACrC,EAAE,GAAG,IAAI,CAACF,QAAQ;YAC7B,IAAI,IAAI,CAACG,KAAK,KAAK,IAAI,CAACiC,IAAI,CAACC,UAAU,CAACC,SAAS,EAAE;cACjD,IAAI,CAACxC,iBAAiB,GAAG,IAAI;;YAE/B,IAAI,CAACP,WAAW,CACbmC,eAAe,CAAC,IAAI,CAACvB,KAAK,EAAE,IAAI,CAACH,QAAQ,CAAC,CAC1C+B,YAAY,CAACC,SAAS,CAAC,UAACC,MAAW,EAAK;cACvC,MAAI,CAACG,IAAI,GAAGH,MAAM,CAACC,IAAI,CAACC,YAAY,CAACC,IAAI;cACzC,MAAI,CAAC1B,OAAO,GAAGuB,MAAM,CAACC,IAAI,CAACC,YAAY,CAACD,IAAI;YAC9C,CAAC,CAAC;UACN;QAAC;UAAA;UAAA,OACD,oBAAW;YAAA;YACT,IAAI,CAAC/B,KAAK,EAAE;YACZ,IAAI,IAAI,CAACA,KAAK,GAAG,IAAI,CAACiC,IAAI,CAACC,UAAU,CAACC,SAAS,EAAE;cAC/C,IAAI,CAACxC,iBAAiB,GAAG,KAAK;;YAEhC,IAAI,IAAI,CAACK,KAAK,KAAK,CAAC,EAAE;cACpB,IAAI,CAACJ,iBAAiB,GAAG,IAAI;;YAE/B,IAAI,CAACE,IAAI,GAAG,IAAI,CAACA,IAAI,GAAG,IAAI,CAACD,QAAQ;YACrC,IAAI,CAACE,EAAE,GAAG,IAAI,CAACA,EAAE,GAAG,IAAI,CAACQ,OAAO,CAAC8B,MAAM;YACvC,IAAI,CAACjD,WAAW,CACbmC,eAAe,CAAC,IAAI,CAACvB,KAAK,EAAE,IAAI,CAACH,QAAQ,CAAC,CAC1C+B,YAAY,CAACC,SAAS,CAAC,UAACC,MAAW,EAAK;cACvC,MAAI,CAACG,IAAI,GAAGH,MAAM,CAACC,IAAI,CAACC,YAAY,CAACC,IAAI;cACzC,MAAI,CAAC1B,OAAO,GAAGuB,MAAM,CAACC,IAAI,CAACC,YAAY,CAACD,IAAI;YAC9C,CAAC,CAAC;UACN;QAAC;UAAA;UAAA,OACD,qBAAY;YAAA;YACV,IAAI,CAAC3C,WAAW,CAACsC,SAAS,EAAE,CAACE,YAAY,CAACC,SAAS,CAAC,UAACC,MAAW,EAAK;cACnET,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEQ,MAAM,CAACC,IAAI,CAACO,MAAM,CAACP,IAAI,CAAC;cACjD,MAAI,CAACzB,MAAM,GAAGwB,MAAM,CAACC,IAAI,CAACO,MAAM,CAACP,IAAI;YACvC,CAAC,CAAC;UACJ;QAAC;UAAA;UAAA,OACD,iBAAQQ,OAAQ,EAAE;YAAA;YAChB,IAAI,CAACnD,WAAW,CAACqC,OAAO,CAACc,OAAO,CAAC,CAACX,YAAY,CAACC,SAAS,CAAC,UAACC,MAAW,EAAK;cACxET,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEQ,MAAM,CAACC,IAAI,CAACS,IAAI,CAACT,IAAI,CAAC;cAC7C,MAAI,CAAC3B,GAAG,GAAG0B,MAAM,CAACC,IAAI,CAACS,IAAI,CAACT,IAAI;YAClC,CAAC,CAAC;UACJ;QAAC;UAAA;UAAA,OACD,kBAASU,KAAM,EAAE;YAAA;YACf,IAAI,CAACrD,WAAW,CAACoC,QAAQ,CAACiB,KAAK,CAAC,CAACb,YAAY,CAACC,SAAS,CAAC,UAACC,MAAW,EAAK;cACvET,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEQ,MAAM,CAACC,IAAI,CAACW,KAAK,CAACX,IAAI,CAAC;cAC/C,MAAI,CAAC1B,KAAK,GAAGyB,MAAM,CAACC,IAAI,CAACW,KAAK,CAACX,IAAI;YACrC,CAAC,CAAC;UACJ;QAAC;UAAA;UAAA,OACD,qBAAYY,MAAO,EAAE;YAAA;YACnB,IAAI,CAACvD,WAAW,CACbuC,WAAW,CAACgB,MAAM,CAAC,CACnBf,YAAY,CAACC,SAAS,CAAC,UAACC,MAAW,EAAK;cACvCT,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEQ,MAAM,CAACC,IAAI,CAACa,QAAQ,CAACb,IAAI,CAAC;cACrD,MAAI,CAAC5B,QAAQ,GAAG2B,MAAM,CAACC,IAAI,CAACa,QAAQ,CAACb,IAAI;YAC3C,CAAC,CAAC;UACN;QAAC;UAAA;UAAA,OACD,mBAAUc,KAAK,EAAE;YACf,IAAI,CAACpB,OAAO,CAACoB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;UAClC;QAAC;UAAA;UAAA,OACD,oBAAWF,KAAK,EAAE;YAChB,IAAI,CAACrB,QAAQ,CAACqB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;UACnC;QAAC;UAAA;UAAA,OACD,uBAAcF,KAAK,EAAE;YACnB,IAAI,CAAClB,WAAW,CAACkB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;UACtC;QAAC;UAAA;UAAA,OACD,qBAAYC,MAAM,EAAE;YAClB,IAAI,CAACC,OAAO,GAAGD,MAAM,CAACE,GAAG;YACzB,IAAI,CAACC,aAAa,GAAGH,MAAM,CAACI,SAAS;YACrC,IAAI,CAACH,OAAO,CAACI,gBAAgB,EAAE;UACjC;QAAC;UAAA;UAAA,OACD,sBAAaR,KAAU,EAAE;YACvBxB,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEuB,KAAK,CAACd,IAAI,CAAC;UAChC;QAAC;UAAA;UAAA,OACD,4BAAmBc,KAAU,EAAE;YAC7B,IAAI,CAACrC,YAAY,GAAG,IAAI,CAACyC,OAAO,CAACK,eAAe,EAAE;YAClD,IAAI,IAAI,CAAC9C,YAAY,CAAC6B,MAAM,GAAG,CAAC,EAAE;cAChC,IAAI,CAAC3C,aAAa,GAAG,KAAK;aAC3B,MAAM;cACL,IAAI,CAACA,aAAa,GAAG,IAAI;;YAE3B,IAAI,CAACL,MAAM,CAACkE,QAAQ,CAAC,CAAC,wBAAwB,EAAE,IAAI,CAAC/C,YAAY,CAAC,CAAC,CAAC,CAACgD,EAAE,CAAC,EAAE;cACxErC,KAAK,EAAE;gBAAEY,IAAI,EAAE,IAAI,CAACvB;cAAa;aAClC,CAAC;YACFa,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,YAAY,EAAE,IAAI,CAACA,YAAY,CAAC,CAAC,CAAC,CAAC;UACtD;QAAC;UAAA;UAAA,OACD,qBAAY;YACV,IAAI,CAACiD,YAAY,CAACC,IAAI,EAAE;UAC1B;QAAC;UAAA;UAAA,OACD,uBAAc;YAAA;YACZ,IAAI,CAACjE,UAAU,GAAG,IAAI;YACtB4B,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,WAAW,CAACoC,KAAK,EAAE,aAAa,CAAC;YAClD,IAAI,CAAC3D,WAAW,CAACuE,iBAAiB,CAAC,IAAI,CAAChD,WAAW,CAACoC,KAAK,CAAC,CAAClB,SAAS,CAClE,UAACC,MAAW,EAAK;cACfT,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEQ,MAAM,CAAC;cAC/B,IAAIA,MAAM,CAACC,IAAI,CAAC6B,iBAAiB,EAAE;gBACjC,MAAI,CAACrE,MAAM,CAACsE,OAAO,CAAC,UAAU,CAAC;gBAC/B,MAAI,CAACpE,UAAU,GAAG,KAAK;gBACvB,MAAI,CAACgE,YAAY,CAACK,IAAI,EAAE;gBACxB,MAAI,CAACvC,eAAe,EAAE;eACvB,MAAM;gBACL,MAAI,CAAChC,MAAM,CAACwE,KAAK,CAAC,SAAS,CAAC;gBAC5B,MAAI,CAACtE,UAAU,GAAG,KAAK;;YAE3B,CAAC,EACD,UAACsE,KAAK,EAAK;cACT,MAAI,CAACtE,UAAU,GAAG,KAAK;YACzB,CAAC,CACF;UACH;QAAC;QAAA;MAAA,GACF;;;gBAhMQ;QAAY,CAAC,E;gBAHb;QAAO,CAAC,E;gBACR;QAAW,G;gBACX;QAAc,CAAC,C;;;;gBAoBrB,uDAAS;UAAA,OAAC,cAAc;QAAA;;gBACxB,uDAAS;UAAA,OAAC,cAAc;QAAA;;MAZdN,qBAAqB,6DAHjC,+DAAS,CAAC;QACT6E,QAAQ,EAAR;OACD,CAAC,E,+EAIsB,yDAAW,EAChB,sDAAM,EACT,0DAAW,EACP,wDAAa,G,EANpB7E,qBAAqB,CAwLjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MC/LD;;UAWa8E,2BAA2B;QAEtC,qCACS7E,WAAwB,EACvB8E,eAA+B,EAChC7E,MAAc,EACbC,EAAe,EACfC,MAAqB;UAAA;UAJtB,KAAAH,WAAW,GAAXA,WAAW;UACV,KAAA8E,eAAe,GAAfA,eAAe;UAChB,KAAA7E,MAAM,GAANA,MAAM;UACL,KAAAC,EAAE,GAAFA,EAAE;UACF,KAAAC,MAAM,GAANA,MAAM;UAOhB,KAAA4E,aAAa,GAAG,uEAAa;UAC7B,KAAAC,gBAAgB,GAAG,0EAAgB;UACnC,KAAA5E,OAAO,GAAG,IAAI;UACd,KAAAC,UAAU,GAAG,KAAK;UAClB,KAAAQ,UAAU,GAAG,EAAE;UACf,KAAAM,OAAO,GAAG,EAAE;UAEZ,KAAA8D,OAAO,GAAQ,EAAE;UAIjB,KAAA1D,WAAW,GAAG,IAAI,CAACrB,EAAE,CAACsB,KAAK,CAAC;YAC1BC,YAAY,EAAE,CAAC,KAAK,CAAC;YACrBC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAACC,QAAQ,CAAC;YAClCC,OAAO,EAAE,CAAC,EAAE,CAAC;YACbC,IAAI,EAAE,CAAC,EAAE,CAAC;YACVC,GAAG,EAAE,CAAC,EAAE,CAAC;YACTC,KAAK,EAAE,CAAC,EAAE;WACX,CAAC;UAvBA,IAAI,CAAClB,UAAU,sBAAO,8EAAoB,CAAC;UAC3C,IAAI,CAACmB,YAAY,GAAG,QAAQ;QAC9B;QAAC;UAAA;UAAA,OAsBD,oBAAQ;YAAA;YACN,IAAI,CAAC5B,OAAO,GAAG,IAAI;YACnB,IAAI,CAAC0E,eAAe,CAAClB,MAAM,CAACnB,SAAS,CAAC,UAACmB,MAAM,EAAK;cAChD,MAAI,CAACQ,EAAE,GAAGR,MAAM,CAAC,IAAI,CAAC;YACxB,CAAC,CAAC;YACF3B,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjC,MAAM,CAAC;YACxB,IAAI,CAACkC,eAAe,EAAE;UACxB;QAAC;UAAA;UAAA,OAED,qBAAYyB,MAAM,EAAE;YAClB,IAAI,CAACC,OAAO,GAAGD,MAAM,CAACE,GAAG;YACzB,IAAI,CAACC,aAAa,GAAGH,MAAM,CAACI,SAAS;YACrC,IAAI,CAACH,OAAO,CAACI,gBAAgB,EAAE;UACjC;QAAC;UAAA;UAAA,OACD,2BAAkB;YAAA;YAChB,IAAI,CAACjE,WAAW,CACbmC,eAAe,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAACiC,EAAE,CAAC,CAC/B5B,YAAY,CAACC,SAAS,CAAC,UAACC,MAAW,EAAK;cACvC,OAAI,CAACuC,OAAO,GAAGvC,MAAM,CAACC,IAAI,CAACC,YAAY,CAACD,IAAI,CAAC,CAAC,CAAC;cAC/CV,OAAO,CAACC,GAAG,CAAC,OAAI,CAAC+C,OAAO,CAAC;YAC3B,CAAC,CAAC;UACN;QAAC;UAAA;UAAA,OACD,8BAAqB;YAAA;;YACnB,IAAI,CAAC5E,UAAU,GAAG,IAAI;YACtB,IAAI,CAACL,WAAW,CACbkF,YAAY,CAAC,CAAD,WACX,IAAI,CAACD,OAAO,0CAAEE,UAAU,0CAAEC,MAAM,0BAChC,IAAI,CAACH,OAAO,0CAAEE,UAAU,0CAAEE,kBAAkB,0CAAE1C,IAAI,0CAAE2C,UAAU,CAC/D,CACA7C,SAAS,CACR,UAACC,MAAW,EAAK;cACfT,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEQ,MAAM,CAAC;cACzC,OAAI,CAACvB,OAAO,GAAGuB,MAAM,CAACC,IAAI;cAC1B,OAAI,CAACtC,UAAU,GAAG,KAAK;YACzB,CAAC,EACD,UAACsE,KAAK,EAAK;cACT1C,OAAO,CAAC0C,KAAK,CAAC,2BAA2B,EAACA,KAAK,CAAC;cAChD,OAAI,CAACtE,UAAU,GAAG,KAAK;cACvB,OAAI,CAACF,MAAM,CAACwE,KAAK,CAAC,sBAAsB,CAAC;YAC3C,CAAC,CACF;UACL;QAAC;QAAA;MAAA,GACF;;;gBAvFQ;QAAY,CAAC,E;gBAHb;QAAc,G;gBAAE;QAAO,CAAC,E;gBACxB;QAAW,G;gBACX;QAAc,CAAC,C;;;;gBAyBrB,uDAAS;UAAA,OAAC,cAAc;QAAA;;gBACxB,uDAAS;UAAA,OAAC,cAAc;QAAA;;MAbdE,2BAA2B,6DAHvC,+DAAS,CAAC;QACTD,QAAQ,EAAR;OACD,CAAC,E,+EAIsB,yDAAW,EACN,8DAAc,EACxB,sDAAM,EACT,0DAAW,EACP,wDAAa,G,EAPpBC,2BAA2B,CA2EvC;;;;;;;;;;;;;;MC3FD;MAAe;MAAA,q5GAAo3G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCMn4G,IAAMU,MAAM,GAAW,CACrB;QACEC,IAAI,EAAE,EAAE;QAERC,QAAQ,EAAE,CACR;UACED,IAAI,EAAE,EAAE;UACRE,UAAU,EAAE;SACb,EACD;UACEF,IAAI,EAAE,KAAK;UACX;UACAG,SAAS,EAAE,8EAAqB;UAChChD,IAAI,EAAE;YACJiD,KAAK,EAAE;;SAEV,EACD;UACEJ,IAAI,EAAE,aAAa;UACnB;UACAG,SAAS,EAAE,2FAA2B;UACtChD,IAAI,EAAE;YACJiD,KAAK,EAAE;;SAEV;OAEJ,CACF;UAMYC,yBAAyB;QAAA;MAAA,EAAG;MAA5BA,yBAAyB,6DAJrC,8DAAQ,CAAC;QACRlG,OAAO,EAAE,CAAC,4DAAY,CAACmG,QAAQ,CAACP,MAAM,CAAC,CAAC;QACxCQ,OAAO,EAAE,CAAC,4DAAY;OACvB,CAAC,C,EACWF,yBAAyB,CAAG","file":"views-sms-campaigns-sms-campaigns-module-es5.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { SMSCampaignsComponent } from './sms-campaigns.component';\n\n// Dropdowns Component\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\n\n// Buttons Routing\nimport { SMSCampaignsRoutingModule } from './sms-campaigns-routing.module';\n\n// Angular\nimport { AgGridModule } from 'ag-grid-angular';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { SMSCampaignsDetailComponent } from './sms-campaigns-detail.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TabsModule,\n    ReactiveFormsModule,\n    SMSCampaignsRoutingModule,\n    AgGridModule.withComponents([]),\n    BsDropdownModule.forRoot(),\n    ModalModule.forRoot(),\n    FormsModule\n  ],\n  declarations: [\n    SMSCampaignsComponent,\n    SMSCampaignsDetailComponent\n  ]\n})\nexport class SMSCampaignsModule { }\n","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div\\n      class=\\\"card-header\\\"\\n      style=\\\"display: flex; justify-content: space-between\\\"\\n    >\\n      <h2>SMS Campaigns</h2>\\n      <div>\\n        <!-- <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-danger\\\"\\n          data-toggle=\\\"modal\\\"\\n          [disabled]=\\\"disableButton\\\"\\n          (click)=\\\"openModal()\\\"\\n        >\\n          Delete\\n        </button> -->\\n        <!-- <button type=\\\"button\\\" [disabled]=\\\"disableButton\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\"\\n          (click)=\\\"openModal('Edit')\\\">\\n          Edit\\n        </button> -->\\n        <button\\n          type=\\\"button\\\"\\n          [disabled]=\\\"!disableButton\\\"\\n          class=\\\"btn btn-primary\\\"\\n          data-toggle=\\\"modal\\\"\\n          (click)=\\\"openModal()\\\"\\n        >\\n          Create new campaign\\n        </button>\\n      </div>\\n    </div>\\n    <!-- <p class=\\\"text-muted mx-3\\\">\\n      To approve a crop price simply select and edit the record without\\n      modifying the data\\n    </p> -->\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <ag-grid-angular\\n            #agGrid\\n            style=\\\"width: 100%; height: 65vh\\\"\\n            id=\\\"myGrid\\\"\\n            class=\\\"ag-theme-alpine\\\"\\n            [columnDefs]=\\\"columnDefs\\\"\\n            [rowData]=\\\"rowData\\\"\\n            [rowSelection]=\\\"rowSelection\\\"\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\n            (gridReady)=\\\"onGridReady($event)\\\"\\n            animateRows=\\\"true\\\"\\n          >\\n          </ag-grid-angular>\\n          <span class=\\\"float-left mt-3\\\">{{from}} to {{to}}  of {{meta?.pagination?.total}}</span>\\n          <button\\n            type=\\\"button\\\"\\n            [disabled]=\\\"disableNextButton\\\"\\n            class=\\\"btn btn-primary float-right m-2\\\"\\n            (click)=\\\"loadNext()\\\"\\n          >\\n            Next\\n          </button>\\n          <span class=\\\"float-right mt-3\\\"\\n            >Page {{ meta?.pagination?.page }} of\\n            {{ meta?.pagination?.pageCount }}</span\\n          >\\n          <button\\n            type=\\\"button\\\"\\n            [disabled]=\\\"disablePrevButton\\\"\\n            class=\\\"btn btn-primary float-right m-2\\\"\\n            (click)=\\\"loadPrev()\\\"\\n          >\\n            Prev\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div\\n  bsModal\\n  #messageModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">New Campaign</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"messageModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"messageForm\\\" (ngSubmit)=\\\"sendMessage()\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"switch\\\">\\n                  <input\\n                    type=\\\"checkbox\\\"\\n                    id=\\\"isAllFarmers\\\"\\n                    maxlength=\\\"160\\\"\\n                    name=\\\"isAllFarmers\\\"\\n                    formControlName=\\\"isAllFarmers\\\"\\n                  />\\n                  <div class=\\\"slider round\\\">\\n                    <span class=\\\"on\\\">Filter</span>\\n                    <span class=\\\"off\\\">All</span>\\n                  </div>\\n                </label>\\n              </div>\\n            </div>\\n          </div>\\n          <div *ngIf=\\\"messageForm.value?.isAllFarmers\\\" class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"state\\\">State</label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"state\\\"\\n                  ngModel\\n                  (change)=\\\"filterLGA($event)\\\"\\n                  name=\\\"state\\\"\\n                  formControlName=\\\"state\\\"\\n                >\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\n                    {{ item.attributes.Name }}\\n                  </option>\\n                </select>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"area\\\">City</label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"area\\\"\\n                  ngModel\\n                  (change)=\\\"filterVillage($event)\\\"\\n                  name=\\\"area\\\"\\n                  formControlName=\\\"area\\\"\\n                >\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option *ngFor=\\\"let item of Areas\\\" value=\\\"{{ item.id }}\\\">\\n                    {{ item.attributes.Name }}\\n                  </option>\\n                </select>\\n              </div>\\n            </div>\\n            <div class=\\\"col\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"lga\\\">LGA</label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"lga\\\"\\n                  ngModel\\n                  (change)=\\\"filterArea($event)\\\"\\n                  name=\\\"lga\\\"\\n                  formControlName=\\\"lga\\\"\\n                >\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\n                    {{ item.attributes.Name }}\\n                  </option>\\n                </select>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"village\\\">Village</label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"village\\\"\\n                  ngModel\\n                  name=\\\"village\\\"\\n                  formControlName=\\\"village\\\"\\n                >\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option *ngFor=\\\"let item of Villages\\\" value=\\\"{{ item.id }}\\\">\\n                    {{ item.attributes.Name }}\\n                  </option>\\n                </select>\\n              </div>\\n            </div>\\n          </div>\\n          <!-- <div class=\\\"form-group\\\">Farmers selected : {{ NoOfContacts }}</div>\\n          <div class=\\\"form-group\\\">\\n            <button\\n              type=\\\"button\\\"\\n              class=\\\"btn btn-secondary\\\"\\n              (click)=\\\"clearSearch()\\\"\\n            >\\n              Clear\\n            </button>\\n            <button\\n              type=\\\"button\\\"\\n              class=\\\"btn btn-primary ml-2\\\"\\n              (click)=\\\"getUsers()\\\"\\n            >\\n              <span\\n                *ngIf=\\\"btnLoading\\\"\\n                class=\\\"spinner-border spinner-border-sm\\\"\\n                role=\\\"status\\\"\\n                aria-hidden=\\\"true\\\"\\n              ></span>\\n              Search\\n            </button>\\n          </div> -->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Message body</label>\\n            <textarea\\n              rows=\\\"5\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"message\\\"\\n              maxlength=\\\"160\\\"\\n              name=\\\"message\\\"\\n              formControlName=\\\"message\\\"\\n              placeholder=\\\"Max 160 characters\\\"\\n            ></textarea>\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"messageModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !messageForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Create\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n    <!-- /.modal-content -->\\n  </div>\\n  <!-- /.modal-dialog -->\\n</div>\\n\";","import { Component, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { DataService } from \"../../data.service\";\n// import { ActionRenderer } from \"../../utils/StatusRenderer\";\nimport { SmsColumn } from \"../../constants/columnMetadata\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\n\n@Component({\n  templateUrl: \"sms-campaigns.component.html\",\n})\nexport class SMSCampaignsComponent {\n  rowSelection: string;\n  constructor(\n    public dataservice: DataService,\n    public router: Router,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) {\n    this.columnDefs = [...SmsColumn];\n    this.rowSelection = \"single\";\n  }\n  @ViewChild(\"messageModal\") public messageModal: ModalDirective;\n  @ViewChild(\"detailsModal\") public detailsModal: ModalDirective;\n\n  loading = true;\n  btnLoading = false;\n  disableButton = true;\n  disableNextButton = false;\n  disablePrevButton = true;\n  meta;\n  pageSize = 20;\n  from = 1;\n  to = 20;\n  count = 1;\n  columnDefs = [];\n  Farmers: any = [];\n  Villages: any = [];\n  LGA: any = [];\n  Areas: any = [];\n  States: any = [];\n  rowData: any = [];\n  selectedRows: any = [];\n  years: any = [];\n  private gridApi;\n  private gridColumnApi;\n  filter: any = {};\n  NoOfContacts;\n\n  messageForm = this.fb.group({\n    isAllFarmers: [false],\n    message: [\"\", Validators.required],\n    village: [\"\"],\n    area: [\"\"],\n    lga: [\"\"],\n    state: [\"\"],\n  });\n  ngOnInit(): void {\n    this.loading = true;\n    console.log(this.router);\n    this.getSmsCampaigns();\n    this.getAreas();\n    this.getLGAs();\n    this.getStates();\n    this.getVillages();\n  }\n  getSmsCampaigns() {\n    this.dataservice\n      .getSmsCampaigns(1, this.pageSize)\n      .valueChanges.subscribe((result: any) => {\n        this.rowData = result.data.smsCampaigns.data;\n        this.meta = result.data.smsCampaigns.meta;\n        if (this.meta?.pagination?.pageCount <= 1) {\n          this.disablePrevButton = true;\n          this.disableNextButton = true;\n        }\n        if (this.meta?.pagination?.total < this.pageSize) {\n          this.to = this.meta?.pagination?.total;\n        }\n      });\n  }\n  loadNext() {\n    this.count++;\n    this.disablePrevButton = false;\n    this.from = this.from + this.pageSize;\n    this.to =\n      this.to + this.pageSize > this.meta?.pagination?.total\n        ? this.meta?.pagination?.total\n        : this.to + this.pageSize;\n    if (this.count === this.meta.pagination.pageCount) {\n      this.disableNextButton = true;\n    }\n    this.dataservice\n      .getSmsCampaigns(this.count, this.pageSize)\n      .valueChanges.subscribe((result: any) => {\n        this.meta = result.data.smsCampaigns.meta;\n        this.rowData = result.data.smsCampaigns.data;\n      });\n  }\n  loadPrev() {\n    this.count--;\n    if (this.count < this.meta.pagination.pageCount) {\n      this.disableNextButton = false;\n    }\n    if (this.count === 1) {\n      this.disablePrevButton = true;\n    }\n    this.from = this.from - this.pageSize;\n    this.to = this.to - this.rowData.length;\n    this.dataservice\n      .getSmsCampaigns(this.count, this.pageSize)\n      .valueChanges.subscribe((result: any) => {\n        this.meta = result.data.smsCampaigns.meta;\n        this.rowData = result.data.smsCampaigns.data;\n      });\n  }\n  getStates() {\n    this.dataservice.getStates().valueChanges.subscribe((result: any) => {\n      console.log(\"getStates\", result.data.states.data);\n      this.States = result.data.states.data;\n    });\n  }\n  getLGAs(stateid?) {\n    this.dataservice.getLGAs(stateid).valueChanges.subscribe((result: any) => {\n      console.log(\"getLGAs\", result.data.lgas.data);\n      this.LGA = result.data.lgas.data;\n    });\n  }\n  getAreas(lgaid?) {\n    this.dataservice.getAreas(lgaid).valueChanges.subscribe((result: any) => {\n      console.log(\"getAreas\", result.data.areas.data);\n      this.Areas = result.data.areas.data;\n    });\n  }\n  getVillages(areaid?) {\n    this.dataservice\n      .getVillages(areaid)\n      .valueChanges.subscribe((result: any) => {\n        console.log(\"getVillages\", result.data.villages.data);\n        this.Villages = result.data.villages.data;\n      });\n  }\n  filterLGA(event) {\n    this.getLGAs(event.target.value);\n  }\n  filterArea(event) {\n    this.getAreas(event.target.value);\n  }\n  filterVillage(event) {\n    this.getVillages(event.target.value);\n  }\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.gridApi.sizeColumnsToFit();\n  }\n  onRowClicked(event: any) {\n    console.log(\"row\", event.data);\n  }\n  onSelectionChanged(event: any) {\n    this.selectedRows = this.gridApi.getSelectedRows();\n    if (this.selectedRows.length > 0) {\n      this.disableButton = false;\n    } else {\n      this.disableButton = true;\n    }\n    this.router.navigate([\"/sms-campaigns/details\", this.selectedRows[0].id], {\n      state: { data: this.selectedRows },\n    });\n    console.log(this.selectedRows, this.selectedRows[0]);\n  }\n  openModal() {\n    this.messageModal.show();\n  }\n  sendMessage() {\n    this.btnLoading = true;\n    console.log(this.messageForm.value, \"sendmessage\");\n    this.dataservice.createSMSCampaign(this.messageForm.value).subscribe(\n      (result: any) => {\n        console.log(\"response\", result);\n        if (result.data.createSmsCampaign) {\n          this.toastr.success(\"Success!\");\n          this.btnLoading = false;\n          this.messageModal.hide();\n          this.getSmsCampaigns();\n        } else {\n          this.toastr.error(\"Failed!\");\n          this.btnLoading = false;\n        }\n      },\n      (error) => {\n        this.btnLoading = false;\n      }\n    );\n  }\n}\n","import { Component, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { DataService } from \"../../data.service\";\n// import { ActionRenderer } from \"../../utils/StatusRenderer\";\nimport {\n  dateConverter,\n  dateConverterMin,\n  DeliveryReportColumn,\n} from \"../../constants/columnMetadata\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\n\n@Component({\n  templateUrl: \"sms-campaigns-detail.component.html\",\n})\nexport class SMSCampaignsDetailComponent {\n  rowSelection: string;\n  constructor(\n    public dataservice: DataService,\n    private activatedRouter: ActivatedRoute,\n    public router: Router,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) {\n    this.columnDefs = [...DeliveryReportColumn];\n    this.rowSelection = \"single\";\n  }\n  @ViewChild(\"messageModal\") public messageModal: ModalDirective;\n  @ViewChild(\"detailsModal\") public detailsModal: ModalDirective;\n  dateConverter = dateConverter;\n  dateConverterMin = dateConverterMin;\n  loading = true;\n  btnLoading = false;\n  columnDefs = [];\n  rowData = [];\n  id;\n  details: any = [];\n  private gridApi;\n  private gridColumnApi;\n\n  messageForm = this.fb.group({\n    isAllFarmers: [false],\n    message: [\"\", Validators.required],\n    village: [\"\"],\n    area: [\"\"],\n    lga: [\"\"],\n    state: [\"\"],\n  });\n  ngOnInit(): void {\n    this.loading = true;\n    this.activatedRouter.params.subscribe((params) => {\n      this.id = params[\"id\"];\n    });\n    console.log(this.router);\n    this.getSmsCampaigns();\n  }\n\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.gridApi.sizeColumnsToFit();\n  }\n  getSmsCampaigns() {\n    this.dataservice\n      .getSmsCampaigns(1, 10, this.id)\n      .valueChanges.subscribe((result: any) => {\n        this.details = result.data.smsCampaigns.data[0];\n        console.log(this.details);\n      });\n  }\n  getDeliveryReports() {\n    this.btnLoading = true;\n    this.dataservice\n      .fetchMessage(\n        this.details?.attributes?.apiKey,\n        this.details?.attributes?.SMSGatewayResponse?.data?.message_id\n      )\n      .subscribe(\n        (result: any) => {\n          console.log(\"getDeliveryReports\", result);\n          this.rowData = result.data;\n          this.btnLoading = false;\n        },\n        (error) => {\n          console.error(\"error caught in component\",error);\n          this.btnLoading = false;\n          this.toastr.error(\"Unable to fetch data\");\n        }\n      );\n  }\n}\n","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div\\n      class=\\\"card-header\\\"\\n      style=\\\"display: flex; justify-content: space-between\\\"\\n    >\\n      <h2>SMS Campaign Details</h2>\\n      <span> </span>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n          <div class=\\\"row\\\">\\n            <table class=\\\"table table-striped\\\">\\n              <tbody>\\n                <tr>\\n                  <td>ID</td>\\n                  <td>{{ details?.id }}</td>\\n                </tr>\\n                <tr>\\n                  <td>Target</td>\\n                  <td *ngIf=\\\"details?.attributes?.isAllFarmers\\\">\\n                    <b>All Farmers</b>\\n                  </td>\\n                  <td *ngIf=\\\"!details?.attributes?.isAllFarmers\\\">\\n                    State -\\n                    <b>{{\\n                      details?.attributes?.state?.data?.attributes?.Name\\n                    }}</b\\n                    ><br />LGA -\\n                    <b>{{ details?.attributes?.lga?.data?.attributes?.Name }}</b\\n                    ><br />City -\\n                    <b>{{\\n                      details?.attributes?.area?.data?.attributes?.Name\\n                    }}</b\\n                    ><br />Village -\\n                    <b>{{\\n                      details?.attributes?.village?.data?.attributes?.Name\\n                    }}</b>\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Message</td>\\n                  <td>\\n                    {{ details?.attributes?.message }}\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Created at</td>\\n                  <td>{{ dateConverter(details?.attributes?.createdAt) }}</td>\\n                </tr>\\n                <tr>\\n                  <td>Status</td>\\n                  <td *ngIf=\\\"!details?.attributes?.SMSGatewayResponse?.data\\\">\\n                    {{\\n                      details?.attributes?.SMSGatewayResponse?.error?.message\\n                    }}\\n                  </td>\\n                  <td *ngIf=\\\"details?.attributes?.SMSGatewayResponse?.data\\\">\\n                    {{ details?.attributes?.SMSGatewayResponse?.data?.message }}\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <button\\n              type=\\\"button\\\"\\n              class=\\\"btn btn-primary float-right m-2\\\"\\n              [disabled]=\\\"btnLoading\\\"\\n              (click)=\\\"getDeliveryReports()\\\"\\n            >\\n              <span\\n                *ngIf=\\\"btnLoading\\\"\\n                class=\\\"spinner-border spinner-border-sm\\\"\\n                role=\\\"status\\\"\\n                aria-hidden=\\\"true\\\"\\n              ></span>\\n              Fetch Delivery Report\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"rowData.length > 0\\\" class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <ag-grid-angular\\n            #agGrid\\n            style=\\\"width: 100%; height: 65vh\\\"\\n            id=\\\"myGrid\\\"\\n            class=\\\"ag-theme-alpine\\\"\\n            [columnDefs]=\\\"columnDefs\\\"\\n            [rowData]=\\\"rowData\\\"\\n            [pagination]=\\\"true\\\"\\n            (gridReady)=\\\"onGridReady($event)\\\"\\n            animateRows=\\\"true\\\"\\n          >\\n          </ag-grid-angular>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {SMSCampaignsComponent } from './sms-campaigns.component';\nimport { AuthGuard } from '../login/auth.guard';\nimport { SMSCampaignsDetailComponent } from './sms-campaigns-detail.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    \n    children: [\n      {\n        path: '',\n        redirectTo: 'sms-campaigns'\n      },\n      {\n        path: 'all',\n        // canActivate: [AuthGuard],\n        component: SMSCampaignsComponent,\n        data: {\n          title: 'SMS Campaign'\n        }\n      },\n      {\n        path: 'details/:id',\n        // canActivate: [AuthGuard],\n        component: SMSCampaignsDetailComponent,\n        data: {\n          title: 'SMS Campaign Details'\n        }\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SMSCampaignsRoutingModule {}\n"]}