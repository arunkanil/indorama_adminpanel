{"version":3,"sources":["webpack:///src/app/views/best-crop-practices/best-crop-practices-routing.module.ts","webpack:///src/app/views/best-crop-practices/best-crop-practices.component.ts","webpack:///src/app/views/best-crop-practices/best-crop-practices.component.html","webpack:///src/app/views/best-crop-practices/best-crop-practices.module.ts"],"names":["routes","path","children","redirectTo","component","data","roles","title","BestCropPracticesRoutingModule","imports","forChild","exports","BestCropPracticesComponent","dataservice","router","fb","toastr","loading","btnLoading","disableButton","orders","columnDefs","Crops","baseURL","apiUrl","practicesForm","group","crop","required","content","File","Image","rowData","selectedRows","filter","file","image","rowSelection","console","log","getBestCropPractises","getCrops","valueChanges","subscribe","result","bestCropPractises","crops","event","check","i","target","files","length","push","deleteModal","show","deleteId","id","deleteBestPractice","deleteBestCropPractise","refetch","success","hide","error","resp","value","upload","imgResponse","status","body","fileResponse","createBestCropPractise","reset","practicesModal","template","BestCropPracticesModule","withComponents","forRoot","declarations"],"mappings":"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","file":"views-best-crop-practices-best-crop-practices-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { BestCropPracticesComponent } from './best-crop-practices.component';\r\nimport { AuthGuard } from '../login/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'cropprices'\r\n      },\r\n      {\r\n        path: 'all',\r\n        // canActivate: [AuthGuard],\r\n        component: BestCropPracticesComponent,\r\n        data: {\r\n          roles: 'KP_CALLER',\r\n          title: 'Best Crop Practices'\r\n        }\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BestCropPracticesRoutingModule {}\r\n","import { Component, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { DataService } from '../../data.service';\nimport { CropPricesColumn } from '../../constants/columnMetadata';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { environment } from '../../../environments/environment';\n\n@Component({\n  templateUrl: 'best-crop-practices.component.html',\n})\nexport class BestCropPracticesComponent {\n  rowSelection: string;\n  constructor(\n    public dataservice: DataService,\n    public router: Router,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) {\n    this.columnDefs = [...CropPricesColumn];\n    this.rowSelection = 'single';\n  }\n  @ViewChild('practicesModal') public practicesModal: ModalDirective;\n  @ViewChild('deleteModal') public deleteModal: ModalDirective;\n\n  loading = true;\n  btnLoading = false;\n  disableButton = true;\n  title = 'Verification';\n  orders: any = {};\n  columnDefs = [];\n  Crops: any = [];\n  imageUrl;\n  baseURL = environment.apiUrl;\n  practicesForm = this.fb.group({\n    crop: ['', Validators.required],\n    content: ['', Validators.required],\n    File: ['', Validators.required],\n    Image: ['', Validators.required],\n  });\n  rowData: any = [];\n  selectedRows: any = [];\n  filter: any = {};\n  file: any = null;\n  image: any = null;\n  deleteId;\n\n  ngOnInit(): void {\n    this.loading = true;\n    console.log(this.router);\n    this.getBestCropPractises();\n    this.getCrops();\n  }\n  getBestCropPractises() {\n    this.dataservice\n      .getBestCropPractises(1, 1000)\n      .valueChanges.subscribe((result: any) => {\n        this.rowData = result.data.bestCropPractises.data;\n        console.log(this.rowData);\n      });\n  }\n  getCrops() {\n    this.dataservice.getCrops(1, 10000, '').valueChanges.subscribe((result: any) => {\n      this.Crops = result.data.crops.data;\n    });\n  }\n  // On file Select\n  onChange(event: any, check) {\n    if (check == true) {\n      this.file = [];\n      for (let i = 0; i < event.target.files.length; i++) {\n        this.file.push(event.target.files[i]);\n      }\n    } else {\n      this.image = [];\n      for (let i = 0; i < event.target.files.length; i++) {\n        this.image.push(event.target.files[i]);\n      }\n    }\n    console.log(this.file, this.image);\n  }\n  openModal(data: any) {\n    this.deleteModal.show();\n    this.deleteId = data.id;\n  }\n  deletePractice() {\n    this.dataservice\n      .deleteBestPractice(this.deleteId)\n      .subscribe((result: any) => {\n        console.log('response', result);\n        if (result.data.deleteBestCropPractise) {\n          this.dataservice.getBestCropPractises().refetch();\n          this.toastr.success('Success!');\n          this.deleteModal.hide();\n        } else {\n          this.toastr.error('Failed!');\n        }\n      });\n  }\n  practicesSubmit() {\n    let resp = {};\n    let image = null;\n    let file = null;\n    this.btnLoading = true;\n    console.log(this.practicesForm.value);\n    this.dataservice.upload(this.image).subscribe((imgResponse: any) => {\n      if (imgResponse.status == 200) {\n        image = imgResponse.body[0]?.id;\n        console.log(imgResponse);\n        this.dataservice.upload(this.file).subscribe((fileResponse: any) => {\n          if (fileResponse.status == 200) {\n            file = fileResponse.body[0]?.id;\n            console.log(fileResponse);\n            this.dataservice\n              .createBestCropPractise(this.practicesForm.value, image, file)\n              .subscribe((result: any) => {\n                resp = result.data;\n                console.log('response', result);\n                if (result.data.createBestCropPractise) {\n                  this.toastr.success('Success!');\n                  this.practicesForm.reset();\n                  this.dataservice.getBestCropPractises().refetch();\n                  this.practicesModal.hide();\n                  this.btnLoading = false;\n                } else {\n                  this.toastr.error('Failed. Please check the fields!');\n                  this.btnLoading = false;\n                }\n              });\n          } else {\n            this.toastr.error('Image failed to upload!');\n            this.btnLoading = false;\n          }\n        });\n      } else {\n        this.toastr.error('Image failed to upload!');\n        this.btnLoading = false;\n      }\n    });\n  }\n}\n","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\r\\n      <h2>Best Crop Practices</h2>\\r\\n      <div>\\r\\n        <button type=\\\"button\\\" [disabled]=\\\"!disableButton\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\"\\r\\n          (click)=\\\"practicesModal.show()\\\">\\r\\n          Add New\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-3\\\" *ngFor=\\\"let item of rowData\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"img-container\\\">\\r\\n              <img class=\\\"card-img-top\\\" height=\\\"200\\\" width=\\\"200\\\"\\r\\n                src=\\\"{{baseURL}}{{item?.attributes?.cropImage?.data?.attributes?.url}}\\\" alt=\\\"Card image cap\\\" />\\r\\n              <div class=\\\"overlay\\\">\\r\\n                <div class=\\\"overlay-text\\\"><a target=\\\"_blank\\\"\\r\\n                    href=\\\"{{baseURL}}{{item?.attributes?.media?.data?.attributes?.url}}\\\" style=\\\"color: white;\\\">Click\\r\\n                    to view file</a></div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <div style=\\\"display: flex; justify-content: space-between\\\">\\r\\n                <h5 class=\\\"card-title\\\">\\r\\n                  {{item.attributes.crop.data.attributes.Name}}\\r\\n                </h5>\\r\\n                <div>\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-outline-primary p-1\\\" (click)=\\\"openModal(item)\\\">\\r\\n                    <img src=\\\"assets/deleteIcon.svg\\\">\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n              <p class=\\\"card-text\\\">\\r\\n                {{item.attributes.content}}\\r\\n              </p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div bsModal #practicesModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Add/Edit Practice</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"practicesModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"practicesForm\\\" (ngSubmit)=\\\"practicesSubmit()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"crop\\\">Crop</label>\\r\\n            <select class=\\\"form-control\\\" id=\\\"crop\\\" required ngModel name=\\\"crop\\\" formControlName=\\\"crop\\\">\\r\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n              <option *ngFor=\\\"let item of Crops\\\" value=\\\"{{ item.id }}\\\">\\r\\n                {{ item.attributes.Name }}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"content\\\">Description</label>\\r\\n            <textarea type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"content\\\" maxlength=\\\"150\\\" name=\\\"content\\\" rows=\\\"3\\\" formControlName=\\\"content\\\"\\r\\n              placeholder=\\\"Enter description\\\"></textarea>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"File\\\">PDF File</label>\\r\\n            <div><input type=\\\"file\\\" id=\\\"File\\\" accept=\\\".pdf\\\" name=\\\"File\\\" (change)=\\\"onChange($event,true)\\\"\\r\\n              formControlName=\\\"File\\\" placeholder=\\\"Choose file\\\" /></div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"Image\\\">Preview image</label>\\r\\n            <div>\\r\\n              <img *ngIf=\\\"imageUrl\\\" src=\\\"{{ imageUrl }}\\\" width=\\\"100\\\" height=\\\"100\\\" style=\\\"object-fit: cover\\\" />\\r\\n            </div>\\r\\n            <input type=\\\"file\\\" id=\\\"Image\\\" accept=\\\".jpg,.jpeg,.JPEG,.png\\\" name=\\\"Image\\\"\\r\\n              (change)=\\\"onChange($event,false)\\\" formControlName=\\\"Image\\\" placeholder=\\\"Choose image\\\" />\\r\\n          </div>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"practicesModal.hide()\\\">\\r\\n            Close\\r\\n          </button>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-2\\\" [disabled]=\\\"btnLoading || !practicesForm.valid\\\">\\r\\n            <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            Save changes\\r\\n          </button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- /.modal-content -->\\r\\n  </div>\\r\\n  <!-- /.modal-dialog -->\\r\\n</div>\\r\\n<div bsModal #deleteModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body text-center\\\">\\r\\n        Do you want to delete this record?\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer justify-content-around\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"deleteModal.hide()\\\">\\r\\n          No! Cancel.\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deletePractice()\\\">\\r\\n          Yes! Delete.\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";","import { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { BestCropPracticesComponent } from './best-crop-practices.component';\r\n\r\n// Dropdowns Component\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\n// Buttons Routing\r\nimport { BestCropPracticesRoutingModule } from './best-crop-practices-routing.module';\r\n\r\n// Angular\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TabsModule,\r\n    ReactiveFormsModule,\r\n    AgGridModule.withComponents([]),\r\n    BestCropPracticesRoutingModule,\r\n    BsDropdownModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    BestCropPracticesComponent,\r\n  ]\r\n})\r\nexport class BestCropPracticesModule { }\r\n"]}