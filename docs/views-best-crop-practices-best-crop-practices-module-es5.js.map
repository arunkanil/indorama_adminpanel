{"version":3,"sources":["webpack:///src/app/views/best-crop-practices/best-crop-practices-routing.module.ts","webpack:///src/app/views/best-crop-practices/best-crop-practices.component.ts","webpack:///src/app/views/best-crop-practices/best-crop-practices.component.html","webpack:///src/app/views/best-crop-practices/best-crop-practices.module.ts"],"names":["routes","path","children","redirectTo","component","data","roles","title","BestCropPracticesRoutingModule","imports","forChild","exports","BestCropPracticesComponent","dataservice","router","fb","toastr","loading","btnLoading","disableButton","orders","columnDefs","Crops","baseURL","apiUrl","practicesForm","group","crop","required","content","File","Image","rowData","selectedRows","filter","file","image","rowSelection","console","log","getBestCropPractises","getCrops","valueChanges","subscribe","result","bestCropPractises","crops","event","check","i","target","files","length","push","deleteModal","show","deleteId","id","deleteBestPractice","deleteBestCropPractise","refetch","success","hide","error","resp","value","upload","imgResponse","status","body","fileResponse","createBestCropPractise","reset","practicesModal","template","BestCropPracticesModule","withComponents","forRoot","declarations"],"mappings":"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","file":"views-best-crop-practices-best-crop-practices-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BestCropPracticesComponent } from './best-crop-practices.component';\nimport { AuthGuard } from '../login/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    \n    children: [\n      {\n        path: '',\n        redirectTo: 'cropprices'\n      },\n      {\n        path: 'all',\n        // canActivate: [AuthGuard],\n        component: BestCropPracticesComponent,\n        data: {\n          roles: 'KP_CALLER',\n          title: 'Best Crop Practices'\n        }\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BestCropPracticesRoutingModule {}\n","import { Component, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { DataService } from \"../../data.service\";\nimport { CropPricesColumn } from \"../../constants/columnMetadata\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\nimport { environment } from \"../../../environments/environment\";\n\n@Component({\n  templateUrl: \"best-crop-practices.component.html\",\n})\nexport class BestCropPracticesComponent {\n  rowSelection: string;\n  constructor(\n    public dataservice: DataService,\n    public router: Router,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) {\n    this.columnDefs = [...CropPricesColumn];\n    this.rowSelection = \"single\";\n  }\n  @ViewChild(\"practicesModal\") public practicesModal: ModalDirective;\n  @ViewChild(\"deleteModal\") public deleteModal: ModalDirective;\n\n  loading = true;\n  btnLoading = false;\n  disableButton = true;\n  title = \"Verification\";\n  orders: any = {};\n  columnDefs = [];\n  Crops: any = [];\n  imageUrl;\n  baseURL = environment.apiUrl;\n  practicesForm = this.fb.group({\n    crop: [\"\", Validators.required],\n    content: [\"\", Validators.required],\n    File: [\"\", Validators.required],\n    Image: [\"\", Validators.required],\n  });\n  rowData: any = [];\n  selectedRows: any = [];\n  filter: any = {};\n  file: any = null;\n  image: any = null;\n  deleteId;\n\n  ngOnInit(): void {\n    this.loading = true;\n    console.log(this.router);\n    this.getBestCropPractises();\n    this.getCrops();\n  }\n  getBestCropPractises() {\n    this.dataservice\n      .getBestCropPractises()\n      .valueChanges.subscribe((result: any) => {\n        this.rowData = result.data.bestCropPractises.data;\n      });\n  }\n  getCrops() {\n    this.dataservice.getCrops().valueChanges.subscribe((result: any) => {\n      this.Crops = result.data.crops.data;\n    });\n  }\n  // On file Select\n  onChange(event: any, check) {\n    if (check == true) {\n      this.file = [];\n      for (var i = 0; i < event.target.files.length; i++) {\n        this.file.push(event.target.files[i]);\n      }\n    } else {\n      this.image = [];\n      for (var i = 0; i < event.target.files.length; i++) {\n        this.image.push(event.target.files[i]);\n      }\n    }\n    console.log(this.file, this.image);\n  }\n  openModal(data: any) {\n    this.deleteModal.show();\n    this.deleteId = data.id;\n  }\n  deletePractice() {\n    this.dataservice\n      .deleteBestPractice(this.deleteId)\n      .subscribe((result: any) => {\n        console.log(\"response\", result);\n        if (result.data.deleteBestCropPractise) {\n          this.dataservice.getBestCropPractises().refetch();\n          this.toastr.success(\"Success!\");\n          this.deleteModal.hide();\n        } else {\n          this.toastr.error(\"Failed!\");\n        }\n      });\n  }\n  practicesSubmit() {\n    let resp = {};\n    let image = null;\n    let file = null;\n    this.btnLoading = true;\n    console.log(this.practicesForm.value);\n    this.dataservice.upload(this.image).subscribe((imgResponse: any) => {\n      if (imgResponse.status == 200) {\n        image = imgResponse.body[0]?.id;\n        console.log(imgResponse);\n        this.dataservice.upload(this.file).subscribe((fileResponse: any) => {\n          if (fileResponse.status == 200) {\n            file = fileResponse.body[0]?.id;\n            console.log(fileResponse);\n            this.dataservice\n              .createBestCropPractise(this.practicesForm.value, image, file)\n              .subscribe((result: any) => {\n                resp = result.data;\n                console.log(\"response\", result);\n                if (result.data.createBestCropPractise) {\n                  this.toastr.success(\"Success!\");\n                  this.practicesForm.reset();\n                  this.dataservice.getBestCropPractises().refetch();\n                  this.practicesModal.hide();\n                  this.btnLoading = false;\n                } else {\n                  this.toastr.error(\"Failed. Please check the fields!\");\n                  this.btnLoading = false;\n                }\n              });\n          } else {\n            this.toastr.error(\"Image failed to upload!\");\n            this.btnLoading = false;\n          }\n        });\n      } else {\n        this.toastr.error(\"Image failed to upload!\");\n        this.btnLoading = false;\n      }\n    });\n  }\n}\n","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\n      <h2>Best Crop Practices</h2>\\n      <div>\\n        <button type=\\\"button\\\" [disabled]=\\\"!disableButton\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\"\\n          (click)=\\\"practicesModal.show()\\\">\\n          Add New\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-3\\\" *ngFor=\\\"let item of rowData\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"img-container\\\">\\n              <img class=\\\"card-img-top\\\" height=\\\"200\\\" width=\\\"200\\\"\\n                src=\\\"{{baseURL}}{{item?.attributes?.cropImage?.data?.attributes?.url}}\\\" alt=\\\"Card image cap\\\" />\\n              <div class=\\\"overlay\\\">\\n                <div class=\\\"overlay-text\\\"><a target=\\\"_blank\\\"\\n                    href=\\\"{{baseURL}}{{item?.attributes?.media?.data?.attributes?.url}}\\\" style=\\\"color: white;\\\">Click\\n                    to view file</a></div>\\n              </div>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div style=\\\"display: flex; justify-content: space-between\\\">\\n                <h5 class=\\\"card-title\\\">\\n                  {{item.attributes.crop.data.attributes.Name}}\\n                </h5>\\n                <div>\\n                  <button type=\\\"button\\\" class=\\\"btn btn-outline-primary p-1\\\" (click)=\\\"openModal(item)\\\">\\n                    <img src=\\\"assets/deleteIcon.svg\\\">\\n                  </button>\\n                </div>\\n              </div>\\n              <p class=\\\"card-text\\\">\\n                {{item.attributes.content}}\\n              </p>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div bsModal #practicesModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add/Edit Practice</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"practicesModal.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"practicesForm\\\" (ngSubmit)=\\\"practicesSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"crop\\\">Crop</label>\\n            <select class=\\\"form-control\\\" id=\\\"crop\\\" required ngModel name=\\\"crop\\\" formControlName=\\\"crop\\\">\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of Crops\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"content\\\">Description</label>\\n            <textarea type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"content\\\" maxlength=\\\"150\\\" name=\\\"content\\\" rows=\\\"3\\\" formControlName=\\\"content\\\"\\n              placeholder=\\\"Enter description\\\"></textarea>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"File\\\">PDF File</label>\\n            <div><input type=\\\"file\\\" id=\\\"File\\\" accept=\\\".pdf\\\" name=\\\"File\\\" (change)=\\\"onChange($event,true)\\\"\\n              formControlName=\\\"File\\\" placeholder=\\\"Choose file\\\" /></div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"Image\\\">Preview image</label>\\n            <div>\\n              <img *ngIf=\\\"imageUrl\\\" src=\\\"{{ imageUrl }}\\\" width=\\\"100\\\" height=\\\"100\\\" style=\\\"object-fit: cover\\\" />\\n            </div>\\n            <input type=\\\"file\\\" id=\\\"Image\\\" accept=\\\".jpg,.jpeg,.JPEG,.png\\\" name=\\\"Image\\\"\\n              (change)=\\\"onChange($event,false)\\\" formControlName=\\\"Image\\\" placeholder=\\\"Choose image\\\" />\\n          </div>\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"practicesModal.hide()\\\">\\n            Close\\n          </button>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-2\\\" [disabled]=\\\"btnLoading || !practicesForm.valid\\\">\\n            <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\n            Save changes\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n    <!-- /.modal-content -->\\n  </div>\\n  <!-- /.modal-dialog -->\\n</div>\\n<div bsModal #deleteModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-body text-center\\\">\\n        Do you want to delete this record?\\n      </div>\\n      <div class=\\\"modal-footer justify-content-around\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"deleteModal.hide()\\\">\\n          No! Cancel.\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deletePractice()\\\">\\n          Yes! Delete.\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\";","import { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { BestCropPracticesComponent } from './best-crop-practices.component';\n\n// Dropdowns Component\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\n\n// Buttons Routing\nimport { BestCropPracticesRoutingModule } from './best-crop-practices-routing.module';\n\n// Angular\nimport { AgGridModule } from 'ag-grid-angular';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TabsModule,\n    ReactiveFormsModule,\n    AgGridModule.withComponents([]),\n    BestCropPracticesRoutingModule,\n    BsDropdownModule.forRoot(),\n    ModalModule.forRoot(),\n    FormsModule\n  ],\n  declarations: [\n    BestCropPracticesComponent,\n  ]\n})\nexport class BestCropPracticesModule { }\n"]}