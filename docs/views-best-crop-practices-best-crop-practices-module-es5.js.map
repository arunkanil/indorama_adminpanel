{"version":3,"sources":["webpack:///src/app/views/best-crop-practices/best-crop-practices-routing.module.ts","webpack:///src/app/views/best-crop-practices/best-crop-practices.component.ts","webpack:///src/app/views/best-crop-practices/best-crop-practices.component.html","webpack:///src/app/views/best-crop-practices/best-crop-practices.module.ts"],"names":["routes","path","children","redirectTo","component","data","roles","title","BestCropPracticesRoutingModule","imports","forChild","exports","BestCropPracticesComponent","dataservice","router","fb","toastr","loading","btnLoading","disableButton","orders","columnDefs","Crops","practicesForm","group","crop","required","content","File","Image","rowData","selectedRows","filter","file","image","rowSelection","console","log","getBestCropPractises","getCrops","valueChanges","subscribe","result","bestCropPractises","crops","event","check","i","target","files","length","push","deleteModal","show","deleteId","id","deleteBestPractice","deleteBestCropPractise","success","hide","error","resp","value","upload","imgResponse","status","body","fileResponse","createBestCropPractise","practicesModal","template","BestCropPracticesModule","withComponents","forRoot","declarations"],"mappings":"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","file":"views-best-crop-practices-best-crop-practices-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { BestCropPracticesComponent } from './best-crop-practices.component';\r\nimport { AuthGuard } from '../login/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    \r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'cropprices'\r\n      },\r\n      {\r\n        path: 'all',\r\n        // canActivate: [AuthGuard],\r\n        component: BestCropPracticesComponent,\r\n        data: {\r\n          roles: 'KP_CALLER',\r\n          title: 'Best Crop Practices'\r\n        }\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BestCropPracticesRoutingModule {}\r\n","import { Component, ViewChild } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DataService } from \"../../data.service\";\r\nimport { CropPricesColumn } from \"../../constants/columnMetadata\";\r\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\r\n\r\n@Component({\r\n  templateUrl: \"best-crop-practices.component.html\",\r\n})\r\nexport class BestCropPracticesComponent {\r\n  rowSelection: string;\r\n  constructor(\r\n    public dataservice: DataService,\r\n    public router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.columnDefs = [...CropPricesColumn];\r\n    this.rowSelection = \"single\";\r\n  }\r\n  @ViewChild(\"practicesModal\") public practicesModal: ModalDirective;\r\n  @ViewChild(\"deleteModal\") public deleteModal: ModalDirective;\r\n\r\n  loading = true;\r\n  btnLoading = false;\r\n  disableButton = true;\r\n  title = \"Verification\";\r\n  orders: any = {};\r\n  columnDefs = [];\r\n  Crops: any = [];\r\n  imageUrl;\r\n\r\n  practicesForm = this.fb.group({\r\n    crop: [\"\", Validators.required],\r\n    content: [\"\", Validators.required],\r\n    File: [\"\", Validators.required],\r\n    Image: [\"\", Validators.required],\r\n  });\r\n  rowData: any = [];\r\n  selectedRows: any = [];\r\n  filter: any = {};\r\n  file: any = null;\r\n  image: any = null;\r\n  deleteId;\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    console.log(this.router);\r\n    this.getBestCropPractises();\r\n    this.getCrops();\r\n  }\r\n  getBestCropPractises() {\r\n    this.dataservice\r\n      .getBestCropPractises()\r\n      .valueChanges.subscribe((result: any) => {\r\n        this.rowData = result.data.bestCropPractises.data;\r\n      });\r\n  }\r\n  getCrops() {\r\n    this.dataservice.getCrops().valueChanges.subscribe((result: any) => {\r\n      this.Crops = result.data.crops.data;\r\n    });\r\n  }\r\n  // On file Select\r\n  onChange(event: any, check) {\r\n    if (check == true) {\r\n      this.file = [];\r\n      for (var i = 0; i < event.target.files.length; i++) {\r\n        this.file.push(event.target.files[i]);\r\n      }\r\n    } else {\r\n      this.image = [];\r\n      for (var i = 0; i < event.target.files.length; i++) {\r\n        this.image.push(event.target.files[i]);\r\n      }\r\n    }\r\n    console.log(this.file, this.image);\r\n  }\r\n  openModal(data: any) {\r\n    this.deleteModal.show();\r\n    this.deleteId = data.id;\r\n  }\r\n  deletePractice() {\r\n    this.dataservice\r\n      .deleteBestPractice(this.deleteId)\r\n      .subscribe((result: any) => {\r\n        console.log(\"response\", result);\r\n        if (result.data.deleteBestCropPractise) {\r\n          this.dataservice\r\n            .getBestCropPractises()\r\n            .valueChanges.subscribe((result: any) => {\r\n              this.rowData = result.data.bestCropPractises.data;\r\n            });\r\n          this.toastr.success(\"Success!\");\r\n          this.deleteModal.hide();\r\n        } else {\r\n          this.toastr.error(\"Failed!\");\r\n        }\r\n      });\r\n  }\r\n  practicesSubmit() {\r\n    let resp = {};\r\n    let image = null;\r\n    let file = null;\r\n    this.btnLoading = true;\r\n    console.log(this.practicesForm.value);\r\n    this.dataservice.upload(this.image).subscribe((imgResponse: any) => {\r\n      if (imgResponse.status == 200) {\r\n        image = imgResponse.body[0]?.id;\r\n        console.log(imgResponse);\r\n        this.dataservice.upload(this.file).subscribe((fileResponse: any) => {\r\n          if (fileResponse.status == 200) {\r\n            file = fileResponse.body[0]?.id;\r\n            console.log(fileResponse);\r\n            this.dataservice\r\n              .createBestCropPractise(this.practicesForm.value, image, file)\r\n              .subscribe((result: any) => {\r\n                resp = result.data;\r\n                console.log(\"response\", result);\r\n                if (result.data.createBestCropPractise) {\r\n                  this.toastr.success(\"Success!\");\r\n                  this.dataservice\r\n                    .getBestCropPractises()\r\n                    .valueChanges.subscribe((result: any) => {\r\n                      this.rowData = result.data.bestCropPractises.data;\r\n                    });\r\n                  this.practicesModal.hide();\r\n                } else {\r\n                  this.toastr.error(\"Failed. Please check the fields!\");\r\n                  this.btnLoading = false;\r\n                }\r\n              });\r\n          } else {\r\n            this.toastr.error(\"Image failed to upload!\");\r\n            this.btnLoading = false;\r\n          }\r\n        });\r\n      } else {\r\n        this.toastr.error(\"Image failed to upload!\");\r\n        this.btnLoading = false;\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\r\\n      <h2>Best Crop Practices</h2>\\r\\n      <div>\\r\\n        <button type=\\\"button\\\" [disabled]=\\\"!disableButton\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\"\\r\\n          (click)=\\\"practicesModal.show()\\\">\\r\\n          Add New\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-3\\\" *ngFor=\\\"let item of rowData\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"img-container\\\">\\r\\n              <img class=\\\"card-img-top\\\" height=\\\"200\\\" width=\\\"200\\\"\\r\\n                src=\\\"https://indoramaapp.untanglestrategy.com{{item?.attributes?.cropImage?.data?.attributes?.url}}\\\" alt=\\\"Card image cap\\\" />\\r\\n              <div class=\\\"overlay\\\">\\r\\n                <div class=\\\"overlay-text\\\"><a target=\\\"_blank\\\"\\r\\n                    href=\\\"https://indoramaapp.untanglestrategy.com{{item?.attributes?.media?.data?.attributes?.url}}\\\" style=\\\"color: white;\\\">Click\\r\\n                    to view file</a></div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <div style=\\\"display: flex; justify-content: space-between\\\">\\r\\n                <h5 class=\\\"card-title\\\">\\r\\n                  {{item.attributes.crop.data.attributes.Name}}\\r\\n                </h5>\\r\\n                <div>\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-outline-primary p-1\\\" (click)=\\\"openModal(item)\\\">\\r\\n                    <img src=\\\"../../../assets/deleteIcon.svg\\\">\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n              <p class=\\\"card-text\\\">\\r\\n                {{item.attributes.content}}\\r\\n              </p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div bsModal #practicesModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Add/Edit Practice</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"practicesModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"practicesForm\\\" (ngSubmit)=\\\"practicesSubmit()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"crop\\\">Crop</label>\\r\\n            <select class=\\\"form-control\\\" id=\\\"crop\\\" required ngModel name=\\\"crop\\\" formControlName=\\\"crop\\\">\\r\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n              <option *ngFor=\\\"let item of Crops\\\" value=\\\"{{ item.id }}\\\">\\r\\n                {{ item.attributes.Name }}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"content\\\">Description</label>\\r\\n            <textarea type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"content\\\" maxlength=\\\"150\\\" name=\\\"content\\\" rows=\\\"3\\\" formControlName=\\\"content\\\"\\r\\n              placeholder=\\\"Enter content\\\"></textarea>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"File\\\">PDF File</label>\\r\\n            <div><input type=\\\"file\\\" id=\\\"File\\\" accept=\\\".pdf\\\" name=\\\"File\\\" (change)=\\\"onChange($event,true)\\\"\\r\\n              formControlName=\\\"File\\\" placeholder=\\\"Choose file\\\" /></div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"Image\\\">Preview image</label>\\r\\n            <div>\\r\\n              <img *ngIf=\\\"imageUrl\\\" src=\\\"{{ imageUrl }}\\\" width=\\\"100\\\" height=\\\"100\\\" style=\\\"object-fit: cover\\\" />\\r\\n            </div>\\r\\n            <input type=\\\"file\\\" id=\\\"Image\\\" accept=\\\".jpg,.jpeg,.JPEG,.png\\\" name=\\\"Image\\\"\\r\\n              (change)=\\\"onChange($event,false)\\\" formControlName=\\\"Image\\\" placeholder=\\\"Choose image\\\" />\\r\\n          </div>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"practicesModal.hide()\\\">\\r\\n            Close\\r\\n          </button>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-2\\\" [disabled]=\\\"btnLoading || !practicesForm.valid\\\">\\r\\n            <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            Save changes\\r\\n          </button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- /.modal-content -->\\r\\n  </div>\\r\\n  <!-- /.modal-dialog -->\\r\\n</div>\\r\\n<div bsModal #deleteModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body text-center\\\">\\r\\n        Do you want to delete this record?\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer justify-content-around\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"deleteModal.hide()\\\">\\r\\n          No! Cancel.\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deletePractice()\\\">\\r\\n          Yes! Delete.\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";","import { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { BestCropPracticesComponent } from './best-crop-practices.component';\r\n\r\n// Dropdowns Component\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\n// Buttons Routing\r\nimport { BestCropPracticesRoutingModule } from './best-crop-practices-routing.module';\r\n\r\n// Angular\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TabsModule,\r\n    ReactiveFormsModule,\r\n    AgGridModule.withComponents([]),\r\n    BestCropPracticesRoutingModule,\r\n    BsDropdownModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    BestCropPracticesComponent,\r\n  ]\r\n})\r\nexport class BestCropPracticesModule { }\r\n"]}