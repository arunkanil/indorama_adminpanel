{"version":3,"sources":["webpack:///src/app/views/retailers/retailers.component.html","webpack:///src/app/views/retailers/retailers.component.ts","webpack:///src/app/views/retailers/retailers-routing.module.ts","webpack:///src/app/views/retailers/retailer-detail.component.ts","webpack:///src/app/views/retailers/retailer-detail.component.html","webpack:///src/app/views/retailers/retailers.module.ts"],"names":["RetailersComponent","dataservice","router","fb","toastr","loading","btnLoading","confirmed","undefined","blocked","disableNextButton","disablePrevButton","selectedList","pageSize","from","to","count","columnDefs","rowData","Villages","LGA","Areas","States","selectedYear","Date","getFullYear","years","filter","setForm","rowSelection","console","log","getRetailers","getAreas","getLGAs","getStates","getVillages","valueChanges","subscribe","result","data","states","resp","downloadRetailers","body","status","success","message","window","open","apiUrl","path","error","commentForm","group","UserType","username","required","minLength","cannotContainSpace","email","password","Name","Gender","Age","ContactNumber","lga","village","state","controls","id","lgas","areas","villages","usersPermissionsUsers","meta","pagination","pageCount","total","length","event","target","value","params","gridApi","api","gridColumnApi","columnApi","sizeColumnsToFit","selectedRows","getSelectedRows","navigate","detailsModal","show","createRetailer","commentModal","hide","template","routes","children","redirectTo","component","roles","title","RetailersRoutingModule","imports","forChild","exports","RetailerDetailComponent","activatedRouter","baseURL","btnText","disableButton","details","dateConverter","users","Retailers","Farmers","Crops","file","agentForm","Farmer","retailer_categories","Bio","Latitude","Longitude","resultForm","itemName","price","unit","productForm","Image","getLists","getCrops","getFarmers","getTest","url","getsingleRetailer","attributes","crops","getRetailerCategories","retailerCategories","getUsers","date","check","payload","UpdateRetailer","updateUsersPermissionsUser","approveModal","flag","resultModal","soil_test_sample","ItemName","Price","Unit","deleteObj","deleteModal","myModal","UpdateRetailerProducts","updateRetailerProduct","i","files","push","upload","response","UpdateRetailerPic","addProductModal","addRetailerProducts","createRetailerProduct","deleteProduct","deleteRetailerProduct","RetailersModule","withComponents","forRoot","declarations"],"mappings":"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","file":"views-retailers-retailers-module-es5.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div\\n      class=\\\"card-header\\\"\\n      style=\\\"display: flex; justify-content: space-between\\\"\\n    >\\n      <h2>Retailers</h2>\\n      <div>\\n        <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-outline-primary\\\"\\n            data-toggle=\\\"modal\\\"\\n            (click)=\\\"downloadExcel()\\\"\\n          >\\n            Download excel\\n          </button>\\n        <button\\n        type=\\\"button\\\"\\n        class=\\\"btn btn-primary\\\"\\n        data-toggle=\\\"modal\\\"\\n        (click)=\\\"commentModal.show()\\\"\\n      >\\n        Add New Retailer\\n      </button>\\n      </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <div class=\\\"btn-group float-right mb-3\\\" dropdown>\\n            <button\\n              dropdownToggle\\n              type=\\\"button\\\"\\n              class=\\\"btn btn-primary dropdown-toggle\\\"\\n            >\\n              {{ selectedList }}<span class=\\\"caret\\\"></span>\\n            </button>\\n            <ul *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\n              <li role=\\\"menuitem\\\">\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"toggleCropPrices('All')\\\"\\n                  >All</a\\n                >\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"toggleCropPrices('Approved')\\\"\\n                  >Approved</a\\n                >\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"toggleCropPrices('Approvalpending')\\\"\\n                  >Approval pending</a\\n                >\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"toggleCropPrices('Rejected')\\\"\\n                  >Rejected</a\\n                >\\n              </li>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <ag-grid-angular\\n            #agGrid\\n            style=\\\"width: 100%; height: 65vh\\\"\\n            id=\\\"myGrid\\\"\\n            class=\\\"ag-theme-alpine\\\"\\n            [columnDefs]=\\\"columnDefs\\\"\\n            [rowData]=\\\"rowData\\\"\\n            [rowSelection]=\\\"rowSelection\\\"\\n            (gridReady)=\\\"onGridReady($event)\\\"\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\n            animateRows=\\\"true\\\"\\n          >\\n          </ag-grid-angular>\\n          <span class=\\\"float-left mt-3\\\"\\n            >{{ from }} to {{ to }} of {{ meta?.pagination?.total }}</span\\n          >\\n          <button\\n            type=\\\"button\\\"\\n            [disabled]=\\\"disableNextButton\\\"\\n            class=\\\"btn btn-primary float-right m-2\\\"\\n            (click)=\\\"loadNext()\\\"\\n          >\\n            Next\\n          </button>\\n          <span class=\\\"float-right mt-3\\\"\\n            >Page {{ meta?.pagination?.page }} of\\n            {{ meta?.pagination?.pageCount }}</span\\n          >\\n          <button\\n            type=\\\"button\\\"\\n            [disabled]=\\\"disablePrevButton\\\"\\n            class=\\\"btn btn-primary float-right m-2\\\"\\n            (click)=\\\"loadPrev()\\\"\\n          >\\n            Prev\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div\\n  bsModal\\n  #commentModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add Retailer</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"commentModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"commentForm\\\" (ngSubmit)=\\\"formSubmit()\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"Name\\\">Name</label>\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"Name\\\"\\n                  name=\\\"Name\\\"\\n                  formControlName=\\\"Name\\\"\\n                  placeholder=\\\"Enter  Name\\\"\\n                />\\n                <div\\n                  *ngIf=\\\"f.Name.touched && f.Name.invalid\\\"\\n                  class=\\\"text-danger\\\"\\n                >\\n                  <div *ngIf=\\\"f.Name.errors.required\\\">\\n                    Name is required.\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"username\\\">Username</label>\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"username\\\"\\n                  name=\\\"username\\\"\\n                  formControlName=\\\"username\\\"\\n                  placeholder=\\\"Enter username\\\"\\n                />\\n                <div\\n                  *ngIf=\\\"f.username.touched && f.username.invalid\\\"\\n                  class=\\\"text-danger\\\"\\n                >\\n                  <div *ngIf=\\\"f.username.errors.required\\\">\\n                    Username is required.\\n                  </div>\\n                  <div *ngIf=\\\"f.username.errors.minlength\\\">\\n                    Username should have minimum 3 characters.\\n                  </div>\\n                  <div *ngIf=\\\"f.username.errors.cannotContainSpace\\\">\\n                    Username cannot contain space.\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"password\\\">Password</label>\\n                <input\\n                  type=\\\"password\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"password\\\"\\n                  name=\\\"password\\\"\\n                  formControlName=\\\"password\\\"\\n                  placeholder=\\\"Enter password\\\"\\n                />\\n                <div\\n                  *ngIf=\\\"f.password.touched && f.password.invalid\\\"\\n                  class=\\\"text-danger\\\"\\n                >\\n                  <div *ngIf=\\\"f.password.errors.required\\\">\\n                    Password is required.\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"ContactNumber\\\">Contact number</label>\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"ContactNumber\\\"\\n                  name=\\\"ContactNumber\\\"\\n                  formControlName=\\\"ContactNumber\\\"\\n                  placeholder=\\\"Enter contact number\\\"\\n                />\\n                <div\\n                  *ngIf=\\\"f.ContactNumber.touched && f.ContactNumber.invalid\\\"\\n                  class=\\\"text-danger\\\"\\n                >\\n                  <div *ngIf=\\\"f.ContactNumber.errors.required\\\">\\n                    Contact number is required.\\n                  </div>\\n                </div>\\n              </div>\\n              <!-- <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\">E-mail</label>\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"email\\\"\\n                  name=\\\"email\\\"\\n                  formControlName=\\\"email\\\"\\n                  placeholder=\\\"Enter email\\\"\\n                />\\n              </div> -->\\n            </div>\\n            <div class=\\\"col\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"state\\\">State</label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"state\\\"\\n                  required\\n                  ngModel\\n                  (change)=\\\"filterLGA($event)\\\"\\n                  name=\\\"state\\\"\\n                  formControlName=\\\"state\\\"\\n                >\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\n                    {{ item.attributes.Name }}\\n                  </option>\\n                </select>\\n                <div\\n                  *ngIf=\\\"f.state.touched && f.state.invalid\\\"\\n                  class=\\\"text-danger\\\"\\n                >\\n                  <div *ngIf=\\\"f.state.errors.required\\\">\\n                    State is required.\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"lga\\\">LGA</label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"lga\\\"\\n                  required\\n                  ngModel\\n                  (change)=\\\"filterVillage($event)\\\"\\n                  name=\\\"lga\\\"\\n                  formControlName=\\\"lga\\\"\\n                >\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\n                    {{ item.attributes.Name }}\\n                  </option>\\n                </select>\\n                <div\\n                  *ngIf=\\\"f.lga.touched && f.lga.invalid\\\"\\n                  class=\\\"text-danger\\\"\\n                >\\n                  <div *ngIf=\\\"f.lga.errors.required\\\">\\n                    LGA is required.\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"village\\\">Village</label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"village\\\"\\n                  required\\n                  ngModel\\n                  name=\\\"village\\\"\\n                  formControlName=\\\"village\\\"\\n                >\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option *ngFor=\\\"let item of Villages\\\" value=\\\"{{ item.id }}\\\">\\n                    {{ item.attributes.Name }}\\n                  </option>\\n                </select>\\n                <div\\n                  *ngIf=\\\"f.village.touched && f.village.invalid\\\"\\n                  class=\\\"text-danger\\\"\\n                >\\n                  <div *ngIf=\\\"f.village.errors.required\\\">\\n                    Village is required.\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"Gender\\\">Gender</label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"Gender\\\"\\n                  required\\n                  ngModel\\n                  name=\\\"Gender\\\"\\n                  formControlName=\\\"Gender\\\"\\n                >\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option value=\\\"Male\\\">Male</option>\\n                  <option value=\\\"Female\\\">Female</option>\\n                </select>\\n                <div\\n                  *ngIf=\\\"f.Gender.touched && f.Gender.invalid\\\"\\n                  class=\\\"text-danger\\\"\\n                >\\n                  <div *ngIf=\\\"f.Gender.errors.required\\\">\\n                    Gender is required.\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"Age\\\">Age</label>\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"Age\\\"\\n                  name=\\\"Age\\\"\\n                  formControlName=\\\"Age\\\"\\n                  placeholder=\\\"Enter age\\\"\\n                />\\n                <div\\n                  *ngIf=\\\"f.Age.touched && f.Age.invalid\\\"\\n                  class=\\\"text-danger\\\"\\n                >\\n                  <div *ngIf=\\\"f.Age.errors.required\\\">\\n                    Age is required.\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"commentModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !commentForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Save changes\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n    <!-- /.modal-content -->\\n  </div>\\n  <!-- /.modal-dialog -->\\n</div>\\n<div\\n  bsModal\\n  #detailsModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">History</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"detailsModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { Component, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { DataService } from '../../data.service';\n// import { ActionRenderer } from \"../../utils/StatusRenderer\";\n\nimport { RetailersColumn } from '../../constants/columnMetadata';\nimport { filter } from 'rxjs/operators';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { UsernameValidator } from '../../utils/username.validator';\nimport { environment } from '../../../environments/environment';\n\n@Component({\n  templateUrl: 'retailers.component.html',\n})\nexport class RetailersComponent {\n  rowSelection: string;\n  constructor(\n    public dataservice: DataService,\n    public router: Router,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) {\n    this.columnDefs = [...RetailersColumn];\n    this.setForm();\n    this.rowSelection = 'single';\n  }\n  @ViewChild('commentModal') public commentModal: ModalDirective;\n  @ViewChild('detailsModal') public detailsModal: ModalDirective;\n\n  loading = true;\n  btnLoading = false;\n  confirmed = undefined;\n  blocked = undefined;\n  disableNextButton = false;\n  disablePrevButton = true;\n  selectedList = 'All';\n  meta;\n  pageSize = 20;\n  from = 1;\n  to = 20;\n  count = 1;\n  columnDefs = [];\n  commentForm;\n  // frameworkComponents = {\n  //   statusRenderer: ActionRenderer,\n  // };\n  rowData: any = [];\n\n  Villages: any = [];\n  LGA: any = [];\n  Areas: any = [];\n  States: any = [];\n\n  selectedYear: any = new Date().getFullYear();\n  years: any = [];\n  private gridApi;\n  private gridColumnApi;\n  filter: any = {};\n\n  ngOnInit(): void {\n    this.loading = true;\n    console.log(this.router);\n    this.getRetailers();\n    this.getAreas();\n    this.getLGAs();\n    this.getStates();\n    this.getVillages();\n  }\n  getStates() {\n    this.dataservice.getStates(1, 10000, '').valueChanges.subscribe((result: any) => {\n      console.log('getStates', result.data.states.data);\n      this.States = result.data.states.data;\n    });\n  }\n\n  downloadExcel() {\n    let resp = {};\n    this.btnLoading = true;\n    this.dataservice\n      .downloadRetailers()\n      .subscribe((result: any) => {\n        resp = result.body;\n        console.log(result);\n        if (result.status === 200 && result.body.status == 'Success') {\n          this.toastr.success(result.body.message);\n          this.btnLoading = false;\n          window.open(`${environment.apiUrl}${result?.body?.path}`, '_blank');\n        } else {\n          this.btnLoading = false;\n          this.toastr.error(result.body.message);\n        }\n      });\n  }\n  setForm() {\n    this.commentForm = this.fb.group({\n      UserType: ['Retailer'],\n      username: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(4),\n          UsernameValidator.cannotContainSpace,\n        ],\n      ],\n      email: ['nodata@email.com'],\n      password: ['', Validators.required],\n      Name: ['', Validators.required],\n      Gender: ['', Validators.required],\n      Age: ['', Validators.required],\n      ContactNumber: ['', Validators.required],\n      lga: ['', Validators.required],\n      village: ['', Validators.required],\n      state: [''],\n    });\n  }\n  get f() {\n    return this.commentForm.controls;\n  }\n  getLGAs(id?) {\n    this.dataservice.getLGAs(1, 10000, '', id).valueChanges.subscribe((result: any) => {\n      console.log('getLGAs', result.data.lgas.data);\n      this.LGA = result.data.lgas.data;\n    });\n  }\n  getAreas(id?) {\n    this.dataservice.getAreas(1, 10000, '', id).valueChanges.subscribe((result: any) => {\n      console.log('getAreas', result.data.areas.data);\n      this.Areas = result.data.areas.data;\n    });\n  }\n  getVillages(id?) {\n    this.dataservice.getVillages(1, 10000, '', id).valueChanges.subscribe((result: any) => {\n      console.log('getVillages', result.data.villages.data);\n      this.Villages = result.data.villages.data;\n    });\n  }\n  getRetailers() {\n    this.dataservice\n      .getRetailers(1, this.pageSize, this.confirmed, this.blocked)\n      .valueChanges.subscribe((result: any) => {\n        this.rowData = result.data.usersPermissionsUsers.data;\n        this.meta = result.data.usersPermissionsUsers.meta;\n        if (this.meta?.pagination?.pageCount <= 1) {\n          this.disablePrevButton = true;\n          this.disableNextButton = true;\n        }\n        if (this.meta?.pagination?.total < this.pageSize) {\n          this.to = this.meta?.pagination?.total;\n        }\n      });\n  }\n  loadNext() {\n    this.count++;\n    this.disablePrevButton = false;\n    this.from = this.from + this.pageSize;\n    this.to =\n      this.to + this.pageSize > this.meta?.pagination?.total\n        ? this.meta?.pagination?.total\n        : this.to + this.pageSize;\n    if (this.count === this.meta.pagination.pageCount) {\n      this.disableNextButton = true;\n    }\n    this.dataservice\n      .getRetailers(this.count, this.pageSize)\n      .valueChanges.subscribe((result: any) => {\n        this.meta = result.data.usersPermissionsUsers.meta;\n        this.rowData = result.data.usersPermissionsUsers.data;\n      });\n  }\n  loadPrev() {\n    this.count--;\n    if (this.count < this.meta.pagination.pageCount) {\n      this.disableNextButton = false;\n    }\n    if (this.count === 1) {\n      this.disablePrevButton = true;\n    }\n    this.from = this.from - this.pageSize;\n    this.to = this.to - this.rowData.length;\n    this.dataservice\n      .getRetailers(this.count, this.pageSize)\n      .valueChanges.subscribe((result: any) => {\n        this.meta = result.data.usersPermissionsUsers.meta;\n        this.rowData = result.data.usersPermissionsUsers.data;\n      });\n  }\n  filterLGA(event) {\n    this.getLGAs(event.target.value);\n  }\n  filterVillage(event) {\n    this.getVillages(event.target.value);\n  }\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.gridApi.sizeColumnsToFit();\n  }\n  onRowClicked(event: any) {\n    console.log('row', event.data);\n    // this.router.navigate(\n    //   [\"/cropprices/kp_customer_details\", event.data.id, this.router.url],\n    //   {\n    //     state: { data: event.data },\n    //   }\n    // );\n  }\n  toggleCropPrices(data) {\n    switch (data) {\n      case 'Rejected':\n        this.selectedList = 'Rejected';\n        this.blocked = true;\n        this.confirmed = undefined;\n        this.getRetailers();\n        break;\n      case 'Approvalpending':\n        this.selectedList = 'Pending';\n        this.blocked = false;\n        this.confirmed = false;\n        this.getRetailers();\n        break;\n      case 'Approved':\n        this.selectedList = 'Approved';\n        this.blocked = false;\n        this.confirmed = true;\n        this.getRetailers();\n        break;\n      case 'All':\n        this.selectedList = 'All';\n        this.blocked = undefined;\n        this.confirmed = undefined;\n        this.getRetailers();\n        break;\n    }\n    // if (data == 'Approvalpending') {\n    //   this.selectedList = \"Approval Pending\";\n    //   this.publicationState = \"PREVIEW\";\n    //   this.toApprove = null;\n    //   this.getCropPrices();\n    // }\n    // else if{\n\n    // } else {\n    //   this.selectedList = \"All\";\n    //   this.publicationState = \"PREVIEW\";\n    //   this.toApprove = undefined;\n    //   this.getCropPrices();\n    // }\n  }\n  onSelectionChanged(event: any) {\n    let selectedRows = this.gridApi.getSelectedRows();\n    console.log(selectedRows, event);\n    this.router.navigate(['/retailers/retailer_details', selectedRows[0].id], {\n      state: { data: selectedRows },\n    });\n  }\n  openModal(data: any) {\n    this.detailsModal.show();\n  }\n  formSubmit() {\n    console.log(this.commentForm.value);\n    this.btnLoading = true;\n    let resp = {};\n    this.dataservice.createRetailer(this.commentForm.value).subscribe(\n      (result: any) => {\n        resp = result;\n        console.log('response', result);\n        if (result) {\n          this.toastr.success('Retailer added successfully!');\n          this.btnLoading = false;\n          this.commentModal.hide();\n          this.setForm();\n          this.getRetailers();\n        } else {\n          this.toastr.error('Failed. Please check the fields!');\n          this.btnLoading = false;\n        }\n      },\n      (error) => {\n        this.btnLoading = false;\n      }\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RetailersComponent } from './retailers.component';\r\nimport { AuthGuard } from '../login/auth.guard';\r\nimport { RetailerDetailComponent } from './retailer-detail.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'retailers'\r\n      },\r\n      {\r\n        path: 'all',\r\n        // canActivate: [AuthGuard],\r\n        component: RetailersComponent,\r\n        data: {\r\n          roles: 'KP_CALLER',\r\n          title: 'Retailers'\r\n        }\r\n      },\r\n      {\r\n        path: 'retailer_details/:id',\r\n        // canActivate: [AuthGuard],\r\n        component: RetailerDetailComponent,\r\n        data: {\r\n          roles: 'MANAGER',\r\n          title: 'Retailer Details'\r\n        }\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RetailersRoutingModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { ToastrService } from 'ngx-toastr';\nimport { DataService } from '../../data.service';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { dateConverter } from '../../constants/columnMetadata';\nimport { environment } from '../../../environments/environment';\n\n@Component({\n  templateUrl: 'retailer-detail.component.html',\n})\nexport class RetailerDetailComponent implements OnInit {\n  constructor(\n    public dataservice: DataService,\n    private activatedRouter: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) {}\n  @ViewChild('myModal') public myModal: ModalDirective;\n  @ViewChild('resultModal') public resultModal: ModalDirective;\n  @ViewChild('deleteModal') public deleteModal: ModalDirective;\n  @ViewChild('addProductModal') public addProductModal: ModalDirective;\n  @ViewChild('approveModal') public approveModal: ModalDirective;\n\n  id: any;\n  baseURL = environment.apiUrl;\n  loading = true;\n  btnText = 'Approve / Reject';\n  disableButton = true;\n  details: any = [];\n  btnLoading = false;\n  dateConverter = dateConverter;\n  users: any = [];\n  Villages: any = [];\n  LGA: any = [];\n  Areas: any = [];\n  Retailers: any = [];\n  Farmers: any = [];\n  States: any = [];\n  Crops: any = [];\n  file: any = null;\n  flag;\n  deleteObj;\n  agentForm = this.fb.group({\n    ContactNumber: ['', Validators.required],\n    // username: [\"\", Validators.required],\n    Name: ['', Validators.required],\n    // email: [\"\", Validators.required],\n    password: [''],\n    Farmer: ['', Validators.required],\n    retailer_categories: ['', Validators.required],\n    Bio: ['', Validators.required],\n    state: ['', Validators.required],\n    village: ['', Validators.required],\n    lga: ['', Validators.required],\n    Latitude: ['', Validators.required],\n    Longitude: ['', Validators.required],\n  });\n  resultForm = this.fb.group({\n    id: [''],\n    itemName: ['', Validators.required],\n    price: ['', Validators.required],\n    unit: ['', Validators.required],\n  });\n  productForm = this.fb.group({\n    Image: ['', Validators.required],\n    itemName: ['', Validators.required],\n    price: ['', Validators.required],\n    unit: ['', Validators.required],\n  });\n  ngOnInit(): void {\n    this.getLists();\n    this.getAreas();\n    this.getCrops();\n    this.getLGAs();\n    this.getStates();\n    this.getVillages();\n    this.getFarmers();\n    this.getRetailers();\n    this.activatedRouter.params.subscribe((params) => {\n      this.id = params['id'];\n    });\n    this.getTest();\n  }\n  imgUrl(url) {\n    return `${environment.apiUrl}` + url;\n  }\n  getTest() {\n    this.dataservice\n      .getsingleRetailer(this.id)\n      .valueChanges.subscribe((result: any) => {\n        console.log(\n          'getsingleRetailer',\n          result.data.usersPermissionsUsers.data[0]\n        );\n        this.details = result.data.usersPermissionsUsers.data[0];\n        this.agentForm = this.fb.group({\n          ContactNumber: [\n            this.details.attributes?.ContactNumber,\n            Validators.required,\n          ],\n          Name: [this.details.attributes?.Name, Validators.required],\n          // email: [this.details.attributes?.email, Validators.required],\n          Bio: [this.details.attributes?.Bio, Validators.required],\n          Latitude: [this.details.attributes?.Latitude, Validators.required],\n          Longitude: [this.details.attributes?.Longitude, Validators.required],\n          state: [\n            this.details?.attributes?.lga?.data?.attributes?.state?.data?.id,\n            Validators.required,\n          ],\n          password: [''],\n          lga: [this.details?.attributes?.lga?.data?.id, Validators.required],\n          village: [\n            this.details?.attributes?.village?.data?.id,\n            Validators.required,\n          ],\n          retailer_categories: [\n            this.details?.attributes?.retailer_categories?.data[0]?.id,\n            Validators.required,\n          ],\n        });\n        if (this.details?.attributes?.blocked === true) {\n          this.disableButton = true;\n          this.btnText = 'Rejected';\n        } else if (this.details?.attributes?.confirmed === true) {\n          {\n            this.disableButton = true;\n            this.btnText = 'Approved';\n          }\n        } else if (this.details?.attributes?.confirmed === false) {\n          return (this.disableButton = false);\n        }\n        this.loading = false;\n      });\n  }\n  getCrops() {\n    this.dataservice.getCrops(1, 10000, '').valueChanges.subscribe((result: any) => {\n      console.log('getCrops', result.data.crops.data);\n      this.Crops = result.data.crops.data;\n    });\n  }\n  getStates() {\n    this.dataservice.getStates(1, 10000, '').valueChanges.subscribe((result: any) => {\n      console.log('getStates', result.data.states.data);\n      this.States = result.data.states.data;\n    });\n  }\n  getLGAs(id?) {\n    this.dataservice.getLGAs(1, 10000, '', id).valueChanges.subscribe((result: any) => {\n      console.log('getLGAs', result.data.lgas.data);\n      this.LGA = result.data.lgas.data;\n    });\n  }\n  getAreas(id?) {\n    this.dataservice.getAreas(1, 10000, '', id).valueChanges.subscribe((result: any) => {\n      console.log('getAreas', result.data.areas.data);\n      this.Areas = result.data.areas.data;\n    });\n  }\n  getRetailers() {\n    this.dataservice\n      .getRetailerCategories()\n      .valueChanges.subscribe((result: any) => {\n        console.log('getRetailers', result.data.retailerCategories.data);\n        this.Retailers = result.data.retailerCategories.data;\n      });\n  }\n  getFarmers() {\n    this.dataservice\n      .getUsers(undefined, undefined, 'Farmer')\n      .valueChanges.subscribe((result: any) => {\n        console.log('getFarmers', result.data.usersPermissionsUsers.data);\n        this.Farmers = result.data.usersPermissionsUsers.data;\n      });\n  }\n  getVillages(id?) {\n    this.dataservice.getVillages(1, 10000, '', id).valueChanges.subscribe((result: any) => {\n      console.log('getVillages', result.data.villages.data);\n      this.Villages = result.data.villages.data;\n    });\n  }\n  dateConvertor(date) {\n    return new Date(date);\n  }\n  getLists() {\n    this.loading = true;\n  }\n  approveOrReject(check) {\n    let payload = {};\n    if (check) {\n      payload = {\n        confirmed: true,\n        blocked: false,\n      };\n    } else {\n      payload = {\n        confirmed: false,\n        blocked: true,\n      };\n    }\n    this.dataservice.UpdateRetailer(payload, this.id).subscribe(\n      (result: any) => {\n        console.log('response', result);\n        if (result.data.updateUsersPermissionsUser) {\n          this.toastr.success('Updated successfully!');\n          this.btnLoading = false;\n          this.approveModal.hide();\n          this.getTest();\n        } else {\n          this.toastr.error('Something went wrong!');\n          this.btnLoading = false;\n        }\n      },\n      (error) => {\n        this.btnLoading = false;\n      }\n    );\n    // let published = null;\n    // if (!check) published = new Date();\n    // this.dataservice\n    //   .UpdateCropPrice(\n    //     undefined,\n    //     this.selectedRows[0].id,\n    //     undefined,\n    //     check,\n    //     published\n    //   )\n    //   .subscribe(\n    //     (result: any) => {\n    //       console.log(\"response\", result);\n    //       if (result.data.updateCropPrice) {\n    //         this.toastr.success(\"Success!\");\n    //         this.getCropPrices();\n    //         this.file = null;\n    //         this.approveModal.hide();\n    //         this.gridApi.deselectAll();\n    //         this.btnLoading = false;\n    //       }\n    //     },\n    //     (error) => {\n    //       this.toastr.error(\"Failed. Please check the fields!\");\n    //       this.btnLoading = false;\n    //     }\n    //   );\n  }\n  openApproveModal() {\n    this.approveModal.show();\n  }\n  openModal(data: any, flag) {\n    this.resultModal.show();\n    console.log(data, flag);\n    this.flag = flag;\n    this.resultForm = this.fb.group({\n      id: [data?.id],\n      soil_test_sample: [data?.id],\n      itemName: [data?.attributes?.ItemName, Validators.required],\n      price: [data?.attributes?.Price, Validators.required],\n      unit: [data?.attributes?.Unit, Validators.required],\n    });\n  }\n  openDeleteModal(data) {\n    this.deleteObj = data;\n    this.deleteModal.show();\n  }\n  FormSubmit() {\n    let resp = {};\n    this.btnLoading = true;\n    console.log(this.agentForm.value);\n    this.dataservice.UpdateRetailer(this.agentForm.value, this.id).subscribe(\n      (result: any) => {\n        resp = result.data;\n        console.log('response', result);\n        if (result.data.updateUsersPermissionsUser) {\n          this.toastr.success('Retailer updated successfully!');\n          this.btnLoading = false;\n          this.myModal.hide();\n          this.getTest();\n        } else {\n          this.toastr.error('Failed. Please check the fields!');\n          this.btnLoading = false;\n        }\n      },\n      (error) => {\n        this.btnLoading = false;\n      }\n    );\n  }\n  ResultSubmit() {\n    console.log('edit', this.resultForm.value);\n    this.btnLoading = true;\n    let resp = {};\n    console.log(this.resultForm.value);\n    this.dataservice\n      .UpdateRetailerProducts(\n        this.resultForm.value,\n        this.details?.attributes?.retailer_categories?.data[0]?.id,\n        this.id\n      )\n      .subscribe(\n        (result: any) => {\n          resp = result.data;\n          console.log('response', result);\n          if (result.data.updateRetailerProduct) {\n            this.toastr.success('Product updated successfully!');\n            this.btnLoading = false;\n            this.resultModal.hide();\n            this.getTest();\n          } else {\n            this.toastr.error('Failed. Please check the fields!');\n            this.btnLoading = false;\n          }\n        },\n        (error) => {\n          this.btnLoading = false;\n        }\n      );\n  }\n  onChange(event: any) {\n    this.file = [];\n    for (let i = 0; i < event.target.files.length; i++) {\n      this.file.push(event.target.files[i]);\n    }\n    console.log(this.file);\n  }\n  filterLGA(event) {\n    this.getLGAs(event.target.value);\n  }\n  filterVillage(event) {\n    this.getVillages(event.target.value);\n  }\n  uploadProfPic() {\n    let resp = {};\n    this.dataservice.upload(this.file).subscribe((response: any) => {\n      if (response.status == 200) {\n        console.log(response);\n        this.dataservice\n          .UpdateRetailerPic(this.id, response.body[0]?.id)\n          .subscribe((result: any) => {\n            resp = result.data;\n            console.log('response', result);\n            if (result.data.updateUsersPermissionsUser) {\n              this.toastr.success('Success!');\n              this.file = null;\n              this.getTest();\n              this.addProductModal.hide();\n            } else {\n              this.toastr.error('Failed!');\n            }\n          });\n      } else {\n        this.toastr.error('Image failed to upload!');\n      }\n    });\n  }\n  ProductSubmit() {\n    let resp = {};\n    this.btnLoading = true;\n    this.dataservice.upload(this.file).subscribe((response: any) => {\n      if (response.status == 200) {\n        console.log(response);\n        this.dataservice\n          .addRetailerProducts(\n            this.productForm.value,\n            this.details?.attributes?.retailer_categories?.data[0]?.id,\n            this.id,\n            response.body[0]?.id\n          )\n          .subscribe(\n            (result: any) => {\n              resp = result.data;\n              console.log('response', result);\n              if (result.data.createRetailerProduct) {\n                this.toastr.success('Success!');\n                this.btnLoading = false;\n                this.file = null;\n                this.getTest();\n                this.addProductModal.hide();\n              } else {\n                this.toastr.error('Failed!');\n                this.btnLoading = false;\n              }\n            },\n            (error) => {\n              this.btnLoading = false;\n            }\n          );\n      } else {\n        this.toastr.error('Image failed to upload!');\n        this.btnLoading = false;\n      }\n    });\n  }\n  deleteProduct() {\n    this.dataservice\n      .deleteProduct(this.deleteObj.id)\n      .subscribe((result: any) => {\n        console.log('response', result);\n        if (result.data.deleteRetailerProduct) {\n          this.toastr.success('Success!');\n          this.deleteModal.hide();\n          this.getTest();\n        } else {\n          this.toastr.error('Failed!');\n        }\n      });\n  }\n}\n","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div\\r\\n    bsModal\\r\\n    #deleteModal=\\\"bs-modal\\\"\\r\\n    class=\\\"modal fade\\\"\\r\\n    tabindex=\\\"-1\\\"\\r\\n    role=\\\"dialog\\\"\\r\\n    aria-labelledby=\\\"myModalLabel\\\"\\r\\n    aria-hidden=\\\"true\\\"\\r\\n  >\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-body text-center\\\">\\r\\n          Do you want to delete this record?\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer justify-content-around\\\">\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-secondary\\\"\\r\\n            (click)=\\\"deleteModal.hide()\\\"\\r\\n          >\\r\\n            No! Cancel.\\r\\n          </button>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-primary\\\"\\r\\n            (click)=\\\"deleteProduct()\\\"\\r\\n          >\\r\\n            Yes! Delete.\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div\\r\\n    bsModal\\r\\n    #approveModal=\\\"bs-modal\\\"\\r\\n    class=\\\"modal fade\\\"\\r\\n    tabindex=\\\"-1\\\"\\r\\n    role=\\\"dialog\\\"\\r\\n    aria-labelledby=\\\"myModalLabel\\\"\\r\\n    aria-hidden=\\\"true\\\"\\r\\n  >\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-body text-center\\\">\\r\\n          Do you want to approve this retailer?\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer justify-content-around\\\">\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-secondary\\\"\\r\\n            (click)=\\\"approveOrReject(false)\\\"\\r\\n          >\\r\\n            No! Reject.\\r\\n          </button>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-primary\\\"\\r\\n            (click)=\\\"approveOrReject(true)\\\"\\r\\n          >\\r\\n            Yes! Approve.\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div\\r\\n      class=\\\"card-header\\\"\\r\\n      style=\\\"display: flex; justify-content: space-between\\\"\\r\\n    >\\r\\n      <h2>Retailer Details</h2>\\r\\n      <span>\\r\\n        <div>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-outline-primary\\\"\\r\\n            data-toggle=\\\"modal\\\"\\r\\n            (click)=\\\"addProductModal.show()\\\"\\r\\n          >\\r\\n            Add new product\\r\\n          </button>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-primary\\\"\\r\\n            data-toggle=\\\"modal\\\"\\r\\n            (click)=\\\"myModal.show()\\\"\\r\\n          >\\r\\n            Edit\\r\\n          </button>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-warning\\\"\\r\\n            data-toggle=\\\"modal\\\"\\r\\n            (click)=\\\"openApproveModal()\\\"\\r\\n          >\\r\\n            {{ btnText }}\\r\\n          </button>\\r\\n          <!-- <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn btn-danger\\\"\\r\\n          data-toggle=\\\"modal\\\"\\r\\n          (click)=\\\"deleteModal.show()\\\"\\r\\n        >\\r\\n          Delete\\r\\n        </button> -->\\r\\n        </div>\\r\\n      </span>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div style=\\\"display: flex; justify-content: space-between\\\">\\r\\n              <h4>Basic details</h4>\\r\\n            </div>\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td>ID</td>\\r\\n                  <td>{{ details?.id }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Username</td>\\r\\n                  <td>{{ details?.attributes?.username }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Profile pic</td>\\r\\n                  <td>\\r\\n                    <a\\r\\n                      href=\\\"{{ baseURL }}{{\\r\\n                        details?.attributes?.prof_pic?.data?.attributes?.url\\r\\n                      }}\\\"\\r\\n                      target=\\\"_blank\\\"\\r\\n                      ><img\\r\\n                        class=\\\"card-img-top\\\"\\r\\n                        style=\\\"width: 150px; height: 150px\\\"\\r\\n                        src=\\\"{{ baseURL }}{{\\r\\n                          details?.attributes?.prof_pic?.data?.attributes?.url\\r\\n                        }}\\\"\\r\\n                        alt=\\\"Card image cap\\\"\\r\\n                    /></a>\\r\\n                    <div style=\\\"display: flex; justify-content: space-between\\\">\\r\\n                      <input\\r\\n                        type=\\\"file\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"prof_pic\\\"\\r\\n                        accept=\\\".jpg,.jpeg,.JPEG,.png\\\"\\r\\n                        name=\\\"prof_pic\\\"\\r\\n                        (change)=\\\"onChange($event)\\\"\\r\\n                        placeholder=\\\"Choose image\\\"\\r\\n                      />\\r\\n                      <button\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"btn btn-outline-primary\\\"\\r\\n                        data-toggle=\\\"modal\\\"\\r\\n                        (click)=\\\"uploadProfPic()\\\"\\r\\n                      >\\r\\n                        Upload\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Name</td>\\r\\n                  <td>\\r\\n                    {{ details?.attributes?.Name }}\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Contact number</td>\\r\\n                  <td>{{ details?.attributes?.ContactNumber }}</td>\\r\\n                </tr>\\r\\n                <!-- <tr>\\r\\n                  <td>Email</td>\\r\\n                  <td>\\r\\n                    {{ details?.attributes?.email }}\\r\\n                  </td>\\r\\n                </tr> -->\\r\\n                <tr>\\r\\n                  <td>Village</td>\\r\\n                  <td>\\r\\n                    {{ details?.attributes?.village?.data?.attributes?.Name }}\\r\\n                  </td>\\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n                  <td>LGA</td>\\r\\n                  <td>{{ details?.attributes?.lga?.data?.attributes.Name }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>State</td>\\r\\n                  <td>\\r\\n                    {{\\r\\n                      details?.attributes?.lga?.data?.attributes?.state?.data\\r\\n                        ?.attributes?.Name\\r\\n                    }}\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Retailer Category</td>\\r\\n                  <td>\\r\\n                    {{\\r\\n                      details?.attributes?.retailer_categories?.data[0]\\r\\n                        ?.attributes?.CategoryName\\r\\n                    }}\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Bio</td>\\r\\n                  <td style=\\\"width: 60%\\\">{{ details?.attributes?.Bio }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Location</td>\\r\\n                  <td><a\\r\\n                    href=\\\"https://www.google.com/maps/search/?api=1&query={{\\r\\n                      details.attributes?.Latitude}}%2C{{ details.attributes?.Longitude }}\\\"\\r\\n                    target=\\\"_blank\\\"\\r\\n                    >Click here to view location</a\\r\\n                  ></td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Created at</td>\\r\\n                  <td>{{ dateConvertor(details?.attributes?.createdAt) }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Last updated</td>\\r\\n                  <td>{{ dateConvertor(details?.attributes?.updatedAt) }}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\">\\r\\n          <h4>Products</h4>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div\\r\\n              class=\\\"col-4\\\"\\r\\n              *ngFor=\\\"let item of details?.attributes?.retailer_products?.data\\\"\\r\\n            >\\r\\n              <div class=\\\"card\\\">\\r\\n                <a\\r\\n                  href=\\\"{{\\r\\n                    imgUrl(item?.attributes?.Images?.data[0]?.attributes?.url)\\r\\n                  }}\\\"\\r\\n                  target=\\\"_blank\\\"\\r\\n                >\\r\\n                  <img\\r\\n                    class=\\\"card-img-top\\\"\\r\\n                    height=\\\"100\\\"\\r\\n                    width=\\\"200\\\"\\r\\n                    src=\\\"{{\\r\\n                      imgUrl(item?.attributes?.Images?.data[0]?.attributes?.url)\\r\\n                    }}\\\"\\r\\n                    alt=\\\"Card image cap\\\"\\r\\n                  />\\r\\n                </a>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                  <div style=\\\"display: flex; justify-content: space-between\\\">\\r\\n                    <h5 class=\\\"card-title\\\">\\r\\n                      Item : {{ item?.attributes?.ItemName }}\\r\\n                    </h5>\\r\\n                    <!-- <button\\r\\n                      type=\\\"button\\\"\\r\\n                      *ngIf=\\\"item?.attributes?.soil_test_results?.data[0]\\\"\\r\\n                      class=\\\"btn btn-primary\\\"\\r\\n                      data-toggle=\\\"modal\\\"\\r\\n                      (click)=\\\"openModal(item, 'edit')\\\"\\r\\n                    >\\r\\n                      Edit results\\r\\n                    </button>\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      *ngIf=\\\"!item?.attributes?.soil_test_results?.data[0]\\\"\\r\\n                      class=\\\"btn btn-primary\\\"\\r\\n                      data-toggle=\\\"modal\\\"\\r\\n                      (click)=\\\"openModal(item, 'add')\\\"\\r\\n                    >\\r\\n                      Add results\\r\\n                    </button> -->\\r\\n                  </div>\\r\\n                  <p class=\\\"card-text\\\">\\r\\n                    Price :\\r\\n                    {{ item?.attributes?.Price }} per\\r\\n                    {{ item?.attributes?.Unit }}\\r\\n                  </p>\\r\\n                  <!-- <p class=\\\"card-text\\\">\\r\\n                    Created on :\\r\\n                    {{ dateConvertor(item?.attributes?.createdAt) }}\\r\\n                  </p>\\r\\n                  <p class=\\\"card-text\\\">\\r\\n                    Added by :\\r\\n                    {{\\r\\n                      item?.attributes?.SampleAddedBy?.data?.attributes?.Name\\r\\n                    }}\\r\\n                  </p> -->\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    data-toggle=\\\"modal\\\"\\r\\n                    (click)=\\\"openModal(item, 'edit')\\\"\\r\\n                  >\\r\\n                    Edit\\r\\n                  </button>\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    class=\\\"btn btn-danger\\\"\\r\\n                    data-toggle=\\\"modal\\\"\\r\\n                    (click)=\\\"openDeleteModal(item)\\\"\\r\\n                  >\\r\\n                    Delete\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div\\r\\n        bsModal\\r\\n        #myModal=\\\"bs-modal\\\"\\r\\n        class=\\\"modal fade\\\"\\r\\n        tabindex=\\\"-1\\\"\\r\\n        role=\\\"dialog\\\"\\r\\n        aria-labelledby=\\\"myModalLabel\\\"\\r\\n        aria-hidden=\\\"true\\\"\\r\\n      >\\r\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n          <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <h4 class=\\\"modal-title\\\">Edit details</h4>\\r\\n              <button\\r\\n                type=\\\"button\\\"\\r\\n                class=\\\"close\\\"\\r\\n                (click)=\\\"myModal.hide()\\\"\\r\\n                aria-label=\\\"Close\\\"\\r\\n              >\\r\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n              </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n              <form [formGroup]=\\\"agentForm\\\" (ngSubmit)=\\\"FormSubmit()\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"Name\\\">Name</label>\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"Name\\\"\\r\\n                        name=\\\"Name\\\"\\r\\n                        formControlName=\\\"Name\\\"\\r\\n                        placeholder=\\\"Enter Name\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"market\\\">Contact Number</label>\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"ContactNumber\\\"\\r\\n                        name=\\\"ContactNumber\\\"\\r\\n                        formControlName=\\\"ContactNumber\\\"\\r\\n                        placeholder=\\\"Enter contact number\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                    <!-- <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"email\\\">email</label>\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"email\\\"\\r\\n                        name=\\\"email\\\"\\r\\n                        formControlName=\\\"email\\\"\\r\\n                        placeholder=\\\"Enter email\\\"\\r\\n                      />\\r\\n                    </div> -->\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"retailer_categories\\\">Retailer category</label>\\r\\n                      <select\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"retailer_categories\\\"\\r\\n                        required\\r\\n                        ngModel\\r\\n                        name=\\\"retailer_categories\\\"\\r\\n                        formControlName=\\\"retailer_categories\\\"\\r\\n                      >\\r\\n                        <option value=\\\"\\\" disabled selected hidden>\\r\\n                          Choose...\\r\\n                        </option>\\r\\n                        <option\\r\\n                          *ngFor=\\\"let item of Retailers\\\"\\r\\n                          value=\\\"{{ item.id }}\\\"\\r\\n                        >\\r\\n                          {{ item.attributes.CategoryName }}\\r\\n                        </option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"Bio\\\">Bio</label>\\r\\n                      <textarea\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"Bio\\\"\\r\\n                        name=\\\"Bio\\\"\\r\\n                        formControlName=\\\"Bio\\\"\\r\\n                        placeholder=\\\"Enter Bio\\\"\\r\\n                      ></textarea>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"password\\\">Password</label>\\r\\n                      <input\\r\\n                        type=\\\"password\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"password\\\"\\r\\n                        name=\\\"password\\\"\\r\\n                        formControlName=\\\"password\\\"\\r\\n                        placeholder=\\\"Enter password\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"state\\\">State</label>\\r\\n                      <select\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"state\\\"\\r\\n                        (change)=\\\"filterLGA($event)\\\"\\r\\n                        required\\r\\n                        ngModel\\r\\n                        name=\\\"state\\\"\\r\\n                        formControlName=\\\"state\\\"\\r\\n                      >\\r\\n                        <option value=\\\"\\\" disabled selected hidden>\\r\\n                          Choose...\\r\\n                        </option>\\r\\n                        <option\\r\\n                          *ngFor=\\\"let item of States\\\"\\r\\n                          value=\\\"{{ item.id }}\\\"\\r\\n                        >\\r\\n                          {{ item.attributes.Name }}\\r\\n                        </option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"lga\\\">LGA</label>\\r\\n                      <select\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"lga\\\"\\r\\n                        (change)=\\\"filterVillage($event)\\\"\\r\\n                        required\\r\\n                        ngModel\\r\\n                        name=\\\"lga\\\"\\r\\n                        formControlName=\\\"lga\\\"\\r\\n                      >\\r\\n                        <option value=\\\"\\\" disabled selected hidden>\\r\\n                          Choose...\\r\\n                        </option>\\r\\n                        <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\r\\n                          {{ item.attributes.Name }}\\r\\n                        </option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"village\\\">Village</label>\\r\\n                      <select\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"village\\\"\\r\\n                        required\\r\\n                        ngModel\\r\\n                        name=\\\"village\\\"\\r\\n                        formControlName=\\\"village\\\"\\r\\n                      >\\r\\n                        <option value=\\\"\\\" disabled selected hidden>\\r\\n                          Choose...\\r\\n                        </option>\\r\\n                        <option\\r\\n                          *ngFor=\\\"let item of Villages\\\"\\r\\n                          value=\\\"{{ item.id }}\\\"\\r\\n                        >\\r\\n                          {{ item.attributes.Name }}\\r\\n                        </option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"Latitude\\\">Latitude</label>\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"Latitude\\\"\\r\\n                        name=\\\"Latitude\\\"\\r\\n                        formControlName=\\\"Latitude\\\"\\r\\n                        placeholder=\\\"Enter Latitude\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"Longitude\\\">Longitude</label>\\r\\n                      <input\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"Longitude\\\"\\r\\n                        required\\r\\n                        ngModel\\r\\n                        name=\\\"Longitude\\\"\\r\\n                        formControlName=\\\"Longitude\\\"\\r\\n                        placeholder=\\\"Enter Longitude\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      class=\\\"btn btn-secondary\\\"\\r\\n                      (click)=\\\"myModal.hide()\\\"\\r\\n                    >\\r\\n                      Close\\r\\n                    </button>\\r\\n                    <button\\r\\n                      type=\\\"submit\\\"\\r\\n                      class=\\\"btn btn-primary ml-2\\\"\\r\\n                      [disabled]=\\\"btnLoading || !agentForm.valid\\\"\\r\\n                    >\\r\\n                      <span\\r\\n                        *ngIf=\\\"btnLoading\\\"\\r\\n                        class=\\\"spinner-border spinner-border-sm\\\"\\r\\n                        role=\\\"status\\\"\\r\\n                        aria-hidden=\\\"true\\\"\\r\\n                      ></span>\\r\\n                      Save changes\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div\\r\\n        bsModal\\r\\n        #resultModal=\\\"bs-modal\\\"\\r\\n        class=\\\"modal fade\\\"\\r\\n        tabindex=\\\"-1\\\"\\r\\n        role=\\\"dialog\\\"\\r\\n        aria-labelledby=\\\"resultModalLabel\\\"\\r\\n        aria-hidden=\\\"true\\\"\\r\\n      >\\r\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n          <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <h4 class=\\\"modal-title\\\">Edit product</h4>\\r\\n              <button\\r\\n                type=\\\"button\\\"\\r\\n                class=\\\"close\\\"\\r\\n                (click)=\\\"resultModal.hide()\\\"\\r\\n                aria-label=\\\"Close\\\"\\r\\n              >\\r\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n              </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n              <form [formGroup]=\\\"resultForm\\\" (ngSubmit)=\\\"ResultSubmit()\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"id\\\">ID</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"soil_test_sample\\\"\\r\\n                    disabled=\\\"true\\\"\\r\\n                    name=\\\"id\\\"\\r\\n                    formControlName=\\\"id\\\"\\r\\n                  />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"itemName\\\">Item name</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"itemName\\\"\\r\\n                    name=\\\"itemName\\\"\\r\\n                    formControlName=\\\"itemName\\\"\\r\\n                  />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"price\\\">Price</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"price\\\"\\r\\n                    name=\\\"price\\\"\\r\\n                    formControlName=\\\"price\\\"\\r\\n                    placeholder=\\\"Enter value\\\"\\r\\n                  />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"unit\\\">Unit</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"unit\\\"\\r\\n                    name=\\\"unit\\\"\\r\\n                    formControlName=\\\"unit\\\"\\r\\n                    placeholder=\\\"Enter value\\\"\\r\\n                  />\\r\\n                </div>\\r\\n                <button\\r\\n                  type=\\\"button\\\"\\r\\n                  class=\\\"btn btn-secondary\\\"\\r\\n                  (click)=\\\"resultModal.hide()\\\"\\r\\n                >\\r\\n                  Close\\r\\n                </button>\\r\\n                <button\\r\\n                  type=\\\"submit\\\"\\r\\n                  class=\\\"btn btn-primary ml-2\\\"\\r\\n                  [disabled]=\\\"btnLoading\\\"\\r\\n                >\\r\\n                  <span\\r\\n                    *ngIf=\\\"btnLoading\\\"\\r\\n                    class=\\\"spinner-border spinner-border-sm\\\"\\r\\n                    role=\\\"status\\\"\\r\\n                    aria-hidden=\\\"true\\\"\\r\\n                  ></span>\\r\\n                  Save changes\\r\\n                </button>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div\\r\\n        bsModal\\r\\n        #addProductModal=\\\"bs-modal\\\"\\r\\n        class=\\\"modal fade\\\"\\r\\n        tabindex=\\\"-1\\\"\\r\\n        role=\\\"dialog\\\"\\r\\n        aria-labelledby=\\\"productModalLabel\\\"\\r\\n        aria-hidden=\\\"true\\\"\\r\\n      >\\r\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n          <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <h4 class=\\\"modal-title\\\">Add product</h4>\\r\\n              <button\\r\\n                type=\\\"button\\\"\\r\\n                class=\\\"close\\\"\\r\\n                (click)=\\\"addProductModal.hide()\\\"\\r\\n                aria-label=\\\"Close\\\"\\r\\n              >\\r\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n              </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n              <form [formGroup]=\\\"productForm\\\" (ngSubmit)=\\\"ProductSubmit()\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"itemName\\\">Item name</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"itemName\\\"\\r\\n                    name=\\\"itemName\\\"\\r\\n                    formControlName=\\\"itemName\\\"\\r\\n                  />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"price\\\">Price</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"price\\\"\\r\\n                    name=\\\"price\\\"\\r\\n                    formControlName=\\\"price\\\"\\r\\n                    placeholder=\\\"Enter value\\\"\\r\\n                  />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"unit\\\">Unit</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"unit\\\"\\r\\n                    name=\\\"unit\\\"\\r\\n                    formControlName=\\\"unit\\\"\\r\\n                    placeholder=\\\"Enter value\\\"\\r\\n                  />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"Image\\\">Image</label>\\r\\n                  <input\\r\\n                    type=\\\"file\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"Image\\\"\\r\\n                    accept=\\\".jpg,.jpeg,.JPEG,.png\\\"\\r\\n                    name=\\\"Image\\\"\\r\\n                    (change)=\\\"onChange($event)\\\"\\r\\n                    formControlName=\\\"Image\\\"\\r\\n                    placeholder=\\\"Choose image\\\"\\r\\n                  />\\r\\n                </div>\\r\\n                <button\\r\\n                  type=\\\"button\\\"\\r\\n                  class=\\\"btn btn-secondary\\\"\\r\\n                  (click)=\\\"addProductModal.hide()\\\"\\r\\n                >\\r\\n                  Close\\r\\n                </button>\\r\\n                <button\\r\\n                  type=\\\"submit\\\"\\r\\n                  class=\\\"btn btn-primary ml-2\\\"\\r\\n                  [disabled]=\\\"btnLoading || !productForm.valid\\\"\\r\\n                >\\r\\n                  <span\\r\\n                    *ngIf=\\\"btnLoading\\\"\\r\\n                    class=\\\"spinner-border spinner-border-sm\\\"\\r\\n                    role=\\\"status\\\"\\r\\n                    aria-hidden=\\\"true\\\"\\r\\n                  ></span>\\r\\n                  Save changes\\r\\n                </button>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { RetailersComponent } from './retailers.component';\r\n\r\n// Dropdowns Component\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\n// Buttons Routing\r\nimport { RetailersRoutingModule } from './retailers-routing.module';\r\n\r\n// Angular\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { RetailerDetailComponent } from './retailer-detail.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TabsModule,\r\n    ReactiveFormsModule,\r\n    AgGridModule.withComponents([]),\r\n    RetailersRoutingModule,\r\n    BsDropdownModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    RetailersComponent,\r\n    RetailerDetailComponent\r\n  ]\r\n})\r\nexport class RetailersModule { }\r\n"]}