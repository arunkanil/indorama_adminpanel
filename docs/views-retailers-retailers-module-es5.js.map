{"version":3,"sources":["webpack:///src/app/views/retailers/retailers.component.html","webpack:///src/app/views/retailers/retailers.component.ts","webpack:///src/app/views/retailers/retailers-routing.module.ts","webpack:///src/app/views/retailers/retailer-detail.component.ts","webpack:///src/app/views/retailers/retailer-detail.component.html","webpack:///src/app/views/retailers/retailers.module.ts"],"names":["RetailersComponent","dataservice","router","fb","toastr","loading","btnLoading","confirmed","undefined","blocked","disableNextButton","disablePrevButton","selectedList","pageSize","from","to","count","columnDefs","commentForm","group","UserType","username","required","minLength","cannotContainSpace","email","password","Name","Gender","Age","ContactNumber","lga","village","state","rowData","Villages","LGA","Areas","States","selectedYear","Date","getFullYear","years","filter","rowSelection","console","log","getRetailers","getAreas","getLGAs","getStates","getVillages","valueChanges","subscribe","result","data","states","controls","id","lgas","areas","villages","usersPermissionsUsers","meta","pagination","pageCount","total","length","event","target","value","params","gridApi","api","gridColumnApi","columnApi","sizeColumnsToFit","selectedRows","getSelectedRows","navigate","detailsModal","show","resp","createRetailer","success","commentModal","hide","error","template","routes","path","children","redirectTo","component","roles","title","RetailersRoutingModule","imports","forChild","exports","RetailerDetailComponent","activatedRouter","baseURL","apiUrl","btnText","disableButton","details","dateConverter","users","Retailers","Farmers","Crops","file","agentForm","Farmer","retailer_categories","Bio","Latitude","Longitude","resultForm","itemName","price","unit","productForm","Image","getLists","getCrops","getFarmers","getTest","url","getsingleRetailer","attributes","crops","getRetailerCategories","retailerCategories","getUsers","date","check","payload","UpdateRetailer","updateUsersPermissionsUser","approveModal","flag","resultModal","soil_test_sample","ItemName","Price","Unit","deleteObj","deleteModal","myModal","UpdateRetailerProducts","updateRetailerProduct","i","files","push","upload","response","status","UpdateRetailerPic","body","addProductModal","addRetailerProducts","createRetailerProduct","deleteProduct","deleteRetailerProduct","RetailersModule","withComponents","forRoot","declarations"],"mappings":"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","file":"views-retailers-retailers-module-es5.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div\\r\\n      class=\\\"card-header\\\"\\r\\n      style=\\\"display: flex; justify-content: space-between\\\"\\r\\n    >\\r\\n      <h2>Retailers</h2>\\r\\n      <button\\r\\n        type=\\\"button\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n        data-toggle=\\\"modal\\\"\\r\\n        (click)=\\\"commentModal.show()\\\"\\r\\n      >\\r\\n        Add New Retailer\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <div class=\\\"btn-group float-right mb-3\\\" dropdown>\\r\\n            <button\\r\\n              dropdownToggle\\r\\n              type=\\\"button\\\"\\r\\n              class=\\\"btn btn-primary dropdown-toggle\\\"\\r\\n            >\\r\\n              {{ selectedList }}<span class=\\\"caret\\\"></span>\\r\\n            </button>\\r\\n            <ul *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\r\\n              <li role=\\\"menuitem\\\">\\r\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"toggleCropPrices('All')\\\"\\r\\n                  >All</a\\r\\n                >\\r\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"toggleCropPrices('Approved')\\\"\\r\\n                  >Approved</a\\r\\n                >\\r\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"toggleCropPrices('Approvalpending')\\\"\\r\\n                  >Approval pending</a\\r\\n                >\\r\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"toggleCropPrices('Rejected')\\\"\\r\\n                  >Rejected</a\\r\\n                >\\r\\n              </li>\\r\\n            </ul>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <ag-grid-angular\\r\\n            #agGrid\\r\\n            style=\\\"width: 100%; height: 65vh\\\"\\r\\n            id=\\\"myGrid\\\"\\r\\n            class=\\\"ag-theme-alpine\\\"\\r\\n            [columnDefs]=\\\"columnDefs\\\"\\r\\n            [rowData]=\\\"rowData\\\"\\r\\n            [rowSelection]=\\\"rowSelection\\\"\\r\\n            (gridReady)=\\\"onGridReady($event)\\\"\\r\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\r\\n            animateRows=\\\"true\\\"\\r\\n          >\\r\\n          </ag-grid-angular>\\r\\n          <span class=\\\"float-left mt-3\\\"\\r\\n            >{{ from }} to {{ to }} of {{ meta?.pagination?.total }}</span\\r\\n          >\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            [disabled]=\\\"disableNextButton\\\"\\r\\n            class=\\\"btn btn-primary float-right m-2\\\"\\r\\n            (click)=\\\"loadNext()\\\"\\r\\n          >\\r\\n            Next\\r\\n          </button>\\r\\n          <span class=\\\"float-right mt-3\\\"\\r\\n            >Page {{ meta?.pagination?.page }} of\\r\\n            {{ meta?.pagination?.pageCount }}</span\\r\\n          >\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            [disabled]=\\\"disablePrevButton\\\"\\r\\n            class=\\\"btn btn-primary float-right m-2\\\"\\r\\n            (click)=\\\"loadPrev()\\\"\\r\\n          >\\r\\n            Prev\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div\\r\\n  bsModal\\r\\n  #commentModal=\\\"bs-modal\\\"\\r\\n  class=\\\"modal fade\\\"\\r\\n  tabindex=\\\"-1\\\"\\r\\n  role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\"\\r\\n>\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Add Retailer</h4>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"close\\\"\\r\\n          (click)=\\\"commentModal.hide()\\\"\\r\\n          aria-label=\\\"Close\\\"\\r\\n        >\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"commentForm\\\" (ngSubmit)=\\\"formSubmit()\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"Name\\\">Name</label>\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"Name\\\"\\r\\n                  name=\\\"Name\\\"\\r\\n                  formControlName=\\\"Name\\\"\\r\\n                  placeholder=\\\"Enter  Name\\\"\\r\\n                />\\r\\n                <div\\r\\n                  *ngIf=\\\"f.Name.touched && f.Name.invalid\\\"\\r\\n                  class=\\\"text-danger\\\"\\r\\n                >\\r\\n                  <div *ngIf=\\\"f.Name.errors.required\\\">\\r\\n                    Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"username\\\">Username</label>\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"username\\\"\\r\\n                  name=\\\"username\\\"\\r\\n                  formControlName=\\\"username\\\"\\r\\n                  placeholder=\\\"Enter username\\\"\\r\\n                />\\r\\n                <div\\r\\n                  *ngIf=\\\"f.username.touched && f.username.invalid\\\"\\r\\n                  class=\\\"text-danger\\\"\\r\\n                >\\r\\n                  <div *ngIf=\\\"f.username.errors.required\\\">\\r\\n                    Username is required.\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"f.username.errors.minlength\\\">\\r\\n                    Username should have minimum 3 characters.\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"f.username.errors.cannotContainSpace\\\">\\r\\n                    Username cannot contain space.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"password\\\">Password</label>\\r\\n                <input\\r\\n                  type=\\\"password\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"password\\\"\\r\\n                  name=\\\"password\\\"\\r\\n                  formControlName=\\\"password\\\"\\r\\n                  placeholder=\\\"Enter password\\\"\\r\\n                />\\r\\n                <div\\r\\n                  *ngIf=\\\"f.password.touched && f.password.invalid\\\"\\r\\n                  class=\\\"text-danger\\\"\\r\\n                >\\r\\n                  <div *ngIf=\\\"f.password.errors.required\\\">\\r\\n                    Password is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"ContactNumber\\\">Contact number</label>\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"ContactNumber\\\"\\r\\n                  name=\\\"ContactNumber\\\"\\r\\n                  formControlName=\\\"ContactNumber\\\"\\r\\n                  placeholder=\\\"Enter contact number\\\"\\r\\n                />\\r\\n                <div\\r\\n                  *ngIf=\\\"f.ContactNumber.touched && f.ContactNumber.invalid\\\"\\r\\n                  class=\\\"text-danger\\\"\\r\\n                >\\r\\n                  <div *ngIf=\\\"f.ContactNumber.errors.required\\\">\\r\\n                    Contact number is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"name\\\">E-mail</label>\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"email\\\"\\r\\n                  name=\\\"email\\\"\\r\\n                  formControlName=\\\"email\\\"\\r\\n                  placeholder=\\\"Enter email\\\"\\r\\n                />\\r\\n              </div> -->\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"state\\\">State</label>\\r\\n                <select\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"state\\\"\\r\\n                  required\\r\\n                  ngModel\\r\\n                  (change)=\\\"filterLGA($event)\\\"\\r\\n                  name=\\\"state\\\"\\r\\n                  formControlName=\\\"state\\\"\\r\\n                >\\r\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n                  <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\r\\n                    {{ item.attributes.Name }}\\r\\n                  </option>\\r\\n                </select>\\r\\n                <div\\r\\n                  *ngIf=\\\"f.state.touched && f.state.invalid\\\"\\r\\n                  class=\\\"text-danger\\\"\\r\\n                >\\r\\n                  <div *ngIf=\\\"f.state.errors.required\\\">\\r\\n                    State is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"lga\\\">LGA</label>\\r\\n                <select\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"lga\\\"\\r\\n                  required\\r\\n                  ngModel\\r\\n                  (change)=\\\"filterVillage($event)\\\"\\r\\n                  name=\\\"lga\\\"\\r\\n                  formControlName=\\\"lga\\\"\\r\\n                >\\r\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n                  <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\r\\n                    {{ item.attributes.Name }}\\r\\n                  </option>\\r\\n                </select>\\r\\n                <div\\r\\n                  *ngIf=\\\"f.lga.touched && f.lga.invalid\\\"\\r\\n                  class=\\\"text-danger\\\"\\r\\n                >\\r\\n                  <div *ngIf=\\\"f.lga.errors.required\\\">\\r\\n                    LGA is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"village\\\">Village</label>\\r\\n                <select\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"village\\\"\\r\\n                  required\\r\\n                  ngModel\\r\\n                  name=\\\"village\\\"\\r\\n                  formControlName=\\\"village\\\"\\r\\n                >\\r\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n                  <option *ngFor=\\\"let item of Villages\\\" value=\\\"{{ item.id }}\\\">\\r\\n                    {{ item.attributes.Name }}\\r\\n                  </option>\\r\\n                </select>\\r\\n                <div\\r\\n                  *ngIf=\\\"f.village.touched && f.village.invalid\\\"\\r\\n                  class=\\\"text-danger\\\"\\r\\n                >\\r\\n                  <div *ngIf=\\\"f.village.errors.required\\\">\\r\\n                    Village is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"Gender\\\">Gender</label>\\r\\n                <select\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"Gender\\\"\\r\\n                  required\\r\\n                  ngModel\\r\\n                  name=\\\"Gender\\\"\\r\\n                  formControlName=\\\"Gender\\\"\\r\\n                >\\r\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n                  <option value=\\\"Male\\\">Male</option>\\r\\n                  <option value=\\\"Female\\\">Female</option>\\r\\n                </select>\\r\\n                <div\\r\\n                  *ngIf=\\\"f.Gender.touched && f.Gender.invalid\\\"\\r\\n                  class=\\\"text-danger\\\"\\r\\n                >\\r\\n                  <div *ngIf=\\\"f.Gender.errors.required\\\">\\r\\n                    Gender is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"Age\\\">Age</label>\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"Age\\\"\\r\\n                  name=\\\"Age\\\"\\r\\n                  formControlName=\\\"Age\\\"\\r\\n                  placeholder=\\\"Enter age\\\"\\r\\n                />\\r\\n                <div\\r\\n                  *ngIf=\\\"f.Age.touched && f.Age.invalid\\\"\\r\\n                  class=\\\"text-danger\\\"\\r\\n                >\\r\\n                  <div *ngIf=\\\"f.Age.errors.required\\\">\\r\\n                    Age is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-secondary\\\"\\r\\n            (click)=\\\"commentModal.hide()\\\"\\r\\n          >\\r\\n            Close\\r\\n          </button>\\r\\n          <button\\r\\n            type=\\\"submit\\\"\\r\\n            class=\\\"btn btn-primary ml-2\\\"\\r\\n            [disabled]=\\\"btnLoading || !commentForm.valid\\\"\\r\\n          >\\r\\n            <span\\r\\n              *ngIf=\\\"btnLoading\\\"\\r\\n              class=\\\"spinner-border spinner-border-sm\\\"\\r\\n              role=\\\"status\\\"\\r\\n              aria-hidden=\\\"true\\\"\\r\\n            ></span>\\r\\n            Save changes\\r\\n          </button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- /.modal-content -->\\r\\n  </div>\\r\\n  <!-- /.modal-dialog -->\\r\\n</div>\\r\\n<div\\r\\n  bsModal\\r\\n  #detailsModal=\\\"bs-modal\\\"\\r\\n  class=\\\"modal fade\\\"\\r\\n  tabindex=\\\"-1\\\"\\r\\n  role=\\\"dialog\\\"\\r\\n  aria-hidden=\\\"true\\\"\\r\\n>\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">History</h4>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"close\\\"\\r\\n          (click)=\\\"detailsModal.hide()\\\"\\r\\n          aria-label=\\\"Close\\\"\\r\\n        >\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\"></div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Component, ViewChild } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DataService } from \"../../data.service\";\r\n// import { ActionRenderer } from \"../../utils/StatusRenderer\";\r\n\r\nimport { RetailersColumn } from \"../../constants/columnMetadata\";\r\nimport { filter } from \"rxjs/operators\";\r\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\r\nimport { UsernameValidator } from \"../../utils/username.validator\";\r\n\r\n@Component({\r\n  templateUrl: \"retailers.component.html\",\r\n})\r\nexport class RetailersComponent {\r\n  rowSelection: string;\r\n  constructor(\r\n    public dataservice: DataService,\r\n    public router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.columnDefs = [...RetailersColumn];\r\n    this.rowSelection = \"single\";\r\n  }\r\n  @ViewChild(\"commentModal\") public commentModal: ModalDirective;\r\n  @ViewChild(\"detailsModal\") public detailsModal: ModalDirective;\r\n\r\n  loading = true;\r\n  btnLoading = false;\r\n  confirmed = undefined;\r\n  blocked = undefined;\r\n  disableNextButton = false;\r\n  disablePrevButton = true;\r\n  selectedList = \"All\";\r\n  meta;\r\n  pageSize = 20;\r\n  from = 1;\r\n  to = 20;\r\n  count = 1;\r\n  columnDefs = [];\r\n  commentForm = this.fb.group({\r\n    UserType: [\"Retailer\"],\r\n    username: [\r\n      \"\",\r\n      [\r\n        Validators.required,\r\n        Validators.minLength(3),\r\n        UsernameValidator.cannotContainSpace,\r\n      ],\r\n    ],\r\n    email: [\"nodata@email.com\"],\r\n    password: [\"\", Validators.required],\r\n    Name: [\"\", Validators.required],\r\n    Gender: [\"\", Validators.required],\r\n    Age: [\"\", Validators.required],\r\n    ContactNumber: [\"\", Validators.required],\r\n    lga: [\"\", Validators.required],\r\n    village: [\"\", Validators.required],\r\n    state: [\"\"],\r\n  });\r\n  // frameworkComponents = {\r\n  //   statusRenderer: ActionRenderer,\r\n  // };\r\n  rowData: any = [];\r\n\r\n  Villages: any = [];\r\n  LGA: any = [];\r\n  Areas: any = [];\r\n  States: any = [];\r\n\r\n  selectedYear: any = new Date().getFullYear();\r\n  years: any = [];\r\n  private gridApi;\r\n  private gridColumnApi;\r\n  filter: any = {};\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    console.log(this.router);\r\n    this.getRetailers();\r\n    this.getAreas();\r\n    this.getLGAs();\r\n    this.getStates();\r\n    this.getVillages();\r\n  }\r\n  getStates() {\r\n    this.dataservice.getStates().valueChanges.subscribe((result: any) => {\r\n      console.log(\"getStates\", result.data.states.data);\r\n      this.States = result.data.states.data;\r\n    });\r\n  }\r\n  get f() {\r\n    return this.commentForm.controls;\r\n  }\r\n  getLGAs(id?) {\r\n    this.dataservice.getLGAs(id).valueChanges.subscribe((result: any) => {\r\n      console.log(\"getLGAs\", result.data.lgas.data);\r\n      this.LGA = result.data.lgas.data;\r\n    });\r\n  }\r\n  getAreas(id?) {\r\n    this.dataservice.getAreas(id).valueChanges.subscribe((result: any) => {\r\n      console.log(\"getAreas\", result.data.areas.data);\r\n      this.Areas = result.data.areas.data;\r\n    });\r\n  }\r\n  getVillages(id?) {\r\n    this.dataservice.getVillages(id).valueChanges.subscribe((result: any) => {\r\n      console.log(\"getVillages\", result.data.villages.data);\r\n      this.Villages = result.data.villages.data;\r\n    });\r\n  }\r\n  getRetailers() {\r\n    this.dataservice\r\n      .getRetailers(1, this.pageSize, this.confirmed, this.blocked)\r\n      .valueChanges.subscribe((result: any) => {\r\n        this.rowData = result.data.usersPermissionsUsers.data;\r\n        this.meta = result.data.usersPermissionsUsers.meta;\r\n        if (this.meta?.pagination?.pageCount <= 1) {\r\n          this.disablePrevButton = true;\r\n          this.disableNextButton = true;\r\n        }\r\n        if (this.meta?.pagination?.total < this.pageSize) {\r\n          this.to = this.meta?.pagination?.total;\r\n        }\r\n      });\r\n  }\r\n  loadNext() {\r\n    this.count++;\r\n    this.disablePrevButton = false;\r\n    this.from = this.from + this.pageSize;\r\n    this.to =\r\n      this.to + this.pageSize > this.meta?.pagination?.total\r\n        ? this.meta?.pagination?.total\r\n        : this.to + this.pageSize;\r\n    if (this.count === this.meta.pagination.pageCount) {\r\n      this.disableNextButton = true;\r\n    }\r\n    this.dataservice\r\n      .getRetailers(this.count, this.pageSize)\r\n      .valueChanges.subscribe((result: any) => {\r\n        this.meta = result.data.usersPermissionsUsers.meta;\r\n        this.rowData = result.data.usersPermissionsUsers.data;\r\n      });\r\n  }\r\n  loadPrev() {\r\n    this.count--;\r\n    if (this.count < this.meta.pagination.pageCount) {\r\n      this.disableNextButton = false;\r\n    }\r\n    if (this.count === 1) {\r\n      this.disablePrevButton = true;\r\n    }\r\n    this.from = this.from - this.pageSize;\r\n    this.to = this.to - this.rowData.length;\r\n    this.dataservice\r\n      .getRetailers(this.count, this.pageSize)\r\n      .valueChanges.subscribe((result: any) => {\r\n        this.meta = result.data.usersPermissionsUsers.meta;\r\n        this.rowData = result.data.usersPermissionsUsers.data;\r\n      });\r\n  }\r\n  filterLGA(event) {\r\n    this.getLGAs(event.target.value);\r\n  }\r\n  filterVillage(event) {\r\n    this.getVillages(event.target.value);\r\n  }\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n  onRowClicked(event: any) {\r\n    console.log(\"row\", event.data);\r\n    // this.router.navigate(\r\n    //   [\"/cropprices/kp_customer_details\", event.data.id, this.router.url],\r\n    //   {\r\n    //     state: { data: event.data },\r\n    //   }\r\n    // );\r\n  }\r\n  toggleCropPrices(data) {\r\n    switch (data) {\r\n      case \"Rejected\":\r\n        this.selectedList = \"Rejected\";\r\n        this.blocked = true;\r\n        this.confirmed = undefined;\r\n        this.getRetailers();\r\n        break;\r\n      case \"Approvalpending\":\r\n        this.selectedList = \"Pending\";\r\n        this.blocked = false;\r\n        this.confirmed = false;\r\n        this.getRetailers();\r\n        break;\r\n      case \"Approved\":\r\n        this.selectedList = \"Approved\";\r\n        this.blocked = false;\r\n        this.confirmed = true;\r\n        this.getRetailers();\r\n        break;\r\n      case \"All\":\r\n        this.selectedList = \"All\";\r\n        this.blocked = undefined;\r\n        this.confirmed = undefined;\r\n        this.getRetailers();\r\n        break;\r\n    }\r\n    // if (data == 'Approvalpending') {\r\n    //   this.selectedList = \"Approval Pending\";\r\n    //   this.publicationState = \"PREVIEW\";\r\n    //   this.toApprove = null;\r\n    //   this.getCropPrices();\r\n    // }\r\n    // else if{\r\n\r\n    // } else {\r\n    //   this.selectedList = \"All\";\r\n    //   this.publicationState = \"PREVIEW\";\r\n    //   this.toApprove = undefined;\r\n    //   this.getCropPrices();\r\n    // }\r\n  }\r\n  onSelectionChanged(event: any) {\r\n    var selectedRows = this.gridApi.getSelectedRows();\r\n    console.log(selectedRows, event);\r\n    this.router.navigate([\"/retailers/retailer_details\", selectedRows[0].id], {\r\n      state: { data: selectedRows },\r\n    });\r\n  }\r\n  openModal(data: any) {\r\n    this.detailsModal.show();\r\n  }\r\n  formSubmit() {\r\n    console.log(this.commentForm.value);\r\n    this.btnLoading = true;\r\n    let resp = {};\r\n    this.dataservice.createRetailer(this.commentForm.value).subscribe(\r\n      (result: any) => {\r\n        resp = result;\r\n        console.log(\"response\", result);\r\n        if (result) {\r\n          this.toastr.success(\"Retailer added successfully!\");\r\n          this.btnLoading = false;\r\n          this.commentModal.hide();\r\n          this.getRetailers();\r\n        } else {\r\n          this.toastr.error(\"Failed. Please check the fields!\");\r\n          this.btnLoading = false;\r\n        }\r\n      },\r\n      (error) => {\r\n        this.btnLoading = false;\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RetailersComponent } from './retailers.component';\r\nimport { AuthGuard } from '../login/auth.guard';\r\nimport { RetailerDetailComponent } from './retailer-detail.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    \r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'retailers'\r\n      },\r\n      {\r\n        path: 'all',\r\n        // canActivate: [AuthGuard],\r\n        component: RetailersComponent,\r\n        data: {\r\n          roles: 'KP_CALLER',\r\n          title: 'Retailers'\r\n        }\r\n      },\r\n      {\r\n        path: 'retailer_details/:id',\r\n        // canActivate: [AuthGuard],\r\n        component: RetailerDetailComponent,\r\n        data: {\r\n          roles: 'MANAGER',\r\n          title: 'Retailer Details'\r\n        }\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RetailersRoutingModule {}\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DataService } from \"../../data.service\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { dateConverter } from \"../../constants/columnMetadata\";\r\nimport { environment } from \"../../../environments/environment\";\r\n\r\n@Component({\r\n  templateUrl: \"retailer-detail.component.html\",\r\n})\r\nexport class RetailerDetailComponent implements OnInit {\r\n  constructor(\r\n    public dataservice: DataService,\r\n    private activatedRouter: ActivatedRoute,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {}\r\n  @ViewChild(\"myModal\") public myModal: ModalDirective;\r\n  @ViewChild(\"resultModal\") public resultModal: ModalDirective;\r\n  @ViewChild(\"deleteModal\") public deleteModal: ModalDirective;\r\n  @ViewChild(\"addProductModal\") public addProductModal: ModalDirective;\r\n  @ViewChild(\"approveModal\") public approveModal: ModalDirective;\r\n\r\n  id: any;\r\n  baseURL = environment.apiUrl;\r\n  loading = true;\r\n  btnText = \"Approve / Reject\";\r\n  disableButton = true;\r\n  details: any = [];\r\n  btnLoading = false;\r\n  dateConverter = dateConverter;\r\n  users: any = [];\r\n  Villages: any = [];\r\n  LGA: any = [];\r\n  Areas: any = [];\r\n  Retailers: any = [];\r\n  Farmers: any = [];\r\n  States: any = [];\r\n  Crops: any = [];\r\n  file: any = null;\r\n  flag;\r\n  deleteObj;\r\n  agentForm = this.fb.group({\r\n    ContactNumber: [\"\", Validators.required],\r\n    // username: [\"\", Validators.required],\r\n    Name: [\"\", Validators.required],\r\n    // email: [\"\", Validators.required],\r\n    password: [\"\"],\r\n    Farmer: [\"\", Validators.required],\r\n    retailer_categories: [\"\", Validators.required],\r\n    Bio: [\"\", Validators.required],\r\n    state: [\"\", Validators.required],\r\n    village: [\"\", Validators.required],\r\n    lga: [\"\", Validators.required],\r\n    Latitude: [\"\", Validators.required],\r\n    Longitude: [\"\", Validators.required],\r\n  });\r\n  resultForm = this.fb.group({\r\n    id: [\"\"],\r\n    itemName: [\"\", Validators.required],\r\n    price: [\"\", Validators.required],\r\n    unit: [\"\", Validators.required],\r\n  });\r\n  productForm = this.fb.group({\r\n    Image: [\"\", Validators.required],\r\n    itemName: [\"\", Validators.required],\r\n    price: [\"\", Validators.required],\r\n    unit: [\"\", Validators.required],\r\n  });\r\n  ngOnInit(): void {\r\n    this.getLists();\r\n    this.getAreas();\r\n    this.getCrops();\r\n    this.getLGAs();\r\n    this.getStates();\r\n    this.getVillages();\r\n    this.getFarmers();\r\n    this.getRetailers();\r\n    this.activatedRouter.params.subscribe((params) => {\r\n      this.id = params[\"id\"];\r\n    });\r\n    this.getTest();\r\n  }\r\n  imgUrl(url) {\r\n    return `${environment.apiUrl}` + url;\r\n  }\r\n  getTest() {\r\n    this.dataservice\r\n      .getsingleRetailer(this.id)\r\n      .valueChanges.subscribe((result: any) => {\r\n        console.log(\r\n          \"getsingleRetailer\",\r\n          result.data.usersPermissionsUsers.data[0]\r\n        );\r\n        this.details = result.data.usersPermissionsUsers.data[0];\r\n        this.agentForm = this.fb.group({\r\n          ContactNumber: [\r\n            this.details.attributes?.ContactNumber,\r\n            Validators.required,\r\n          ],\r\n          Name: [this.details.attributes?.Name, Validators.required],\r\n          // email: [this.details.attributes?.email, Validators.required],\r\n          Bio: [this.details.attributes?.Bio, Validators.required],\r\n          Latitude: [this.details.attributes?.Latitude, Validators.required],\r\n          Longitude: [this.details.attributes?.Longitude, Validators.required],\r\n          state: [\r\n            this.details?.attributes?.lga?.data?.attributes?.state?.data?.id,\r\n            Validators.required,\r\n          ],\r\n          password: [\"\"],\r\n          lga: [this.details?.attributes?.lga?.data?.id, Validators.required],\r\n          village: [\r\n            this.details?.attributes?.village?.data?.id,\r\n            Validators.required,\r\n          ],\r\n          retailer_categories: [\r\n            this.details?.attributes?.retailer_categories?.data[0]?.id,\r\n            Validators.required,\r\n          ],\r\n        });\r\n        if (this.details?.attributes?.blocked === true) {\r\n          this.disableButton = true;\r\n          this.btnText = \"Rejected\";\r\n        } else if (this.details?.attributes?.confirmed === true) {\r\n          {\r\n            this.disableButton = true;\r\n            this.btnText = \"Approved\";\r\n          }\r\n        } else if (this.details?.attributes?.confirmed === false) {\r\n          return (this.disableButton = false);\r\n        }\r\n        this.loading = false;\r\n      });\r\n  }\r\n  getCrops() {\r\n    this.dataservice.getCrops().valueChanges.subscribe((result: any) => {\r\n      console.log(\"getCrops\", result.data.crops.data);\r\n      this.Crops = result.data.crops.data;\r\n    });\r\n  }\r\n  getStates() {\r\n    this.dataservice.getStates().valueChanges.subscribe((result: any) => {\r\n      console.log(\"getStates\", result.data.states.data);\r\n      this.States = result.data.states.data;\r\n    });\r\n  }\r\n  getLGAs(id?) {\r\n    this.dataservice.getLGAs(id).valueChanges.subscribe((result: any) => {\r\n      console.log(\"getLGAs\", result.data.lgas.data);\r\n      this.LGA = result.data.lgas.data;\r\n    });\r\n  }\r\n  getAreas(id?) {\r\n    this.dataservice.getAreas(id).valueChanges.subscribe((result: any) => {\r\n      console.log(\"getAreas\", result.data.areas.data);\r\n      this.Areas = result.data.areas.data;\r\n    });\r\n  }\r\n  getRetailers() {\r\n    this.dataservice\r\n      .getRetailerCategories()\r\n      .valueChanges.subscribe((result: any) => {\r\n        console.log(\"getRetailers\", result.data.retailerCategories.data);\r\n        this.Retailers = result.data.retailerCategories.data;\r\n      });\r\n  }\r\n  getFarmers() {\r\n    this.dataservice\r\n      .getUsers(undefined, undefined, \"Farmer\")\r\n      .valueChanges.subscribe((result: any) => {\r\n        console.log(\"getFarmers\", result.data.usersPermissionsUsers.data);\r\n        this.Farmers = result.data.usersPermissionsUsers.data;\r\n      });\r\n  }\r\n  getVillages(id?) {\r\n    this.dataservice.getVillages(id).valueChanges.subscribe((result: any) => {\r\n      console.log(\"getVillages\", result.data.villages.data);\r\n      this.Villages = result.data.villages.data;\r\n    });\r\n  }\r\n  dateConvertor(date) {\r\n    return new Date(date);\r\n  }\r\n  getLists() {\r\n    this.loading = true;\r\n  }\r\n  approveOrReject(check) {\r\n    let payload = {};\r\n    if (check) {\r\n      payload = {\r\n        confirmed: true,\r\n        blocked: false,\r\n      };\r\n    } else {\r\n      payload = {\r\n        confirmed: false,\r\n        blocked: true,\r\n      };\r\n    }\r\n    this.dataservice.UpdateRetailer(payload, this.id).subscribe(\r\n      (result: any) => {\r\n        console.log(\"response\", result);\r\n        if (result.data.updateUsersPermissionsUser) {\r\n          this.toastr.success(\"Updated successfully!\");\r\n          this.btnLoading = false;\r\n          this.approveModal.hide();\r\n          this.getTest();\r\n        } else {\r\n          this.toastr.error(\"Something went wrong!\");\r\n          this.btnLoading = false;\r\n        }\r\n      },\r\n      (error) => {\r\n        this.btnLoading = false;\r\n      }\r\n    );\r\n    // let published = null;\r\n    // if (!check) published = new Date();\r\n    // this.dataservice\r\n    //   .UpdateCropPrice(\r\n    //     undefined,\r\n    //     this.selectedRows[0].id,\r\n    //     undefined,\r\n    //     check,\r\n    //     published\r\n    //   )\r\n    //   .subscribe(\r\n    //     (result: any) => {\r\n    //       console.log(\"response\", result);\r\n    //       if (result.data.updateCropPrice) {\r\n    //         this.toastr.success(\"Success!\");\r\n    //         this.getCropPrices();\r\n    //         this.file = null;\r\n    //         this.approveModal.hide();\r\n    //         this.gridApi.deselectAll();\r\n    //         this.btnLoading = false;\r\n    //       }\r\n    //     },\r\n    //     (error) => {\r\n    //       this.toastr.error(\"Failed. Please check the fields!\");\r\n    //       this.btnLoading = false;\r\n    //     }\r\n    //   );\r\n  }\r\n  openApproveModal() {\r\n    this.approveModal.show();\r\n  }\r\n  openModal(data: any, flag) {\r\n    this.resultModal.show();\r\n    console.log(data, flag);\r\n    this.flag = flag;\r\n    this.resultForm = this.fb.group({\r\n      id: [data?.id],\r\n      soil_test_sample: [data?.id],\r\n      itemName: [data?.attributes?.ItemName, Validators.required],\r\n      price: [data?.attributes?.Price, Validators.required],\r\n      unit: [data?.attributes?.Unit, Validators.required],\r\n    });\r\n  }\r\n  openDeleteModal(data) {\r\n    this.deleteObj = data;\r\n    this.deleteModal.show();\r\n  }\r\n  FormSubmit() {\r\n    let resp = {};\r\n    this.btnLoading = true;\r\n    console.log(this.agentForm.value);\r\n    this.dataservice.UpdateRetailer(this.agentForm.value, this.id).subscribe(\r\n      (result: any) => {\r\n        resp = result.data;\r\n        console.log(\"response\", result);\r\n        if (result.data.updateUsersPermissionsUser) {\r\n          this.toastr.success(\"Retailer updated successfully!\");\r\n          this.btnLoading = false;\r\n          this.myModal.hide();\r\n          this.getTest();\r\n        } else {\r\n          this.toastr.error(\"Failed. Please check the fields!\");\r\n          this.btnLoading = false;\r\n        }\r\n      },\r\n      (error) => {\r\n        this.btnLoading = false;\r\n      }\r\n    );\r\n  }\r\n  ResultSubmit() {\r\n    console.log(\"edit\", this.resultForm.value);\r\n    this.btnLoading = true;\r\n    let resp = {};\r\n    console.log(this.resultForm.value);\r\n    this.dataservice\r\n      .UpdateRetailerProducts(\r\n        this.resultForm.value,\r\n        this.details?.attributes?.retailer_categories?.data[0]?.id,\r\n        this.id\r\n      )\r\n      .subscribe(\r\n        (result: any) => {\r\n          resp = result.data;\r\n          console.log(\"response\", result);\r\n          if (result.data.updateRetailerProduct) {\r\n            this.toastr.success(\"Product updated successfully!\");\r\n            this.btnLoading = false;\r\n            this.resultModal.hide();\r\n            this.getTest();\r\n          } else {\r\n            this.toastr.error(\"Failed. Please check the fields!\");\r\n            this.btnLoading = false;\r\n          }\r\n        },\r\n        (error) => {\r\n          this.btnLoading = false;\r\n        }\r\n      );\r\n  }\r\n  onChange(event: any) {\r\n    this.file = [];\r\n    for (var i = 0; i < event.target.files.length; i++) {\r\n      this.file.push(event.target.files[i]);\r\n    }\r\n    console.log(this.file);\r\n  }\r\n  filterLGA(event) {\r\n    this.getLGAs(event.target.value);\r\n  }\r\n  filterVillage(event) {\r\n    this.getVillages(event.target.value);\r\n  }\r\n  uploadProfPic() {\r\n    let resp = {};\r\n    this.dataservice.upload(this.file).subscribe((response: any) => {\r\n      if (response.status == 200) {\r\n        console.log(response);\r\n        this.dataservice\r\n          .UpdateRetailerPic(this.id, response.body[0]?.id)\r\n          .subscribe((result: any) => {\r\n            resp = result.data;\r\n            console.log(\"response\", result);\r\n            if (result.data.updateUsersPermissionsUser) {\r\n              this.toastr.success(\"Success!\");\r\n              this.file = null;\r\n              this.getTest();\r\n              this.addProductModal.hide();\r\n            } else {\r\n              this.toastr.error(\"Failed!\");\r\n            }\r\n          });\r\n      } else {\r\n        this.toastr.error(\"Image failed to upload!\");\r\n      }\r\n    });\r\n  }\r\n  ProductSubmit() {\r\n    let resp = {};\r\n    this.btnLoading = true;\r\n    this.dataservice.upload(this.file).subscribe((response: any) => {\r\n      if (response.status == 200) {\r\n        console.log(response);\r\n        this.dataservice\r\n          .addRetailerProducts(\r\n            this.productForm.value,\r\n            this.details?.attributes?.retailer_categories?.data[0]?.id,\r\n            this.id,\r\n            response.body[0]?.id\r\n          )\r\n          .subscribe(\r\n            (result: any) => {\r\n              resp = result.data;\r\n              console.log(\"response\", result);\r\n              if (result.data.createRetailerProduct) {\r\n                this.toastr.success(\"Success!\");\r\n                this.btnLoading = false;\r\n                this.file = null;\r\n                this.getTest();\r\n                this.addProductModal.hide();\r\n              } else {\r\n                this.toastr.error(\"Failed!\");\r\n                this.btnLoading = false;\r\n              }\r\n            },\r\n            (error) => {\r\n              this.btnLoading = false;\r\n            }\r\n          );\r\n      } else {\r\n        this.toastr.error(\"Image failed to upload!\");\r\n        this.btnLoading = false;\r\n      }\r\n    });\r\n  }\r\n  deleteProduct() {\r\n    this.dataservice\r\n      .deleteProduct(this.deleteObj.id)\r\n      .subscribe((result: any) => {\r\n        console.log(\"response\", result);\r\n        if (result.data.deleteRetailerProduct) {\r\n          this.toastr.success(\"Success!\");\r\n          this.deleteModal.hide();\r\n          this.getTest();\r\n        } else {\r\n          this.toastr.error(\"Failed!\");\r\n        }\r\n      });\r\n  }\r\n}\r\n","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div\\r\\n    bsModal\\r\\n    #deleteModal=\\\"bs-modal\\\"\\r\\n    class=\\\"modal fade\\\"\\r\\n    tabindex=\\\"-1\\\"\\r\\n    role=\\\"dialog\\\"\\r\\n    aria-labelledby=\\\"myModalLabel\\\"\\r\\n    aria-hidden=\\\"true\\\"\\r\\n  >\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-body text-center\\\">\\r\\n          Do you want to delete this record?\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer justify-content-around\\\">\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-secondary\\\"\\r\\n            (click)=\\\"deleteModal.hide()\\\"\\r\\n          >\\r\\n            No! Cancel.\\r\\n          </button>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-primary\\\"\\r\\n            (click)=\\\"deleteProduct()\\\"\\r\\n          >\\r\\n            Yes! Delete.\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div\\r\\n    bsModal\\r\\n    #approveModal=\\\"bs-modal\\\"\\r\\n    class=\\\"modal fade\\\"\\r\\n    tabindex=\\\"-1\\\"\\r\\n    role=\\\"dialog\\\"\\r\\n    aria-labelledby=\\\"myModalLabel\\\"\\r\\n    aria-hidden=\\\"true\\\"\\r\\n  >\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-body text-center\\\">\\r\\n          Do you want to approve this retailer?\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer justify-content-around\\\">\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-secondary\\\"\\r\\n            (click)=\\\"approveOrReject(false)\\\"\\r\\n          >\\r\\n            No! Reject.\\r\\n          </button>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-primary\\\"\\r\\n            (click)=\\\"approveOrReject(true)\\\"\\r\\n          >\\r\\n            Yes! Approve.\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div\\r\\n      class=\\\"card-header\\\"\\r\\n      style=\\\"display: flex; justify-content: space-between\\\"\\r\\n    >\\r\\n      <h2>Retailer Details</h2>\\r\\n      <span>\\r\\n        <div>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-outline-primary\\\"\\r\\n            data-toggle=\\\"modal\\\"\\r\\n            (click)=\\\"addProductModal.show()\\\"\\r\\n          >\\r\\n            Add new product\\r\\n          </button>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-primary\\\"\\r\\n            data-toggle=\\\"modal\\\"\\r\\n            (click)=\\\"myModal.show()\\\"\\r\\n          >\\r\\n            Edit\\r\\n          </button>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-warning\\\"\\r\\n            data-toggle=\\\"modal\\\"\\r\\n            [disabled]=\\\"disableButton\\\"\\r\\n            (click)=\\\"openApproveModal()\\\"\\r\\n          >\\r\\n            {{ btnText }}\\r\\n          </button>\\r\\n          <!-- <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn btn-danger\\\"\\r\\n          data-toggle=\\\"modal\\\"\\r\\n          (click)=\\\"deleteModal.show()\\\"\\r\\n        >\\r\\n          Delete\\r\\n        </button> -->\\r\\n        </div>\\r\\n      </span>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div style=\\\"display: flex; justify-content: space-between\\\">\\r\\n              <h4>Basic details</h4>\\r\\n            </div>\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td>ID</td>\\r\\n                  <td>{{ details?.id }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Username</td>\\r\\n                  <td>{{ details?.attributes?.username }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Profile pic</td>\\r\\n                  <td>\\r\\n                    <a\\r\\n                      href=\\\"{{ baseURL }}{{\\r\\n                        details?.attributes?.prof_pic?.data?.attributes?.url\\r\\n                      }}\\\"\\r\\n                      target=\\\"_blank\\\"\\r\\n                      ><img\\r\\n                        class=\\\"card-img-top\\\"\\r\\n                        style=\\\"width: 150px; height: 150px\\\"\\r\\n                        src=\\\"{{ baseURL }}{{\\r\\n                          details?.attributes?.prof_pic?.data?.attributes?.url\\r\\n                        }}\\\"\\r\\n                        alt=\\\"Card image cap\\\"\\r\\n                    /></a>\\r\\n                    <div style=\\\"display: flex; justify-content: space-between\\\">\\r\\n                      <input\\r\\n                        type=\\\"file\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"prof_pic\\\"\\r\\n                        accept=\\\".jpg,.jpeg,.JPEG,.png\\\"\\r\\n                        name=\\\"prof_pic\\\"\\r\\n                        (change)=\\\"onChange($event)\\\"\\r\\n                        placeholder=\\\"Choose image\\\"\\r\\n                      />\\r\\n                      <button\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"btn btn-outline-primary\\\"\\r\\n                        data-toggle=\\\"modal\\\"\\r\\n                        (click)=\\\"uploadProfPic()\\\"\\r\\n                      >\\r\\n                        Upload\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Name</td>\\r\\n                  <td>\\r\\n                    {{ details?.attributes?.Name }}\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Contact number</td>\\r\\n                  <td>{{ details?.attributes?.ContactNumber }}</td>\\r\\n                </tr>\\r\\n                <!-- <tr>\\r\\n                  <td>Email</td>\\r\\n                  <td>\\r\\n                    {{ details?.attributes?.email }}\\r\\n                  </td>\\r\\n                </tr> -->\\r\\n                <tr>\\r\\n                  <td>Village</td>\\r\\n                  <td>\\r\\n                    {{ details?.attributes?.village?.data?.attributes?.Name }}\\r\\n                  </td>\\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n                  <td>LGA</td>\\r\\n                  <td>{{ details?.attributes?.lga?.data?.attributes.Name }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>State</td>\\r\\n                  <td>\\r\\n                    {{\\r\\n                      details?.attributes?.lga?.data?.attributes?.state?.data\\r\\n                        ?.attributes?.Name\\r\\n                    }}\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Retailer Category</td>\\r\\n                  <td>\\r\\n                    {{\\r\\n                      details?.attributes?.retailer_categories?.data[0]\\r\\n                        ?.attributes?.CategoryName\\r\\n                    }}\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Bio</td>\\r\\n                  <td style=\\\"width: 60%\\\">{{ details?.attributes?.Bio }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Location</td>\\r\\n                  <td><a\\r\\n                    href=\\\"https://www.google.com/maps/search/?api=1&query={{\\r\\n                      details.attributes?.Latitude}}%2C{{ details.attributes?.Longitude }}\\\"\\r\\n                    target=\\\"_blank\\\"\\r\\n                    >Click here to view location</a\\r\\n                  ></td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Created at</td>\\r\\n                  <td>{{ dateConvertor(details?.attributes?.createdAt) }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Last updated</td>\\r\\n                  <td>{{ dateConvertor(details?.attributes?.updatedAt) }}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\">\\r\\n          <h4>Products</h4>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div\\r\\n              class=\\\"col-4\\\"\\r\\n              *ngFor=\\\"let item of details?.attributes?.retailer_products?.data\\\"\\r\\n            >\\r\\n              <div class=\\\"card\\\">\\r\\n                <a\\r\\n                  href=\\\"{{\\r\\n                    imgUrl(item?.attributes?.Images?.data[0]?.attributes?.url)\\r\\n                  }}\\\"\\r\\n                  target=\\\"_blank\\\"\\r\\n                >\\r\\n                  <img\\r\\n                    class=\\\"card-img-top\\\"\\r\\n                    height=\\\"100\\\"\\r\\n                    width=\\\"200\\\"\\r\\n                    src=\\\"{{\\r\\n                      imgUrl(item?.attributes?.Images?.data[0]?.attributes?.url)\\r\\n                    }}\\\"\\r\\n                    alt=\\\"Card image cap\\\"\\r\\n                  />\\r\\n                </a>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                  <div style=\\\"display: flex; justify-content: space-between\\\">\\r\\n                    <h5 class=\\\"card-title\\\">\\r\\n                      Item : {{ item?.attributes?.ItemName }}\\r\\n                    </h5>\\r\\n                    <!-- <button\\r\\n                      type=\\\"button\\\"\\r\\n                      *ngIf=\\\"item?.attributes?.soil_test_results?.data[0]\\\"\\r\\n                      class=\\\"btn btn-primary\\\"\\r\\n                      data-toggle=\\\"modal\\\"\\r\\n                      (click)=\\\"openModal(item, 'edit')\\\"\\r\\n                    >\\r\\n                      Edit results\\r\\n                    </button>\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      *ngIf=\\\"!item?.attributes?.soil_test_results?.data[0]\\\"\\r\\n                      class=\\\"btn btn-primary\\\"\\r\\n                      data-toggle=\\\"modal\\\"\\r\\n                      (click)=\\\"openModal(item, 'add')\\\"\\r\\n                    >\\r\\n                      Add results\\r\\n                    </button> -->\\r\\n                  </div>\\r\\n                  <p class=\\\"card-text\\\">\\r\\n                    Price :\\r\\n                    {{ item?.attributes?.Price }} per\\r\\n                    {{ item?.attributes?.Unit }}\\r\\n                  </p>\\r\\n                  <!-- <p class=\\\"card-text\\\">\\r\\n                    Created on :\\r\\n                    {{ dateConvertor(item?.attributes?.createdAt) }}\\r\\n                  </p>\\r\\n                  <p class=\\\"card-text\\\">\\r\\n                    Added by :\\r\\n                    {{\\r\\n                      item?.attributes?.SampleAddedBy?.data?.attributes?.Name\\r\\n                    }}\\r\\n                  </p> -->\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    data-toggle=\\\"modal\\\"\\r\\n                    (click)=\\\"openModal(item, 'edit')\\\"\\r\\n                  >\\r\\n                    Edit\\r\\n                  </button>\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    class=\\\"btn btn-danger\\\"\\r\\n                    data-toggle=\\\"modal\\\"\\r\\n                    (click)=\\\"openDeleteModal(item)\\\"\\r\\n                  >\\r\\n                    Delete\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div\\r\\n        bsModal\\r\\n        #myModal=\\\"bs-modal\\\"\\r\\n        class=\\\"modal fade\\\"\\r\\n        tabindex=\\\"-1\\\"\\r\\n        role=\\\"dialog\\\"\\r\\n        aria-labelledby=\\\"myModalLabel\\\"\\r\\n        aria-hidden=\\\"true\\\"\\r\\n      >\\r\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n          <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <h4 class=\\\"modal-title\\\">Edit details</h4>\\r\\n              <button\\r\\n                type=\\\"button\\\"\\r\\n                class=\\\"close\\\"\\r\\n                (click)=\\\"myModal.hide()\\\"\\r\\n                aria-label=\\\"Close\\\"\\r\\n              >\\r\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n              </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n              <form [formGroup]=\\\"agentForm\\\" (ngSubmit)=\\\"FormSubmit()\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"Name\\\">Name</label>\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"Name\\\"\\r\\n                        name=\\\"Name\\\"\\r\\n                        formControlName=\\\"Name\\\"\\r\\n                        placeholder=\\\"Enter Name\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"market\\\">Contact Number</label>\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"ContactNumber\\\"\\r\\n                        name=\\\"ContactNumber\\\"\\r\\n                        formControlName=\\\"ContactNumber\\\"\\r\\n                        placeholder=\\\"Enter contact number\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                    <!-- <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"email\\\">email</label>\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"email\\\"\\r\\n                        name=\\\"email\\\"\\r\\n                        formControlName=\\\"email\\\"\\r\\n                        placeholder=\\\"Enter email\\\"\\r\\n                      />\\r\\n                    </div> -->\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"retailer_categories\\\">Retailer category</label>\\r\\n                      <select\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"retailer_categories\\\"\\r\\n                        required\\r\\n                        ngModel\\r\\n                        name=\\\"retailer_categories\\\"\\r\\n                        formControlName=\\\"retailer_categories\\\"\\r\\n                      >\\r\\n                        <option value=\\\"\\\" disabled selected hidden>\\r\\n                          Choose...\\r\\n                        </option>\\r\\n                        <option\\r\\n                          *ngFor=\\\"let item of Retailers\\\"\\r\\n                          value=\\\"{{ item.id }}\\\"\\r\\n                        >\\r\\n                          {{ item.attributes.CategoryName }}\\r\\n                        </option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"Bio\\\">Bio</label>\\r\\n                      <textarea\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"Bio\\\"\\r\\n                        name=\\\"Bio\\\"\\r\\n                        formControlName=\\\"Bio\\\"\\r\\n                        placeholder=\\\"Enter Bio\\\"\\r\\n                      ></textarea>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"password\\\">Password</label>\\r\\n                      <input\\r\\n                        type=\\\"password\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"password\\\"\\r\\n                        name=\\\"password\\\"\\r\\n                        formControlName=\\\"password\\\"\\r\\n                        placeholder=\\\"Enter password\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"state\\\">State</label>\\r\\n                      <select\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"state\\\"\\r\\n                        (change)=\\\"filterLGA($event)\\\"\\r\\n                        required\\r\\n                        ngModel\\r\\n                        name=\\\"state\\\"\\r\\n                        formControlName=\\\"state\\\"\\r\\n                      >\\r\\n                        <option value=\\\"\\\" disabled selected hidden>\\r\\n                          Choose...\\r\\n                        </option>\\r\\n                        <option\\r\\n                          *ngFor=\\\"let item of States\\\"\\r\\n                          value=\\\"{{ item.id }}\\\"\\r\\n                        >\\r\\n                          {{ item.attributes.Name }}\\r\\n                        </option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"lga\\\">LGA</label>\\r\\n                      <select\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"lga\\\"\\r\\n                        (change)=\\\"filterVillage($event)\\\"\\r\\n                        required\\r\\n                        ngModel\\r\\n                        name=\\\"lga\\\"\\r\\n                        formControlName=\\\"lga\\\"\\r\\n                      >\\r\\n                        <option value=\\\"\\\" disabled selected hidden>\\r\\n                          Choose...\\r\\n                        </option>\\r\\n                        <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\r\\n                          {{ item.attributes.Name }}\\r\\n                        </option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"village\\\">Village</label>\\r\\n                      <select\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"village\\\"\\r\\n                        required\\r\\n                        ngModel\\r\\n                        name=\\\"village\\\"\\r\\n                        formControlName=\\\"village\\\"\\r\\n                      >\\r\\n                        <option value=\\\"\\\" disabled selected hidden>\\r\\n                          Choose...\\r\\n                        </option>\\r\\n                        <option\\r\\n                          *ngFor=\\\"let item of Villages\\\"\\r\\n                          value=\\\"{{ item.id }}\\\"\\r\\n                        >\\r\\n                          {{ item.attributes.Name }}\\r\\n                        </option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"Latitude\\\">Latitude</label>\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"Latitude\\\"\\r\\n                        name=\\\"Latitude\\\"\\r\\n                        formControlName=\\\"Latitude\\\"\\r\\n                        placeholder=\\\"Enter Latitude\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"Longitude\\\">Longitude</label>\\r\\n                      <input\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"Longitude\\\"\\r\\n                        required\\r\\n                        ngModel\\r\\n                        name=\\\"Longitude\\\"\\r\\n                        formControlName=\\\"Longitude\\\"\\r\\n                        placeholder=\\\"Enter Longitude\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      class=\\\"btn btn-secondary\\\"\\r\\n                      (click)=\\\"myModal.hide()\\\"\\r\\n                    >\\r\\n                      Close\\r\\n                    </button>\\r\\n                    <button\\r\\n                      type=\\\"submit\\\"\\r\\n                      class=\\\"btn btn-primary ml-2\\\"\\r\\n                      [disabled]=\\\"btnLoading || !agentForm.valid\\\"\\r\\n                    >\\r\\n                      <span\\r\\n                        *ngIf=\\\"btnLoading\\\"\\r\\n                        class=\\\"spinner-border spinner-border-sm\\\"\\r\\n                        role=\\\"status\\\"\\r\\n                        aria-hidden=\\\"true\\\"\\r\\n                      ></span>\\r\\n                      Save changes\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div\\r\\n        bsModal\\r\\n        #resultModal=\\\"bs-modal\\\"\\r\\n        class=\\\"modal fade\\\"\\r\\n        tabindex=\\\"-1\\\"\\r\\n        role=\\\"dialog\\\"\\r\\n        aria-labelledby=\\\"resultModalLabel\\\"\\r\\n        aria-hidden=\\\"true\\\"\\r\\n      >\\r\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n          <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <h4 class=\\\"modal-title\\\">Edit product</h4>\\r\\n              <button\\r\\n                type=\\\"button\\\"\\r\\n                class=\\\"close\\\"\\r\\n                (click)=\\\"resultModal.hide()\\\"\\r\\n                aria-label=\\\"Close\\\"\\r\\n              >\\r\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n              </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n              <form [formGroup]=\\\"resultForm\\\" (ngSubmit)=\\\"ResultSubmit()\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"id\\\">ID</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"soil_test_sample\\\"\\r\\n                    disabled=\\\"true\\\"\\r\\n                    name=\\\"id\\\"\\r\\n                    formControlName=\\\"id\\\"\\r\\n                  />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"itemName\\\">Item name</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"itemName\\\"\\r\\n                    name=\\\"itemName\\\"\\r\\n                    formControlName=\\\"itemName\\\"\\r\\n                  />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"price\\\">Price</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"price\\\"\\r\\n                    name=\\\"price\\\"\\r\\n                    formControlName=\\\"price\\\"\\r\\n                    placeholder=\\\"Enter value\\\"\\r\\n                  />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"unit\\\">Unit</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"unit\\\"\\r\\n                    name=\\\"unit\\\"\\r\\n                    formControlName=\\\"unit\\\"\\r\\n                    placeholder=\\\"Enter value\\\"\\r\\n                  />\\r\\n                </div>\\r\\n                <button\\r\\n                  type=\\\"button\\\"\\r\\n                  class=\\\"btn btn-secondary\\\"\\r\\n                  (click)=\\\"resultModal.hide()\\\"\\r\\n                >\\r\\n                  Close\\r\\n                </button>\\r\\n                <button\\r\\n                  type=\\\"submit\\\"\\r\\n                  class=\\\"btn btn-primary ml-2\\\"\\r\\n                  [disabled]=\\\"btnLoading\\\"\\r\\n                >\\r\\n                  <span\\r\\n                    *ngIf=\\\"btnLoading\\\"\\r\\n                    class=\\\"spinner-border spinner-border-sm\\\"\\r\\n                    role=\\\"status\\\"\\r\\n                    aria-hidden=\\\"true\\\"\\r\\n                  ></span>\\r\\n                  Save changes\\r\\n                </button>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div\\r\\n        bsModal\\r\\n        #addProductModal=\\\"bs-modal\\\"\\r\\n        class=\\\"modal fade\\\"\\r\\n        tabindex=\\\"-1\\\"\\r\\n        role=\\\"dialog\\\"\\r\\n        aria-labelledby=\\\"productModalLabel\\\"\\r\\n        aria-hidden=\\\"true\\\"\\r\\n      >\\r\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n          <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <h4 class=\\\"modal-title\\\">Add product</h4>\\r\\n              <button\\r\\n                type=\\\"button\\\"\\r\\n                class=\\\"close\\\"\\r\\n                (click)=\\\"addProductModal.hide()\\\"\\r\\n                aria-label=\\\"Close\\\"\\r\\n              >\\r\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n              </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n              <form [formGroup]=\\\"productForm\\\" (ngSubmit)=\\\"ProductSubmit()\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"itemName\\\">Item name</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"itemName\\\"\\r\\n                    name=\\\"itemName\\\"\\r\\n                    formControlName=\\\"itemName\\\"\\r\\n                  />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"price\\\">Price</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"price\\\"\\r\\n                    name=\\\"price\\\"\\r\\n                    formControlName=\\\"price\\\"\\r\\n                    placeholder=\\\"Enter value\\\"\\r\\n                  />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"unit\\\">Unit</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"unit\\\"\\r\\n                    name=\\\"unit\\\"\\r\\n                    formControlName=\\\"unit\\\"\\r\\n                    placeholder=\\\"Enter value\\\"\\r\\n                  />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"Image\\\">Image</label>\\r\\n                  <input\\r\\n                    type=\\\"file\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"Image\\\"\\r\\n                    accept=\\\".jpg,.jpeg,.JPEG,.png\\\"\\r\\n                    name=\\\"Image\\\"\\r\\n                    (change)=\\\"onChange($event)\\\"\\r\\n                    formControlName=\\\"Image\\\"\\r\\n                    placeholder=\\\"Choose image\\\"\\r\\n                  />\\r\\n                </div>\\r\\n                <button\\r\\n                  type=\\\"button\\\"\\r\\n                  class=\\\"btn btn-secondary\\\"\\r\\n                  (click)=\\\"addProductModal.hide()\\\"\\r\\n                >\\r\\n                  Close\\r\\n                </button>\\r\\n                <button\\r\\n                  type=\\\"submit\\\"\\r\\n                  class=\\\"btn btn-primary ml-2\\\"\\r\\n                  [disabled]=\\\"btnLoading || !productForm.valid\\\"\\r\\n                >\\r\\n                  <span\\r\\n                    *ngIf=\\\"btnLoading\\\"\\r\\n                    class=\\\"spinner-border spinner-border-sm\\\"\\r\\n                    role=\\\"status\\\"\\r\\n                    aria-hidden=\\\"true\\\"\\r\\n                  ></span>\\r\\n                  Save changes\\r\\n                </button>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { RetailersComponent } from './retailers.component';\r\n\r\n// Dropdowns Component\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\n// Buttons Routing\r\nimport { RetailersRoutingModule } from './retailers-routing.module';\r\n\r\n// Angular\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { RetailerDetailComponent } from './retailer-detail.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TabsModule,\r\n    ReactiveFormsModule,\r\n    AgGridModule.withComponents([]),\r\n    RetailersRoutingModule,\r\n    BsDropdownModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    RetailersComponent,\r\n    RetailerDetailComponent\r\n  ]\r\n})\r\nexport class RetailersModule { }\r\n"]}