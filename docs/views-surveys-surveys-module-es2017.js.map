{"version":3,"sources":["./src/app/views/surveys/surveys-detail.component.html","./src/app/views/surveys/surveys.module.ts","./src/app/views/surveys/surveys.component.html","./src/app/views/surveys/surveys-add.component.ts","./src/app/views/surveys/surveys-add.component.html","./src/app/views/surveys/surveys-routing.module.ts","./src/app/views/surveys/surveys.component.ts","./src/app/views/surveys/surveys-detail.component.ts"],"names":[],"mappings":"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","file":"views-surveys-surveys-module-es2017.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\r\\n        <h2>Survey details</h2>\\r\\n        <span>\\r\\n          <div>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" (click)=\\\"myModal.show()\\\">\\r\\n              Create Survey\\r\\n            </button>\\r\\n            <!-- <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-danger\\\"\\r\\n            data-toggle=\\\"modal\\\"\\r\\n            (click)=\\\"deleteModal.show()\\\"\\r\\n          >\\r\\n            Delete\\r\\n          </button> -->\\r\\n          </div>\\r\\n        </span>\\r\\n      </div>\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <form [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"FormSubmit()\\\" style=\\\"width: 100%;\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"title\\\">Survey Title</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title\\\" name=\\\"title\\\" formControlName=\\\"title\\\"\\r\\n                placeholder=\\\"Enter survey title\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"title\\\">Survey Description</label>\\r\\n              <textarea type=\\\"text\\\" class=\\\"form-control\\\" rows=\\\"4\\\" id=\\\"description\\\" name=\\\"description\\\"\\r\\n                formControlName=\\\"description\\\" placeholder=\\\"Enter survey description\\\"></textarea>\\r\\n            </div>\\r\\n            <h6>Survey Questions</h6>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <div style=\\\"display: flex; justify-content: space-between\\\">\\r\\n                      <h5 class=\\\"card-title\\\">What is your category?</h5>\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" data-toggle=\\\"modal\\\">\\r\\n                        Delete\\r\\n                      </button>\\r\\n                    </div>\\r\\n                    <p class=\\\"card-text\\\">\\r\\n                      Question type : Dropdown\\r\\n                    </p>\\r\\n                    <p class=\\\"card-text\\\">\\r\\n                      Required : True\\r\\n                    </p>\\r\\n                    <p class=\\\"card-text\\\">\\r\\n                      Options : <span class=\\\"badge badge-success\\\">Farmer</span> <span\\r\\n                        class=\\\"badge badge-success\\\">Retailer</span>\\r\\n                    </p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"title\\\">Question</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"question\\\" name=\\\"question\\\" formControlName=\\\"question\\\"\\r\\n                    placeholder=\\\"Enter your question\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"title\\\">Question type</label>\\r\\n                  <select class=\\\"form-control\\\" id=\\\"question_type\\\" name=\\\"question_type\\\" formControlName=\\\"question_type\\\">\\r\\n                    <option value=\\\"\\\" disabled selected hidden>\\r\\n                      Choose...\\r\\n                    </option>\\r\\n                    <option value=\\\"text\\\">Text</option>\\r\\n                    <option value=\\\"dropdown\\\">Dropdown</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"title\\\">Field type</label>\\r\\n                  <select class=\\\"form-control\\\" id=\\\"question_type\\\" name=\\\"question_type\\\" formControlName=\\\"question_type\\\">\\r\\n                    <option value=\\\"\\\" disabled selected hidden>\\r\\n                      Choose...\\r\\n                    </option>\\r\\n                    <option value=\\\"long\\\">Long</option>\\r\\n                    <option value=\\\"short\\\">Short</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"title\\\">Options</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"question\\\" name=\\\"question\\\" formControlName=\\\"question\\\"\\r\\n                    placeholder=\\\"Enter options seperated by comma ( , )\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"form-check\\\">\\r\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"flexSwitchCheckDefault\\\">\\r\\n                <label class=\\\"form-check-label\\\" for=\\\"flexSwitchCheckDefault\\\">Required field</label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-primary ml-2\\\">\\r\\n              <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n              Add question\\r\\n            </button>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\";","import { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { SurveysComponent } from \"./surveys.component\";\r\n// Dropdowns Component\r\nimport { BsDropdownModule } from \"ngx-bootstrap/dropdown\";\r\nimport { TabsModule } from \"ngx-bootstrap/tabs\";\r\n// Buttons Routing\r\nimport { SurveysRoutingModule } from \"./surveys-routing.module\";\r\n// Angular\r\nimport { AgGridModule } from \"ag-grid-angular\";\r\nimport { ModalModule } from \"ngx-bootstrap/modal\";\r\nimport { SurveyDetailsComponent } from \"./surveys-detail.component\";\r\nimport { NewSurveyComponent } from \"./surveys-add.component\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TabsModule,\r\n    ReactiveFormsModule,\r\n    AgGridModule.withComponents([]),\r\n    SurveysRoutingModule,\r\n    BsDropdownModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    FormsModule,\r\n  ],\r\n  declarations: [SurveysComponent, SurveyDetailsComponent, NewSurveyComponent],\r\n})\r\nexport class SurveysModule {}\r\n","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\r\\n      <h2>Surveys</h2>\\r\\n      <div>\\r\\n        <!-- <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\" [disabled]=\\\"disableButton\\\"\\r\\n          (click)=\\\"deleteModal.show()\\\">\\r\\n          Delete\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" [disabled]=\\\"disableButton\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\"\\r\\n          (click)=\\\"openModal('Edit')\\\">\\r\\n          Edit\\r\\n        </button> -->\\r\\n        <a type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" href=\\\"/#/surveys/new_survey\\\">\\r\\n          Add New Survey\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- <p class=\\\"text-muted mx-3\\\">\\r\\n      To approve a crop price simply select and edit the record without\\r\\n      modifying the data\\r\\n    </p> -->\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <ag-grid-angular #agGrid style=\\\"width: 100%; height: 65vh\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\r\\n            [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\r\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\" (gridReady)=\\\"onGridReady($event)\\\" animateRows=\\\"true\\\">\\r\\n          </ag-grid-angular>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DataService } from \"../../data.service\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { dateConverter } from \"../../constants/columnMetadata\";\r\n\r\n@Component({\r\n  templateUrl: \"surveys-add.component.html\",\r\n})\r\nexport class NewSurveyComponent implements OnInit {\r\n  constructor(\r\n    public dataservice: DataService,\r\n    private activatedRouter: ActivatedRoute,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  id: any;\r\n  loading = true;\r\n  btnLoading = false;\r\n  isText = true;\r\n  dateConverter = dateConverter;\r\n  questions = [];\r\n  SurveyDescription;\r\n  SurveyTitle;\r\n  addForm = this.fb.group({\r\n    FieldName: [\"\", Validators.required],\r\n    __typename: [\"\", Validators.required],\r\n    FieldType: [\"\", Validators.required],\r\n    FieldKey: [\"\"],\r\n    Mandatory: [false],\r\n    Values: [\"\"],\r\n  });\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRouter.params.subscribe((params) => {\r\n      this.id = params[\"id\"];\r\n    });\r\n  }\r\n  questionSubmit() {\r\n    console.log(this.addForm.value);\r\n    this.addForm.value.FieldKey = this.addForm.value.FieldName.replace(\r\n      /[^A-Z0-9]/gi,\r\n      \"_\"\r\n    );\r\n    if (this.addForm?.value?.Values?.length > 0) {\r\n      this.addForm.value.Values = this.addForm?.value?.Values?.split(\",\");\r\n    }\r\n    this.questions.push(this.addForm.value);\r\n    this.addForm = this.fb.group({\r\n      FieldName: [\"\", Validators.required],\r\n      __typename: [\"\", Validators.required],\r\n      FieldType: [\"\", Validators.required],\r\n      FieldKey: [\"\"],\r\n      Mandatory: [false],\r\n      Values: [\"\"],\r\n    });\r\n    console.log(this.questions);\r\n  }\r\n  onQuestionTypeChange(event) {\r\n    if (event.target.value == \"ComponentSurveySurveyTextComponent\") {\r\n      this.isText = true;\r\n    } else {\r\n      this.isText = false;\r\n    }\r\n    this.addForm.value.FieldType = \"\";\r\n    console.log(event.target.value, this.isText);\r\n  }\r\n  deleteQuestion(item) {\r\n    console.log(item);\r\n    this.questions.splice(item, 1);\r\n  }\r\n  onSurveyDescriptionChange(event) {\r\n    this.SurveyDescription = event.target.value;\r\n  }\r\n  onSurveyTitleChange(event) {\r\n    this.SurveyTitle = event.target.value;\r\n  }\r\n  formSubmit() {\r\n    let resp = {};\r\n    console.log(this.addForm.value);\r\n    this.dataservice\r\n      .createSurveys(this.SurveyTitle, this.SurveyDescription, this.questions)\r\n      .subscribe((result: any) => {\r\n        resp = result.data;\r\n        console.log(\"response\", result);\r\n        if (result.data.createSurveyForm) {\r\n          this.toastr.success(\"Farm demo added successfully!\");\r\n          this.router.navigate([\"/surveys/all\"]);\r\n        } else {\r\n          this.toastr.error(\"Failed. Please check the fields!\");\r\n        }\r\n      });\r\n  }\r\n}\r\n","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\r\\n      <h2>Add New Survey</h2>\\r\\n      <span>\\r\\n        <div>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"formSubmit()\\\">\\r\\n            Create Survey\\r\\n          </button>\\r\\n        </div>\\r\\n      </span>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"SurveyTitle\\\">Survey Title</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"SurveyTitle\\\" name=\\\"SurveyTitle\\\" (change)=\\\"onSurveyTitleChange($event)\\\" placeholder=\\\"Enter survey title\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"SurveyDescription\\\">Survey Description</label>\\r\\n            <textarea type=\\\"text\\\" class=\\\"form-control\\\" rows=\\\"4\\\" id=\\\"SurveyDescription\\\" (change)=\\\"onSurveyDescriptionChange($event)\\\" name=\\\"SurveyDescription\\\"\\r\\n              placeholder=\\\"Enter survey description\\\"></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <h6 *ngIf=\\\"questions.length > 0\\\">Survey Questions</h6>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"questions.length > 0\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\" *ngFor=\\\"let item of questions;let indexOfelement=index;\\\">\\r\\n              <div style=\\\"display: flex; justify-content: space-between\\\">\\r\\n                <h5 class=\\\"card-title\\\">{{item.FieldName}}</h5>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" data-toggle=\\\"modal\\\"\\r\\n                  (click)=\\\"deleteQuestion(indexOfelement)\\\">\\r\\n                  Delete\\r\\n                </button>\\r\\n              </div>\\r\\n              <p class=\\\"card-text\\\">\\r\\n                Question type : {{item.__typename}}\\r\\n              </p>\\r\\n              <p class=\\\"card-text\\\">\\r\\n                Required : {{item.Mandatory}}\\r\\n              </p>\\r\\n              <p *ngIf=\\\"item.Values\\\" class=\\\"card-text\\\">\\r\\n                Options : <span *ngFor=\\\"let option of item.Values\\\" class=\\\"badge badge-success mx-1\\\">{{option}}</span>\\r\\n              </p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row p-3\\\">\\r\\n        <form [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"questionSubmit()\\\" style=\\\"width: 100%;\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"FieldName\\\">Question</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"FieldName\\\" name=\\\"FieldName\\\" formControlName=\\\"FieldName\\\"\\r\\n                  placeholder=\\\"Enter your question\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"title\\\">Question type</label>\\r\\n                <select class=\\\"form-control\\\" id=\\\"__typename\\\" name=\\\"__typename\\\" (change)=\\\"onQuestionTypeChange($event)\\\"\\r\\n                  formControlName=\\\"__typename\\\">\\r\\n                  <option value=\\\"\\\" disabled selected hidden>\\r\\n                    Choose...\\r\\n                  </option>\\r\\n                  <option value=\\\"ComponentSurveySurveyTextComponent\\\">Text</option>\\r\\n                  <option value=\\\"ComponentSurveySurveySelectionComponent\\\">Dropdown</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"FieldType\\\">Field type</label>\\r\\n                <select class=\\\"form-control\\\" id=\\\"FieldType\\\" name=\\\"FieldType\\\" formControlName=\\\"FieldType\\\">\\r\\n                  <option value=\\\"\\\" disabled selected hidden>\\r\\n                    Choose...\\r\\n                  </option>\\r\\n                  <option *ngIf=\\\"isText\\\" value=\\\"TextLong\\\">Long answer</option>\\r\\n                  <option *ngIf=\\\"isText\\\" value=\\\"TextShort\\\">Short answer</option>\\r\\n                  <option *ngIf=\\\"!isText\\\" value=\\\"Selection\\\">Selection</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"!isText\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"Values\\\">Options</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Values\\\" name=\\\"Values\\\" formControlName=\\\"Values\\\"\\r\\n                  placeholder=\\\"Enter options seperated by comma ( , )\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"form-check\\\">\\r\\n              <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"Mandatory\\\" name=\\\"Mandatory\\\"\\r\\n                formControlName=\\\"Mandatory\\\">\\r\\n              <label class=\\\"form-check-label\\\" for=\\\"Mandatory\\\">Required field</label>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-outline-primary ml-2\\\" [disabled]=\\\"!addForm.valid\\\">\\r\\n            Add question\\r\\n          </button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NewSurveyComponent } from './surveys-add.component';\r\nimport { SurveyDetailsComponent } from './surveys-detail.component';\r\nimport { SurveysComponent } from './surveys.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    \r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'cropprices'\r\n      },\r\n      {\r\n        path: 'all',\r\n        // canActivate: [AuthGuard],\r\n        component: SurveysComponent,\r\n      },\r\n      {\r\n        path: 'new_survey',\r\n        // canActivate: [AuthGuard],\r\n        component: NewSurveyComponent,\r\n      },{\r\n        path: 'survey_details/:id',\r\n        // canActivate: [AuthGuard],\r\n        component: SurveyDetailsComponent,\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SurveysRoutingModule {}\r\n","import { Component } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DataService } from \"../../data.service\";\r\nimport { SurveysColumn } from \"../../constants/columnMetadata\";\r\n\r\n@Component({\r\n  templateUrl: \"surveys.component.html\",\r\n})\r\nexport class SurveysComponent {\r\n  rowSelection: string;\r\n  constructor(\r\n    public dataservice: DataService,\r\n    public router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.columnDefs = [...SurveysColumn];\r\n    this.rowSelection = \"single\";\r\n  }\r\n\r\n  loading = true;\r\n  btnLoading = false;\r\n  disableButton = true;\r\n  columnDefs = [];\r\n\r\n  cropPriceForm = this.fb.group({\r\n    crop: [\"\", Validators.required],\r\n    state: [\"\", Validators.required],\r\n    market: [\"\", Validators.required],\r\n    Price: [\"\", Validators.required],\r\n    Unit: [\"\", Validators.required],\r\n    Image: [\"\"],\r\n  });\r\n  rowData: any = [];\r\n  selectedRows: any = [];\r\n  selectedYear: any = new Date().getFullYear();\r\n  years: any = [];\r\n  private gridApi;\r\n  private gridColumnApi;\r\n  filter: any = {};\r\n  file: any = null;\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    console.log(this.router);\r\n    this.getSurveys();\r\n  }\r\n  getSurveys() {\r\n    this.dataservice.getSurveys().valueChanges.subscribe((result: any) => {\r\n      console.log(\"getSurveys\", result.data.surveyForms.data);\r\n      this.rowData = result.data.surveyForms.data;\r\n    });\r\n  }\r\n  \r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n  onRowClicked(event: any) {\r\n    console.log(\"row\", event.data);\r\n  }\r\n  onSelectionChanged(event: any) {\r\n    this.selectedRows = this.gridApi.getSelectedRows();\r\n    console.log(this.selectedRows);\r\n    this.router.navigate([\"/surveys/survey_details\", this.selectedRows[0].id], {\r\n      state: { data: this.selectedRows },\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DataService } from \"../../data.service\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { dateConverter } from \"../../constants/columnMetadata\";\r\n\r\n@Component({\r\n  templateUrl: \"surveys-detail.component.html\",\r\n})\r\nexport class SurveyDetailsComponent implements OnInit {\r\n  constructor(\r\n    public dataservice: DataService,\r\n    private activatedRouter: ActivatedRoute,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  id: any;\r\n  loading = true;\r\n  btnLoading = false;\r\n  rowData: any = [];\r\n\r\n  dateConverter = dateConverter;\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRouter.params.subscribe((params) => {\r\n      this.id = params[\"id\"];\r\n    });\r\n    this.getSurveyResults();\r\n  }\r\n  getSurveyResults() {\r\n    this.dataservice\r\n      .getSurveyResults(this.id)\r\n      .valueChanges.subscribe((result: any) => {\r\n        console.log(\"getSurveyResults\", result.data.surveyForms.data);\r\n        this.rowData = result.data.surveyForms.data;\r\n      });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}