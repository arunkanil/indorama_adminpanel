{"version":3,"sources":["./src/app/views/surveys/surveys-detail.component.html","./src/app/views/surveys/surveys.module.ts","./src/app/views/surveys/surveys.component.html","./src/app/views/surveys/surveys-add.component.ts","./src/app/views/surveys/surveys-add.component.html","./src/app/views/surveys/surveys-routing.module.ts","./src/app/views/surveys/surveys.component.ts","./src/app/views/surveys/surveys-detail.component.ts"],"names":[],"mappings":"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","file":"views-surveys-surveys-module-es2017.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div\\r\\n      class=\\\"card-header\\\"\\r\\n      style=\\\"display: flex; justify-content: space-between\\\"\\r\\n    >\\r\\n      <h2>Survey details</h2>\\r\\n      <span>\\r\\n        <div>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-primary\\\"\\r\\n            data-toggle=\\\"modal\\\"\\r\\n            (click)=\\\"downloadResponses()\\\"\\r\\n            [disabled]=\\\"btnLoading\\\"\\r\\n          >\\r\\n            <span\\r\\n              *ngIf=\\\"btnLoading\\\"\\r\\n              class=\\\"spinner-border spinner-border-sm\\\"\\r\\n              role=\\\"status\\\"\\r\\n              aria-hidden=\\\"true\\\"\\r\\n            ></span>\\r\\n            Download responses\\r\\n          </button>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-danger\\\"\\r\\n            data-toggle=\\\"modal\\\"\\r\\n            (click)=\\\"deleteModal.show()\\\"\\r\\n          >\\r\\n            Delete\\r\\n          </button>\\r\\n        </div>\\r\\n      </span>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row p-2\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"title\\\">Survey Title</label>\\r\\n          <h5>{{ questions?.attributes?.SurveyTitle }}</h5>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row p-2\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"title\\\">Survey Description</label>\\r\\n          <h5>{{ questions?.attributes?.SurveyDescription }}</h5>\\r\\n        </div>\\r\\n      </div>\\r\\n      <h6>Survey Questions</h6>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div\\r\\n              class=\\\"card-body\\\"\\r\\n              *ngFor=\\\"\\r\\n                let item of questions?.attributes?.Fields;\\r\\n                let indexOfelement = index\\r\\n              \\\"\\r\\n            >\\r\\n              <div style=\\\"display: flex; justify-content: space-between\\\">\\r\\n                <div>\\r\\n                  <h5 class=\\\"card-title\\\">{{ item.FieldName }}</h5>\\r\\n                  <p class=\\\"card-text\\\">\\r\\n                    Question type : {{ returnQuesType(item.__component) }}\\r\\n                  </p>\\r\\n                  <p class=\\\"card-text\\\">Field type : {{ item.FieldType }}</p>\\r\\n                  <p class=\\\"card-text\\\">Required : {{ item.Mandatory }}</p>\\r\\n                  <p *ngIf=\\\"item.Values\\\" class=\\\"card-text\\\">\\r\\n                    Options :\\r\\n                    <span\\r\\n                      *ngFor=\\\"let option of item.Values\\\"\\r\\n                      class=\\\"badge badge-success mx-1\\\"\\r\\n                      >{{ option }}</span\\r\\n                    >\\r\\n                  </p>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"chart-wrapper\\\">\\r\\n                <canvas\\r\\n                  baseChart\\r\\n                  class=\\\"chart\\\"\\r\\n                  [data]=\\\"returnChartdata(item.FieldKey)\\\"\\r\\n                  [labels]=\\\"returnChartLabels(item.FieldKey)\\\"\\r\\n                  [chartType]=\\\"pieChartType\\\"\\r\\n                  (chartClick)=\\\"chartClicked($event)\\\"\\r\\n                ></canvas>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div\\r\\n  bsModal\\r\\n  #deleteModal=\\\"bs-modal\\\"\\r\\n  class=\\\"modal fade\\\"\\r\\n  tabindex=\\\"-1\\\"\\r\\n  role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\"\\r\\n>\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body text-center\\\">\\r\\n        This will permanently delete the survey. Are you sure?\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer justify-content-around\\\">\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn btn-secondary\\\"\\r\\n          (click)=\\\"deleteModal.hide()\\\"\\r\\n        >\\r\\n          No! Cancel.\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deleteSurvey()\\\">\\r\\n          Yes! Delete.\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { AgGridModule } from \"ag-grid-angular\";\r\nimport { ModalModule } from \"ngx-bootstrap/modal\";\r\nimport { BsDropdownModule } from \"ngx-bootstrap/dropdown\";\r\nimport { TabsModule } from \"ngx-bootstrap/tabs\";\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { SurveysComponent } from \"./surveys.component\";\r\nimport { SurveysRoutingModule } from \"./surveys-routing.module\";\r\nimport { SurveyDetailsComponent } from \"./surveys-detail.component\";\r\nimport { NewSurveyComponent } from \"./surveys-add.component\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TabsModule,\r\n    ReactiveFormsModule,\r\n    AgGridModule.withComponents([]),\r\n    SurveysRoutingModule,\r\n    BsDropdownModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    FormsModule,\r\n    ChartsModule\r\n  ],\r\n  declarations: [SurveysComponent, SurveyDetailsComponent, NewSurveyComponent],\r\n})\r\nexport class SurveysModule {}\r\n","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div\\r\\n      class=\\\"card-header\\\"\\r\\n      style=\\\"display: flex; justify-content: space-between\\\"\\r\\n    >\\r\\n      <h2>Surveys</h2>\\r\\n      <div>\\r\\n        <!-- <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\" [disabled]=\\\"disableButton\\\"\\r\\n          (click)=\\\"deleteModal.show()\\\">\\r\\n          Delete\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" [disabled]=\\\"disableButton\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\"\\r\\n          (click)=\\\"openModal('Edit')\\\">\\r\\n          Edit\\r\\n        </button> -->\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn btn-primary\\\"\\r\\n          data-toggle=\\\"modal\\\"\\r\\n          (click)=\\\"goToNewSurvey()\\\"\\r\\n        >\\r\\n          Add New Survey\\r\\n      </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- <p class=\\\"text-muted mx-3\\\">\\r\\n      To approve a crop price simply select and edit the record without\\r\\n      modifying the data\\r\\n    </p> -->\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <ag-grid-angular\\r\\n            #agGrid\\r\\n            style=\\\"width: 100%; height: 65vh\\\"\\r\\n            id=\\\"myGrid\\\"\\r\\n            class=\\\"ag-theme-alpine\\\"\\r\\n            [columnDefs]=\\\"columnDefs\\\"\\r\\n            [rowData]=\\\"rowData\\\"\\r\\n            [rowSelection]=\\\"rowSelection\\\"\\r\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\r\\n            (gridReady)=\\\"onGridReady($event)\\\"\\r\\n            animateRows=\\\"true\\\"\\r\\n          >\\r\\n          </ag-grid-angular>\\r\\n          <span class=\\\"float-left mt-3\\\">{{from}} to {{to}}  of {{meta?.pagination?.total}}</span>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            [disabled]=\\\"disableNextButton\\\"\\r\\n            class=\\\"btn btn-primary float-right m-2\\\"\\r\\n            (click)=\\\"loadNext()\\\"\\r\\n          >\\r\\n            Next\\r\\n          </button>\\r\\n          <span class=\\\"float-right mt-3\\\"\\r\\n            >Page {{ meta?.pagination?.page }} of\\r\\n            {{ meta?.pagination?.pageCount }}</span\\r\\n          >\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            [disabled]=\\\"disablePrevButton\\\"\\r\\n            class=\\\"btn btn-primary float-right m-2\\\"\\r\\n            (click)=\\\"loadPrev()\\\"\\r\\n          >\\r\\n            Prev\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DataService } from \"../../data.service\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { dateConverter } from \"../../constants/columnMetadata\";\r\n\r\n@Component({\r\n  templateUrl: \"surveys-add.component.html\",\r\n})\r\nexport class NewSurveyComponent implements OnInit {\r\n  constructor(\r\n    public dataservice: DataService,\r\n    private activatedRouter: ActivatedRoute,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  id: any;\r\n  loading = true;\r\n  btnLoading = false;\r\n  isText = true;\r\n  dateConverter = dateConverter;\r\n  questions = [];\r\n  SurveyDescription;\r\n  SurveyTitle;\r\n  addForm = this.fb.group({\r\n    FieldName: [\"\", Validators.required],\r\n    __typename: [\"\", Validators.required],\r\n    FieldType: [\"\", Validators.required],\r\n    FieldKey: [\"\"],\r\n    Mandatory: [false],\r\n    Values: [\"\"],\r\n  });\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRouter.params.subscribe((params) => {\r\n      this.id = params[\"id\"];\r\n    });\r\n  }\r\n  questionSubmit() {\r\n    console.log(this.addForm.value);\r\n    this.addForm.value.FieldKey = this.addForm.value.FieldName.replace(\r\n      /[^A-Z0-9]/gi,\r\n      \"_\"\r\n    );\r\n    if (this.addForm?.value?.Values?.length > 0) {\r\n      this.addForm.value.Values = this.addForm?.value?.Values?.split(\",\");\r\n    }\r\n    this.questions.push(this.addForm.value);\r\n    this.addForm = this.fb.group({\r\n      FieldName: [\"\", Validators.required],\r\n      __typename: [\"\", Validators.required],\r\n      FieldType: [\"\", Validators.required],\r\n      FieldKey: [\"\"],\r\n      Mandatory: [false],\r\n      Values: [\"\"],\r\n    });\r\n    console.log(this.questions);\r\n  }\r\n  onQuestionTypeChange(event) {\r\n    if (event.target.value == \"ComponentSurveySurveyTextComponent\") {\r\n      this.isText = true;\r\n    } else {\r\n      this.isText = false;\r\n    }\r\n    this.addForm.value.FieldType = \"\";\r\n    console.log(event.target.value, this.isText);\r\n  }\r\n  deleteQuestion(item) {\r\n    console.log(item);\r\n    this.questions.splice(item, 1);\r\n  }\r\n  onSurveyDescriptionChange(event) {\r\n    this.SurveyDescription = event.target.value;\r\n  }\r\n  onSurveyTitleChange(event) {\r\n    this.SurveyTitle = event.target.value;\r\n  }\r\n  formSubmit() {\r\n    let resp = {};\r\n    console.log(this.addForm.value);\r\n    if (this.SurveyTitle && this.SurveyDescription) {\r\n      this.dataservice\r\n        .createSurveys(this.SurveyTitle, this.SurveyDescription, this.questions)\r\n        .subscribe(\r\n          (result: any) => {\r\n            resp = result.data;\r\n            console.log(\"response\", result);\r\n            if (result.data.createSurveyForm) {\r\n              this.toastr.success(\"Farm demo added successfully!\");\r\n              this.router.navigate([\"/surveys/all\"]);\r\n            }\r\n          },\r\n          (error) => {\r\n            this.toastr.error(\"Failed. Please check the fields!\");\r\n          }\r\n        );\r\n    } else {\r\n      this.toastr.error(\"Please add both title & Description\");\r\n    }\r\n  }\r\n}\r\n","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\r\\n      <h2>Add New Survey</h2>\\r\\n      <span>\\r\\n        <div>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"formSubmit()\\\">\\r\\n            Create Survey\\r\\n          </button>\\r\\n        </div>\\r\\n      </span>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"SurveyTitle\\\">Survey Title</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"SurveyTitle\\\" name=\\\"SurveyTitle\\\" (change)=\\\"onSurveyTitleChange($event)\\\" placeholder=\\\"Enter survey title\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"SurveyDescription\\\">Survey Description</label>\\r\\n            <textarea type=\\\"text\\\" class=\\\"form-control\\\" rows=\\\"4\\\" id=\\\"SurveyDescription\\\" (change)=\\\"onSurveyDescriptionChange($event)\\\" name=\\\"SurveyDescription\\\"\\r\\n              placeholder=\\\"Enter survey description\\\"></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <h6 *ngIf=\\\"questions.length > 0\\\">Survey Questions</h6>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"questions.length > 0\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\" *ngFor=\\\"let item of questions;let indexOfelement=index;\\\">\\r\\n              <div style=\\\"display: flex; justify-content: space-between\\\">\\r\\n                <h5 class=\\\"card-title\\\">{{item.FieldName}}</h5>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" data-toggle=\\\"modal\\\"\\r\\n                  (click)=\\\"deleteQuestion(indexOfelement)\\\">\\r\\n                  Delete\\r\\n                </button>\\r\\n              </div>\\r\\n              <p class=\\\"card-text\\\">\\r\\n                Question type : {{item.__typename == \\\"ComponentSurveySurveyTextComponent\\\"? \\\"Text\\\" : \\\"Dropdown\\\"}}\\r\\n              </p>\\r\\n              <p class=\\\"card-text\\\">\\r\\n                Required : {{item.Mandatory? \\\"Yes\\\" : \\\"No\\\"}}\\r\\n              </p>\\r\\n              <p *ngIf=\\\"item.Values\\\" class=\\\"card-text\\\">\\r\\n                Options : <span *ngFor=\\\"let option of item.Values\\\" class=\\\"badge badge-success mx-1\\\">{{option}}</span>\\r\\n              </p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row p-3\\\">\\r\\n        <form [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"questionSubmit()\\\" style=\\\"width: 100%;\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"FieldName\\\">Question</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"FieldName\\\" name=\\\"FieldName\\\" formControlName=\\\"FieldName\\\"\\r\\n                  placeholder=\\\"Enter your question\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"title\\\">Question type</label>\\r\\n                <select class=\\\"form-control\\\" id=\\\"__typename\\\" name=\\\"__typename\\\" (change)=\\\"onQuestionTypeChange($event)\\\"\\r\\n                  formControlName=\\\"__typename\\\">\\r\\n                  <option value=\\\"\\\" disabled selected hidden>\\r\\n                    Choose...\\r\\n                  </option>\\r\\n                  <option value=\\\"ComponentSurveySurveyTextComponent\\\">Text</option>\\r\\n                  <option value=\\\"ComponentSurveySurveySelectionComponent\\\">Dropdown</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"FieldType\\\">Field type</label>\\r\\n                <select class=\\\"form-control\\\" id=\\\"FieldType\\\" name=\\\"FieldType\\\" formControlName=\\\"FieldType\\\">\\r\\n                  <option value=\\\"\\\" disabled selected hidden>\\r\\n                    Choose...\\r\\n                  </option>\\r\\n                  <option *ngIf=\\\"isText\\\" value=\\\"TextLong\\\">Long answer</option>\\r\\n                  <option *ngIf=\\\"isText\\\" value=\\\"TextShort\\\">Short answer</option>\\r\\n                  <option *ngIf=\\\"!isText\\\" value=\\\"Selection\\\">Selection</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"!isText\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"Values\\\">Options</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Values\\\" name=\\\"Values\\\" formControlName=\\\"Values\\\"\\r\\n                  placeholder=\\\"Enter options seperated by comma ( , )\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"form-check\\\">\\r\\n              <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"Mandatory\\\" name=\\\"Mandatory\\\"\\r\\n                formControlName=\\\"Mandatory\\\">\\r\\n              <label class=\\\"form-check-label\\\" for=\\\"Mandatory\\\">Required field</label>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-outline-primary ml-2\\\" [disabled]=\\\"!addForm.valid\\\">\\r\\n            Add question\\r\\n          </button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NewSurveyComponent } from './surveys-add.component';\r\nimport { SurveyDetailsComponent } from './surveys-detail.component';\r\nimport { SurveysComponent } from './surveys.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    \r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'cropprices'\r\n      },\r\n      {\r\n        path: 'all',\r\n        // canActivate: [AuthGuard],\r\n        component: SurveysComponent,\r\n        data: {\r\n          // roles: 'MANAGER',\r\n          title: 'Surveys'\r\n        }\r\n      },\r\n      {\r\n        path: 'new_survey',\r\n        // canActivate: [AuthGuard],\r\n        component: NewSurveyComponent,\r\n        data: {\r\n          // roles: 'MANAGER',\r\n          title: 'New Survey'\r\n        }\r\n      },{\r\n        path: 'survey_details/:id',\r\n        // canActivate: [AuthGuard],\r\n        component: SurveyDetailsComponent,\r\n        data: {\r\n          // roles: 'MANAGER',\r\n          title: 'Survey details'\r\n        }\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SurveysRoutingModule {}\r\n","import { Component } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DataService } from \"../../data.service\";\r\nimport { SurveysColumn } from \"../../constants/columnMetadata\";\r\n\r\n@Component({\r\n  templateUrl: \"surveys.component.html\",\r\n})\r\nexport class SurveysComponent {\r\n  rowSelection: string;\r\n  constructor(\r\n    public dataservice: DataService,\r\n    public router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.columnDefs = [...SurveysColumn];\r\n    this.rowSelection = \"single\";\r\n  }\r\n\r\n  loading = true;\r\n  btnLoading = false;\r\n  disableButton = true;\r\n  disableNextButton = false;\r\n  disablePrevButton = true;\r\n  meta;\r\n  pageSize = 20;\r\n  from = 1;\r\n  to = 20;\r\n  count = 1;\r\n  columnDefs = [];\r\n\r\n  cropPriceForm = this.fb.group({\r\n    crop: [\"\", Validators.required],\r\n    state: [\"\", Validators.required],\r\n    market: [\"\", Validators.required],\r\n    Price: [\"\", Validators.required],\r\n    Unit: [\"\", Validators.required],\r\n    Image: [\"\"],\r\n  });\r\n  rowData: any = [];\r\n  selectedRows: any = [];\r\n  selectedYear: any = new Date().getFullYear();\r\n  years: any = [];\r\n  private gridApi;\r\n  private gridColumnApi;\r\n  filter: any = {};\r\n  file: any = null;\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    console.log(this.router);\r\n    this.getSurveys(1, this.pageSize);\r\n  }\r\n  getSurveys(page?, pageSize?) {\r\n    this.dataservice\r\n      .getSurveys(page, pageSize)\r\n      .valueChanges.subscribe((result: any) => {\r\n        this.rowData = result.data.surveyForms.data;\r\n        this.meta = result.data.surveyForms.meta;\r\n        if (this.meta?.pagination?.pageCount <= 1) {\r\n          this.disablePrevButton = true;\r\n          this.disableNextButton = true;\r\n        }\r\n      });\r\n  }\r\n  loadNext() {\r\n    this.count++;\r\n     this.disablePrevButton = false;\r\n    this.from = this.from + this.pageSize;\r\n    this.to =\r\n      this.to + this.pageSize > this.meta?.pagination?.total\r\n        ? this.meta?.pagination?.total\r\n        : this.to + this.pageSize;\r\n    if (this.count === this.meta.pagination.pageCount) {\r\n      this.disableNextButton = true;\r\n    }\r\n    this.dataservice\r\n      .getSurveys(this.count, this.pageSize)\r\n      .valueChanges.subscribe((result: any) => {\r\n        this.meta = result.data.surveyForms.meta;\r\n        this.rowData = result.data.surveyForms.data;\r\n      });\r\n  }\r\n  loadPrev() {\r\n    this.count--;\r\n    if (this.count < this.meta.pagination.pageCount) {\r\n      this.disableNextButton = false;\r\n    }\r\n    if (this.count === 1) {\r\n      this.disablePrevButton = true;\r\n    }\r\n    this.from = this.from - this.pageSize;\r\n    this.to = this.to - this.rowData.length;\r\n    this.dataservice\r\n      .getSurveys(this.count, this.pageSize)\r\n      .valueChanges.subscribe((result: any) => {\r\n        this.meta = result.data.surveyForms.meta;\r\n        this.rowData = result.data.surveyForms.data;\r\n      });\r\n  }\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n  onRowClicked(event: any) {\r\n    console.log(\"row\", event.data);\r\n  }\r\n  goToNewSurvey(){\r\n    this.router.navigate([\"/surveys/new_survey\"]);\r\n  }\r\n  onSelectionChanged(event: any) {\r\n    this.selectedRows = this.gridApi.getSelectedRows();\r\n    console.log(this.selectedRows);\r\n    this.router.navigate([\"/surveys/survey_details\", this.selectedRows[0].id], {\r\n      state: { data: this.selectedRows },\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DataService } from \"../../data.service\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { dateConverter } from \"../../constants/columnMetadata\";\r\nimport { BaseChartDirective } from \"ng2-charts\";\r\n\r\nconst unique = (value, index, self) => {\r\n  return self.indexOf(value) === index;\r\n};\r\n\r\n@Component({\r\n  templateUrl: \"surveys-detail.component.html\",\r\n})\r\nexport class SurveyDetailsComponent implements OnInit {\r\n  constructor(\r\n    public dataservice: DataService,\r\n    private activatedRouter: ActivatedRoute,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {}\r\n  @ViewChild(\"deleteModal\") public deleteModal: ModalDirective;\r\n  @ViewChild(BaseChartDirective) chart: BaseChartDirective | undefined;\r\n\r\n  id: any;\r\n  loading = true;\r\n  btnLoading = false;\r\n  rowData: any = [];\r\n  questions: any = {};\r\n\r\n  dateConverter = dateConverter;\r\n\r\n  public pieChartType = \"pie\";\r\n  public resultsProcessed;\r\n\r\n  async ngOnInit() {\r\n    this.activatedRouter.params.subscribe((params) => {\r\n      this.id = params[\"id\"];\r\n    });\r\n    await this.getSurveyDetails();\r\n    await this.getSurveyResults();\r\n  }\r\n  async getSurveyDetails() {\r\n    this.dataservice.getSurveyDetails(this.id).subscribe((result: any) => {\r\n      console.log(\"getSurveyDetails\", result.body.data);\r\n      this.questions = result.body.data;\r\n    });\r\n  }\r\n  async getSurveyResults() {\r\n    let data = {};\r\n    this.dataservice\r\n      .getSurveyResults(this.id)\r\n      .valueChanges.subscribe((result: any) => {\r\n        this.rowData = result.data.surveyResults.data;\r\n        console.log(\"getSurveyResults\", this.rowData);\r\n        let Fields = this.questions?.attributes?.Fields;\r\n        console.log(Fields, \"fields\");\r\n        for (let i = 0; i < Fields.length; i++) {\r\n          let ans = this.rowData.map(\r\n            (x) => x.attributes.SurveyResponse[Fields[i].FieldKey]\r\n          );\r\n          let unique_ans = this.rowData\r\n            .map((x) => x.attributes.SurveyResponse[Fields[i].FieldKey])\r\n            .filter(unique);\r\n\r\n          let count = 0;\r\n          let counted_obj = {};\r\n          for (let j = 0; j < unique_ans.length; j++) {\r\n            count = 0;\r\n            for (let k = 0; k < ans.length; k++) {\r\n              if (unique_ans[j] == ans[k]) {\r\n                count++;\r\n              }\r\n            }\r\n            counted_obj[unique_ans[j]] = count;\r\n          }\r\n\r\n          data[Fields[i].FieldKey] = counted_obj;\r\n        }\r\n        this.resultsProcessed = data;\r\n        console.log(this.resultsProcessed,\"resultsProcessed\");\r\n        this.chart?.update();\r\n      });\r\n  }\r\n  returnQuesType(data) {\r\n    if (data == \"survey.survey-selection-component\") {\r\n      return \"Dropdown\";\r\n    } else {\r\n      return \"Text\";\r\n    }\r\n  }\r\n  returnChartLabels(data) {\r\n    // console.log(Object.keys(this.resultsProcessed[data]));\r\n    return Object.keys(this.resultsProcessed[data]);\r\n  }\r\n  returnChartdata(data) {\r\n    // console.log(Object.values(this.resultsProcessed[data]));\r\n    return Object.values(this.resultsProcessed[data]);\r\n  }\r\n  deleteSurvey() {\r\n    this.dataservice.deleteSurvey(this.id).subscribe((result: any) => {\r\n      console.log(\"response\", result);\r\n      if (result.data.deleteSurveyForm) {\r\n        this.toastr.success(\"Success!\");\r\n        this.deleteModal.hide();\r\n        this.router.navigate([\"/surveys/all\"]);\r\n      } else {\r\n        this.toastr.error(\"Failed!\");\r\n      }\r\n    });\r\n  }\r\n  downloadResponses() {\r\n    this.btnLoading = true;\r\n    this.dataservice.downloadResponses(this.id).subscribe(\r\n      (result: any) => {\r\n        console.log(\"downloadResponses\", result.body);\r\n        let url = \"https://indoramaapp.untanglestrategy.com\" + result.body.path;\r\n        this.btnLoading = false;\r\n        window.open(url, \"_blank\");\r\n      },\r\n      (error) => {\r\n        this.btnLoading = true;\r\n        this.toastr.error(\"Failed!\");\r\n      }\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}