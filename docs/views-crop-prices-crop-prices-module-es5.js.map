{"version":3,"sources":["webpack:///src/app/views/crop-prices/crop-prices-routing.module.ts","webpack:///src/app/views/crop-prices/crop-prices.module.ts","webpack:///src/app/views/crop-prices/crop-prices.component.html","webpack:///src/app/views/crop-prices/crop-prices.component.ts"],"names":["routes","path","children","redirectTo","component","data","roles","title","SoilTestRoutingModule","imports","forChild","exports","CropPricesModule","withComponents","forRoot","declarations","CropPricesComponent","dataservice","router","fb","toastr","loading","btnLoading","disableButton","disableNextButton","disablePrevButton","orders","columnDefs","States","Markets","Crops","pageSize","from","to","count","cropPriceForm","group","crop","required","state","market","Price","Unit","Image","rowData","selectedRows","selectedYear","Date","getFullYear","years","filter","file","rowSelection","console","log","getCropPrices","getCrops","getMarkets","getStates","valueChanges","subscribe","result","cropPrices","meta","pagination","pageCount","crops","total","length","states","id","markets","event","target","value","params","gridApi","api","gridColumnApi","columnApi","sizeColumnsToFit","getSelectedRows","attributes","Name","i","files","push","imageUrl","cropPriceModal","show","url","resp","upload","response","status","UpdateCropPrice","body","updateCropPrice","success","hide","deselectAll","error","AddCropPrice","createCropPrice","template"],"mappings":"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","file":"views-crop-prices-crop-prices-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CropPricesComponent } from './crop-prices.component';\r\nimport { AuthGuard } from '../login/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    \r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'cropprices'\r\n      },\r\n      {\r\n        path: 'all',\r\n        // canActivate: [AuthGuard],\r\n        component: CropPricesComponent,\r\n        data: {\r\n          roles: 'KP_CALLER',\r\n          title: 'Crop Prices'\r\n        }\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SoilTestRoutingModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { CropPricesComponent } from './crop-prices.component';\r\n\r\n// Dropdowns Component\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\n// Buttons Routing\r\nimport { SoilTestRoutingModule } from './crop-prices-routing.module';\r\n\r\n// Angular\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TabsModule,\r\n    ReactiveFormsModule,\r\n    AgGridModule.withComponents([]),\r\n    SoilTestRoutingModule,\r\n    BsDropdownModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    CropPricesComponent,\r\n  ]\r\n})\r\nexport class CropPricesModule { }\r\n","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\r\\n      <h2>Crop Prices Home</h2>\\r\\n      <div>\\r\\n        <!-- <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn btn-danger\\\"\\r\\n          data-toggle=\\\"modal\\\"\\r\\n          [disabled]=\\\"disableButton\\\"\\r\\n          (click)=\\\"openModal()\\\"\\r\\n        >\\r\\n          Delete\\r\\n        </button> -->\\r\\n        <button type=\\\"button\\\" [disabled]=\\\"disableButton\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\"\\r\\n          (click)=\\\"openModal('Edit')\\\">\\r\\n          Edit\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" [disabled]=\\\"!disableButton\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\"\\r\\n          (click)=\\\"openModal()\\\">\\r\\n          Add New Price\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <p class=\\\"text-muted mx-3\\\">\\r\\n      To approve a crop price simply select and edit the record without\\r\\n      modifying the data\\r\\n    </p>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <ag-grid-angular #agGrid style=\\\"width: 100%; height: 65vh\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\r\\n            [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\r\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\" (gridReady)=\\\"onGridReady($event)\\\" animateRows=\\\"true\\\">\\r\\n          </ag-grid-angular>\\r\\n          <span class=\\\"float-left mt-3\\\">{{from}} to {{to}}  of {{meta?.pagination?.total}}</span>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            [disabled]=\\\"disableNextButton\\\"\\r\\n            class=\\\"btn btn-primary float-right m-2\\\"\\r\\n            (click)=\\\"loadNext()\\\"\\r\\n          >\\r\\n            Next\\r\\n          </button>\\r\\n          <span class=\\\"float-right mt-3\\\">Page {{meta?.pagination?.page}} of {{meta?.pagination?.pageCount}}</span>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            [disabled]=\\\"disablePrevButton\\\"\\r\\n            class=\\\"btn btn-primary float-right m-2\\\"\\r\\n            (click)=\\\"loadPrev()\\\"\\r\\n          >\\r\\n            Prev\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div bsModal #cropPriceModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Add/Edit Crop Price</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"cropPriceModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"cropPriceForm\\\" (ngSubmit)=\\\"cropPriceSubmit()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"state\\\">State</label>\\r\\n            <select class=\\\"form-control\\\" id=\\\"state\\\" (change)=\\\"filterMarkets($event)\\\" required ngModel name=\\\"state\\\" formControlName=\\\"state\\\">\\r\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n              <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\r\\n                {{ item.attributes.Name }}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"market\\\">Market</label>\\r\\n            <select class=\\\"form-control\\\" id=\\\"market\\\" required ngModel name=\\\"market\\\" formControlName=\\\"market\\\">\\r\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n              <option *ngFor=\\\"let item of Markets\\\" value=\\\"{{ item.id }}\\\">\\r\\n                {{ item.attributes.Name }}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"crop\\\">Crop</label>\\r\\n            <select class=\\\"form-control\\\" id=\\\"crop\\\" required ngModel name=\\\"crop\\\" formControlName=\\\"crop\\\">\\r\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n              <option *ngFor=\\\"let item of Crops\\\" value=\\\"{{ item.id }}\\\">\\r\\n                {{ item.attributes.Name }}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"name\\\">Price</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Price\\\" name=\\\"Price\\\" formControlName=\\\"Price\\\"\\r\\n              placeholder=\\\"Enter price\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"name\\\">Unit</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Unit\\\" name=\\\"Unit\\\" formControlName=\\\"Unit\\\"\\r\\n              placeholder=\\\"Enter unit\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"Image\\\">Image</label>\\r\\n            <div>\\r\\n              <img *ngIf=\\\"imageUrl\\\" src=\\\"{{ imageUrl }}\\\" width=\\\"100\\\" height=\\\"100\\\" style=\\\"object-fit: cover\\\" />\\r\\n            </div>\\r\\n            <input type=\\\"file\\\" class=\\\"form-control\\\" id=\\\"Image\\\" accept=\\\".jpg,.jpeg,.JPEG,.png\\\" name=\\\"Image\\\"\\r\\n              (change)=\\\"onChange($event)\\\" formControlName=\\\"Image\\\" placeholder=\\\"Choose image\\\" />\\r\\n          </div>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cropPriceModal.hide()\\\">\\r\\n            Close\\r\\n          </button>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-2\\\" [disabled]=\\\"btnLoading || !cropPriceForm.valid\\\">\\r\\n            <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            Save changes\\r\\n          </button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- /.modal-content -->\\r\\n  </div>\\r\\n  <!-- /.modal-dialog -->\\r\\n</div>\";","import { Component, ViewChild } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DataService } from \"../../data.service\";\r\n// import { ActionRenderer } from \"../../utils/StatusRenderer\";\r\n\r\nimport { CropPricesColumn } from \"../../constants/columnMetadata\";\r\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\r\n\r\n@Component({\r\n  templateUrl: \"crop-prices.component.html\",\r\n})\r\nexport class CropPricesComponent {\r\n  rowSelection: string;\r\n  constructor(\r\n    public dataservice: DataService,\r\n    public router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.columnDefs = [...CropPricesColumn];\r\n    this.rowSelection = \"single\";\r\n  }\r\n  @ViewChild(\"cropPriceModal\") public cropPriceModal: ModalDirective;\r\n  @ViewChild(\"detailsModal\") public detailsModal: ModalDirective;\r\n\r\n  loading = true;\r\n  btnLoading = false;\r\n  disableButton = true;\r\n  disableNextButton = false;\r\n  disablePrevButton = true;\r\n  title = \"Verification\";\r\n  orders: any = {};\r\n  columnDefs = [];\r\n  States: any = [];\r\n  Markets: any = [];\r\n  Crops: any = [];\r\n  imageUrl;\r\n  meta;\r\n  pageSize = 20;\r\n  from = 1;\r\n  to = 20;\r\n  count = 1;\r\n  cropPriceForm = this.fb.group({\r\n    crop: [\"\", Validators.required],\r\n    state: [\"\", Validators.required],\r\n    market: [\"\", Validators.required],\r\n    Price: [\"\", Validators.required],\r\n    Unit: [\"\", Validators.required],\r\n    Image: [\"\"],\r\n  });\r\n  // frameworkComponents = {\r\n  //   statusRenderer: ActionRenderer,\r\n  // };\r\n  rowData: any = [];\r\n  selectedRows: any = [];\r\n  selectedYear: any = new Date().getFullYear();\r\n  years: any = [];\r\n  private gridApi;\r\n  private gridColumnApi;\r\n  filter: any = {};\r\n  file: any = null;\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    console.log(this.router);\r\n    this.getCropPrices();\r\n    this.getCrops();\r\n    this.getMarkets();\r\n    this.getStates();\r\n  }\r\n  getCropPrices() {\r\n    this.dataservice.getCropPrices(1,this.pageSize).valueChanges.subscribe((result: any) => {\r\n      this.rowData = result.data.cropPrices.data;\r\n      this.meta = result.data.cropPrices.meta;\r\n      if (this.meta?.pagination?.pageCount <= 1) {\r\n        this.disablePrevButton = true;\r\n        this.disableNextButton = true;\r\n      }\r\n    });\r\n  }\r\n  getCrops() {\r\n    this.dataservice.getCrops().valueChanges.subscribe((result: any) => {\r\n      this.Crops = result.data.crops.data;\r\n    });\r\n  }\r\n  loadNext() {\r\n    this.count++;\r\n     this.disablePrevButton = false;\r\n    this.from = this.from + this.pageSize;\r\n    this.to =\r\n      this.to + this.pageSize > this.meta?.pagination?.total\r\n        ? this.meta?.pagination?.total\r\n        : this.to + this.pageSize;\r\n    if (this.count === this.meta.pagination.pageCount) {\r\n      this.disableNextButton = true;\r\n    }\r\n    this.dataservice\r\n      .getCropPrices(this.count, this.pageSize)\r\n      .valueChanges.subscribe((result: any) => {\r\n        this.meta = result.data.cropPrices.meta;\r\n        this.rowData = result.data.cropPrices.data;\r\n      });\r\n  }\r\n  loadPrev() {\r\n    this.count--;\r\n    if (this.count < this.meta.pagination.pageCount) {\r\n      this.disableNextButton = false;\r\n    }\r\n    if (this.count === 1) {\r\n      this.disablePrevButton = true;\r\n    }\r\n    this.from = this.from - this.pageSize;\r\n    this.to = this.to - this.rowData.length;\r\n    this.dataservice\r\n      .getCropPrices(this.count, this.pageSize)\r\n      .valueChanges.subscribe((result: any) => {\r\n        this.meta = result.data.cropPrices.meta;\r\n        this.rowData = result.data.cropPrices.data;\r\n      });\r\n  }\r\n  getStates() {\r\n    this.dataservice.getStates().valueChanges.subscribe((result: any) => {\r\n      console.log(\"getStates\", result.data.states.data);\r\n      this.States = result.data.states.data;\r\n    });\r\n  }\r\n  getMarkets(id?) {\r\n    this.dataservice.getMarkets(id).valueChanges.subscribe((result: any) => {\r\n      console.log(\"getMarkets\", result.data.markets.data);\r\n      this.Markets = result.data.markets.data;\r\n    });\r\n  }\r\n  filterMarkets(event) {\r\n    this.getMarkets(event.target.value);\r\n  }\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n  onRowClicked(event: any) {\r\n    console.log(\"row\", event.data);\r\n  }\r\n  onSelectionChanged(event: any) {\r\n    this.selectedRows = this.gridApi.getSelectedRows();\r\n    if (this.selectedRows.length > 0) {\r\n      this.disableButton = false;\r\n    } else {\r\n      this.disableButton = true;\r\n    }\r\n    console.log(this.selectedRows, this.selectedRows[0].attributes.Name);\r\n  }\r\n  // On file Select\r\n  onChange(event: any) {\r\n    this.file = [];\r\n    for (var i = 0; i < event.target.files.length; i++) {\r\n      this.file.push(event.target.files[i]);\r\n    }\r\n    console.log(this.file);\r\n  }\r\n  openModal(data: any) {\r\n    this.imageUrl = null;\r\n    this.cropPriceModal.show();\r\n    if (data) {\r\n      this.cropPriceForm = this.fb.group({\r\n        crop: [\r\n          this.selectedRows[0].attributes.crop.data.id,\r\n          Validators.required,\r\n        ],\r\n        state: [\r\n          this.selectedRows[0].attributes.state.data.id,\r\n          Validators.required,\r\n        ],\r\n        market: [\r\n          this.selectedRows[0].attributes.market.data.id,\r\n          Validators.required,\r\n        ],\r\n        Price: [this.selectedRows[0].attributes.Price, Validators.required],\r\n        Unit: [this.selectedRows[0].attributes.Unit, Validators.required],\r\n        Image: [\r\n          this.selectedRows[0].attributes.Image?.data?.id,\r\n          Validators.required,\r\n        ],\r\n      });\r\n      this.imageUrl = this.selectedRows[0].attributes.Image?.data?.attributes\r\n        ?.url\r\n        ? \"https://indoramaapp.untanglestrategy.com\" +\r\n          this.selectedRows[0].attributes.Image?.data?.attributes?.url\r\n        : null;\r\n    } else {\r\n      this.cropPriceForm = this.fb.group({\r\n        crop: [\"\", Validators.required],\r\n        state: [\"\", Validators.required],\r\n        market: [\"\", Validators.required],\r\n        Price: [\"\", Validators.required],\r\n        Unit: [\"\", Validators.required],\r\n        Image: [\"\", Validators.required],\r\n      });\r\n      this.imageUrl = null;\r\n    }\r\n  }\r\n  cropPriceSubmit() {\r\n    let resp = {};\r\n    console.log(this.cropPriceForm.value);\r\n    if (!this.disableButton) {\r\n      if (this.file) {\r\n        this.dataservice.upload(this.file).subscribe((response: any) => {\r\n          if (response.status == 200) {\r\n            console.log(response);\r\n            this.dataservice\r\n              .UpdateCropPrice(\r\n                this.cropPriceForm.value,\r\n                this.selectedRows[0].id,\r\n                response.body[0]?.id\r\n              )\r\n              .subscribe((result: any) => {\r\n                resp = result.data;\r\n                console.log(\"response\", result);\r\n                if (result.data.updateCropPrice) {\r\n                  this.toastr.success(\"Success!\");\r\n                  this.getCropPrices();\r\n                  this.file = null;\r\n                  this.cropPriceModal.hide();\r\n                  this.gridApi.deselectAll();\r\n                } else {\r\n                  this.toastr.error(\"Failed. Please check the fields!\");\r\n                }\r\n              });\r\n          }\r\n        });\r\n      } else {\r\n        this.dataservice\r\n          .UpdateCropPrice(\r\n            this.cropPriceForm.value,\r\n            this.selectedRows[0].id,\r\n            null\r\n          )\r\n          .subscribe((result: any) => {\r\n            resp = result.data;\r\n            console.log(\"response\", result);\r\n            if (result.data.updateCropPrice) {\r\n              this.toastr.success(\"Success!\");\r\n              this.getCropPrices();\r\n              this.file = null;\r\n              this.cropPriceModal.hide();\r\n              this.gridApi.deselectAll();\r\n            } else {\r\n              this.toastr.error(\"Failed. Please check the fields!\");\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      this.dataservice.upload(this.file).subscribe((response: any) => {\r\n        if (response.status == 200) {\r\n          console.log(response);\r\n          this.dataservice\r\n            .AddCropPrice(this.cropPriceForm.value, response.body[0]?.id)\r\n            .subscribe((result: any) => {\r\n              resp = result.data;\r\n              console.log(\"response\", result);\r\n              if (result.data.createCropPrice) {\r\n                this.toastr.success(\"Success!\");\r\n                this.getCropPrices();\r\n                this.file = null;\r\n                this.cropPriceModal.hide();\r\n                this.gridApi.deselectAll();\r\n              } else {\r\n                this.toastr.error(\"Failed. Please check the fields!\");\r\n              }\r\n            });\r\n        } else {\r\n          this.toastr.error(\"Image failed to upload!\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n"]}