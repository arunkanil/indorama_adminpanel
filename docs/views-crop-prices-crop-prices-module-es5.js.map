{"version":3,"sources":["webpack:///src/app/views/crop-prices/crop-prices-routing.module.ts","webpack:///src/app/views/crop-prices/crop-prices.module.ts","webpack:///src/app/views/crop-prices/crop-prices.component.html","webpack:///src/app/views/crop-prices/crop-prices.component.ts"],"names":["routes","path","children","redirectTo","component","data","roles","title","SoilTestRoutingModule","imports","forChild","exports","CropPricesModule","withComponents","forRoot","declarations","CropPricesComponent","dataservice","router","fb","toastr","loading","btnLoading","disableButton","disableNextButton","disablePrevButton","selectedList","listCheck","publicationState","toApprove","undefined","columnDefs","States","Markets","Crops","pageSize","from","to","count","cropPriceForm","group","crop","required","state","market","Price","Unit","Image","rowData","selectedRows","selectedYear","Date","getFullYear","years","filter","file","rowSelection","console","log","getCropPrices","getCrops","getMarkets","getStates","valueChanges","subscribe","result","cropPrices","meta","pagination","pageCount","crops","total","length","states","id","markets","event","target","value","params","gridApi","api","gridColumnApi","columnApi","sizeColumnsToFit","getSelectedRows","i","files","push","check","published","UpdateCropPrice","updateCropPrice","success","approveModal","hide","deselectAll","error","show","imageUrl","cropPriceModal","attributes","url","resp","upload","response","status","body","AddCropPrice","createCropPrice","template"],"mappings":"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","file":"views-crop-prices-crop-prices-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CropPricesComponent } from './crop-prices.component';\r\nimport { AuthGuard } from '../login/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    \r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'cropprices'\r\n      },\r\n      {\r\n        path: 'all',\r\n        // canActivate: [AuthGuard],\r\n        component: CropPricesComponent,\r\n        data: {\r\n          roles: 'KP_CALLER',\r\n          title: 'Crop Prices'\r\n        }\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SoilTestRoutingModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { CropPricesComponent } from './crop-prices.component';\r\n\r\n// Dropdowns Component\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\n// Buttons Routing\r\nimport { SoilTestRoutingModule } from './crop-prices-routing.module';\r\n\r\n// Angular\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TabsModule,\r\n    ReactiveFormsModule,\r\n    AgGridModule.withComponents([]),\r\n    SoilTestRoutingModule,\r\n    BsDropdownModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    CropPricesComponent,\r\n  ]\r\n})\r\nexport class CropPricesModule { }\r\n","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div\\r\\n      class=\\\"card-header\\\"\\r\\n      style=\\\"display: flex; justify-content: space-between\\\"\\r\\n    >\\r\\n      <h2>Crop Prices Home</h2>\\r\\n      <div>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn btn-warning\\\"\\r\\n          data-toggle=\\\"modal\\\"\\r\\n          [disabled]=\\\"disableButton\\\"\\r\\n          (click)=\\\"openApproveModal()\\\"\\r\\n        >\\r\\n          Approve / Reject\\r\\n        </button>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          [disabled]=\\\"disableButton\\\"\\r\\n          class=\\\"btn btn-info\\\"\\r\\n          data-toggle=\\\"modal\\\"\\r\\n          (click)=\\\"openModal('Edit')\\\"\\r\\n        >\\r\\n          Edit\\r\\n        </button>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          [disabled]=\\\"!disableButton\\\"\\r\\n          class=\\\"btn btn-primary\\\"\\r\\n          data-toggle=\\\"modal\\\"\\r\\n          (click)=\\\"openModal()\\\"\\r\\n        >\\r\\n          Add New Price\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <div class=\\\"btn-group float-right\\\" dropdown>\\r\\n            <button\\r\\n              dropdownToggle\\r\\n              type=\\\"button\\\"\\r\\n              class=\\\"btn btn-primary dropdown-toggle\\\"\\r\\n            >\\r\\n              {{ selectedList }}<span class=\\\"caret\\\"></span>\\r\\n            </button>\\r\\n            <ul *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\r\\n              <li role=\\\"menuitem\\\">\\r\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"toggleCropPrices(false)\\\"\\r\\n                  >All</a\\r\\n                >\\r\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"toggleCropPrices(true)\\\"\\r\\n                  >Approval pending</a\\r\\n                >\\r\\n              </li>\\r\\n            </ul>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <ag-grid-angular\\r\\n            #agGrid\\r\\n            style=\\\"width: 100%; height: 65vh\\\"\\r\\n            id=\\\"myGrid\\\"\\r\\n            class=\\\"ag-theme-alpine\\\"\\r\\n            [columnDefs]=\\\"columnDefs\\\"\\r\\n            [rowData]=\\\"rowData\\\"\\r\\n            [rowSelection]=\\\"rowSelection\\\"\\r\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\r\\n            (gridReady)=\\\"onGridReady($event)\\\"\\r\\n            animateRows=\\\"true\\\"\\r\\n          >\\r\\n          </ag-grid-angular>\\r\\n          <span class=\\\"float-left mt-3\\\"\\r\\n            >{{ from }} to {{ to }} of {{ meta?.pagination?.total }}</span\\r\\n          >\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            [disabled]=\\\"disableNextButton\\\"\\r\\n            class=\\\"btn btn-primary float-right m-2\\\"\\r\\n            (click)=\\\"loadNext()\\\"\\r\\n          >\\r\\n            Next\\r\\n          </button>\\r\\n          <span class=\\\"float-right mt-3\\\"\\r\\n            >Page {{ meta?.pagination?.page }} of\\r\\n            {{ meta?.pagination?.pageCount }}</span\\r\\n          >\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            [disabled]=\\\"disablePrevButton\\\"\\r\\n            class=\\\"btn btn-primary float-right m-2\\\"\\r\\n            (click)=\\\"loadPrev()\\\"\\r\\n          >\\r\\n            Prev\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div\\r\\n  bsModal\\r\\n  #cropPriceModal=\\\"bs-modal\\\"\\r\\n  class=\\\"modal fade\\\"\\r\\n  tabindex=\\\"-1\\\"\\r\\n  role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\"\\r\\n>\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Add/Edit Crop Price</h4>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"close\\\"\\r\\n          (click)=\\\"cropPriceModal.hide()\\\"\\r\\n          aria-label=\\\"Close\\\"\\r\\n        >\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"cropPriceForm\\\" (ngSubmit)=\\\"cropPriceSubmit()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"state\\\">State</label>\\r\\n            <select\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"state\\\"\\r\\n              (change)=\\\"filterMarkets($event)\\\"\\r\\n              required\\r\\n              ngModel\\r\\n              name=\\\"state\\\"\\r\\n              formControlName=\\\"state\\\"\\r\\n            >\\r\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n              <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\r\\n                {{ item.attributes.Name }}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"market\\\">Market</label>\\r\\n            <select\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"market\\\"\\r\\n              required\\r\\n              ngModel\\r\\n              name=\\\"market\\\"\\r\\n              formControlName=\\\"market\\\"\\r\\n            >\\r\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n              <option *ngFor=\\\"let item of Markets\\\" value=\\\"{{ item.id }}\\\">\\r\\n                {{ item.attributes.Name }}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"crop\\\">Crop</label>\\r\\n            <select\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"crop\\\"\\r\\n              required\\r\\n              ngModel\\r\\n              name=\\\"crop\\\"\\r\\n              formControlName=\\\"crop\\\"\\r\\n            >\\r\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n              <option *ngFor=\\\"let item of Crops\\\" value=\\\"{{ item.id }}\\\">\\r\\n                {{ item.attributes.Name }}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"name\\\">Price</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"Price\\\"\\r\\n              name=\\\"Price\\\"\\r\\n              formControlName=\\\"Price\\\"\\r\\n              placeholder=\\\"Enter price\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"name\\\">Unit</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"Unit\\\"\\r\\n              name=\\\"Unit\\\"\\r\\n              formControlName=\\\"Unit\\\"\\r\\n              placeholder=\\\"Enter unit\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"Image\\\">Image</label>\\r\\n            <div>\\r\\n              <img\\r\\n                *ngIf=\\\"imageUrl\\\"\\r\\n                src=\\\"{{ imageUrl }}\\\"\\r\\n                width=\\\"100\\\"\\r\\n                height=\\\"100\\\"\\r\\n                style=\\\"object-fit: cover\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <input\\r\\n              type=\\\"file\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"Image\\\"\\r\\n              accept=\\\".jpg,.jpeg,.JPEG,.png\\\"\\r\\n              name=\\\"Image\\\"\\r\\n              (change)=\\\"onChange($event)\\\"\\r\\n              formControlName=\\\"Image\\\"\\r\\n              placeholder=\\\"Choose image\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-secondary\\\"\\r\\n            (click)=\\\"cropPriceModal.hide()\\\"\\r\\n          >\\r\\n            Close\\r\\n          </button>\\r\\n          <button\\r\\n            type=\\\"submit\\\"\\r\\n            class=\\\"btn btn-primary ml-2\\\"\\r\\n            [disabled]=\\\"btnLoading || !cropPriceForm.valid\\\"\\r\\n          >\\r\\n            <span\\r\\n              *ngIf=\\\"btnLoading\\\"\\r\\n              class=\\\"spinner-border spinner-border-sm\\\"\\r\\n              role=\\\"status\\\"\\r\\n              aria-hidden=\\\"true\\\"\\r\\n            ></span>\\r\\n            Save changes\\r\\n          </button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- /.modal-content -->\\r\\n  </div>\\r\\n  <!-- /.modal-dialog -->\\r\\n</div>\\r\\n<div\\r\\n  bsModal\\r\\n  #approveModal=\\\"bs-modal\\\"\\r\\n  class=\\\"modal fade\\\"\\r\\n  tabindex=\\\"-1\\\"\\r\\n  role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\"\\r\\n>\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body text-center\\\">\\r\\n        Do you want to approve this record?\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer justify-content-around\\\">\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn btn-secondary\\\"\\r\\n          (click)=\\\"approveOrReject(true)\\\"\\r\\n        >\\r\\n          No! Reject.\\r\\n        </button>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn btn-primary\\\"\\r\\n          (click)=\\\"approveOrReject(false)\\\"\\r\\n        >\\r\\n          Yes! Approve.\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Component, ViewChild } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DataService } from \"../../data.service\";\r\n// import { ActionRenderer } from \"../../utils/StatusRenderer\";\r\n\r\nimport { CropPricesColumn } from \"../../constants/columnMetadata\";\r\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\r\n\r\n@Component({\r\n  templateUrl: \"crop-prices.component.html\",\r\n})\r\nexport class CropPricesComponent {\r\n  rowSelection: string;\r\n  constructor(\r\n    public dataservice: DataService,\r\n    public router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.columnDefs = [...CropPricesColumn];\r\n    this.rowSelection = \"single\";\r\n  }\r\n  @ViewChild(\"cropPriceModal\") public cropPriceModal: ModalDirective;\r\n  @ViewChild(\"approveModal\") public approveModal: ModalDirective;\r\n\r\n  loading = true;\r\n  btnLoading = false;\r\n  disableButton = true;\r\n  disableNextButton = false;\r\n  disablePrevButton = true;\r\n  selectedList = \"All\";\r\n  listCheck = false;\r\n  publicationState = \"PREVIEW\";\r\n  toApprove = undefined;\r\n  columnDefs = [];\r\n  States: any = [];\r\n  Markets: any = [];\r\n  Crops: any = [];\r\n  imageUrl;\r\n  meta;\r\n  pageSize = 20;\r\n  from = 1;\r\n  to = 20;\r\n  count = 1;\r\n  cropPriceForm = this.fb.group({\r\n    crop: [\"\", Validators.required],\r\n    state: [\"\", Validators.required],\r\n    market: [\"\", Validators.required],\r\n    Price: [\"\", Validators.required],\r\n    Unit: [\"\", Validators.required],\r\n    Image: [\"\"],\r\n  });\r\n  // frameworkComponents = {\r\n  //   statusRenderer: ActionRenderer,\r\n  // };\r\n  rowData: any = [];\r\n  selectedRows: any = [];\r\n  selectedYear: any = new Date().getFullYear();\r\n  years: any = [];\r\n  private gridApi;\r\n  private gridColumnApi;\r\n  filter: any = {};\r\n  file: any = null;\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    console.log(this.router);\r\n    this.getCropPrices();\r\n    this.getCrops();\r\n    this.getMarkets();\r\n    this.getStates();\r\n  }\r\n  getCropPrices() {\r\n    this.dataservice\r\n      .getCropPrices(1, this.pageSize, this.publicationState, this.toApprove)\r\n      .valueChanges.subscribe((result: any) => {\r\n        this.rowData = result.data.cropPrices.data;\r\n        this.meta = result.data.cropPrices.meta;\r\n        if (this.meta?.pagination?.pageCount <= 1) {\r\n          this.disablePrevButton = true;\r\n          this.disableNextButton = true;\r\n        }\r\n      });\r\n  }\r\n  getCrops() {\r\n    this.dataservice.getCrops().valueChanges.subscribe((result: any) => {\r\n      this.Crops = result.data.crops.data;\r\n    });\r\n  }\r\n  loadNext() {\r\n    this.count++;\r\n    this.disablePrevButton = false;\r\n    this.from = this.from + this.pageSize;\r\n    this.to =\r\n      this.to + this.pageSize > this.meta?.pagination?.total\r\n        ? this.meta?.pagination?.total\r\n        : this.to + this.pageSize;\r\n    if (this.count === this.meta.pagination.pageCount) {\r\n      this.disableNextButton = true;\r\n    }\r\n    this.dataservice\r\n      .getCropPrices(\r\n        this.count,\r\n        this.pageSize,\r\n        this.publicationState,\r\n        this.toApprove\r\n      )\r\n      .valueChanges.subscribe((result: any) => {\r\n        this.meta = result.data.cropPrices.meta;\r\n        this.rowData = result.data.cropPrices.data;\r\n      });\r\n  }\r\n  loadPrev() {\r\n    this.count--;\r\n    if (this.count < this.meta.pagination.pageCount) {\r\n      this.disableNextButton = false;\r\n    }\r\n    if (this.count === 1) {\r\n      this.disablePrevButton = true;\r\n    }\r\n    this.from = this.from - this.pageSize;\r\n    this.to = this.to - this.rowData.length;\r\n    this.dataservice\r\n      .getCropPrices(\r\n        this.count,\r\n        this.pageSize,\r\n        this.publicationState,\r\n        this.toApprove\r\n      )\r\n      .valueChanges.subscribe((result: any) => {\r\n        this.meta = result.data.cropPrices.meta;\r\n        this.rowData = result.data.cropPrices.data;\r\n      });\r\n  }\r\n  getStates() {\r\n    this.dataservice.getStates().valueChanges.subscribe((result: any) => {\r\n      console.log(\"getStates\", result.data.states.data);\r\n      this.States = result.data.states.data;\r\n    });\r\n  }\r\n  getMarkets(id?) {\r\n    this.dataservice.getMarkets(id).valueChanges.subscribe((result: any) => {\r\n      console.log(\"getMarkets\", result.data.markets.data);\r\n      this.Markets = result.data.markets.data;\r\n    });\r\n  }\r\n  filterMarkets(event) {\r\n    this.getMarkets(event.target.value);\r\n  }\r\n  toggleCropPrices(data) {\r\n    if (data) {\r\n      this.selectedList = \"Approval Pending\";\r\n      this.publicationState = \"PREVIEW\";\r\n      this.toApprove = null;\r\n      this.getCropPrices();\r\n    } else {\r\n      this.selectedList = \"All\";\r\n      this.publicationState = \"PREVIEW\";\r\n      this.toApprove = undefined;\r\n      this.getCropPrices();\r\n    }\r\n  }\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n  onRowClicked(event: any) {\r\n    console.log(\"row\", event.data);\r\n  }\r\n  onSelectionChanged(event: any) {\r\n    this.selectedRows = this.gridApi.getSelectedRows();\r\n    if (this.selectedRows.length > 0) {\r\n      this.disableButton = false;\r\n    } else {\r\n      this.disableButton = true;\r\n    }\r\n  }\r\n  // On file Select\r\n  onChange(event: any) {\r\n    this.file = [];\r\n    for (var i = 0; i < event.target.files.length; i++) {\r\n      this.file.push(event.target.files[i]);\r\n    }\r\n    console.log(this.file);\r\n  }\r\n  approveOrReject(check) {\r\n    let published = null;\r\n    if (!check) published = new Date();\r\n    this.dataservice\r\n      .UpdateCropPrice(\r\n        undefined,\r\n        this.selectedRows[0].id,\r\n        undefined,\r\n        check,\r\n        published\r\n      )\r\n      .subscribe(\r\n        (result: any) => {\r\n          console.log(\"response\", result);\r\n          if (result.data.updateCropPrice) {\r\n            this.toastr.success(\"Success!\");\r\n            this.getCropPrices();\r\n            this.file = null;\r\n            this.approveModal.hide();\r\n            this.gridApi.deselectAll();\r\n            this.btnLoading = false;\r\n          }\r\n        },\r\n        (error) => {\r\n          this.toastr.error(\"Failed. Please check the fields!\");\r\n          this.btnLoading = false;\r\n        }\r\n      );\r\n  }\r\n  openApproveModal(data) {\r\n    this.approveModal.show();\r\n  }\r\n  openModal(data: any) {\r\n    this.imageUrl = null;\r\n    this.cropPriceModal.show();\r\n    if (data) {\r\n      this.cropPriceForm = this.fb.group({\r\n        crop: [\r\n          this.selectedRows[0].attributes.crop.data.id,\r\n          Validators.required,\r\n        ],\r\n        state: [\r\n          this.selectedRows[0].attributes.state.data.id,\r\n          Validators.required,\r\n        ],\r\n        market: [\r\n          this.selectedRows[0].attributes.market.data.id,\r\n          Validators.required,\r\n        ],\r\n        Price: [this.selectedRows[0].attributes.Price, Validators.required],\r\n        Unit: [this.selectedRows[0].attributes.Unit, Validators.required],\r\n        Image: [\r\n          this.selectedRows[0].attributes.Image?.data?.id,\r\n          Validators.required,\r\n        ],\r\n      });\r\n      this.imageUrl = this.selectedRows[0].attributes.Image?.data?.attributes\r\n        ?.url\r\n        ? \"https://indoramaapp.untanglestrategy.com\" +\r\n          this.selectedRows[0].attributes.Image?.data?.attributes?.url\r\n        : null;\r\n    } else {\r\n      this.cropPriceForm = this.fb.group({\r\n        crop: [\"\", Validators.required],\r\n        state: [\"\", Validators.required],\r\n        market: [\"\", Validators.required],\r\n        Price: [\"\", Validators.required],\r\n        Unit: [\"\", Validators.required],\r\n        Image: [\"\", Validators.required],\r\n      });\r\n      this.imageUrl = null;\r\n    }\r\n  }\r\n  cropPriceSubmit() {\r\n    let resp = {};\r\n    this.btnLoading = true;\r\n    console.log(this.cropPriceForm.value);\r\n    if (!this.disableButton) {\r\n      if (this.file) {\r\n        this.dataservice.upload(this.file).subscribe((response: any) => {\r\n          if (response.status == 200) {\r\n            console.log(response);\r\n            this.dataservice\r\n              .UpdateCropPrice(\r\n                this.cropPriceForm.value,\r\n                this.selectedRows[0].id,\r\n                response.body[0]?.id\r\n              )\r\n              .subscribe(\r\n                (result: any) => {\r\n                  resp = result.data;\r\n                  console.log(\"response\", result);\r\n                  if (result.data.updateCropPrice) {\r\n                    this.toastr.success(\"Success!\");\r\n                    this.getCropPrices();\r\n                    this.file = null;\r\n                    this.cropPriceModal.hide();\r\n                    this.gridApi.deselectAll();\r\n                    this.btnLoading = false;\r\n                  }\r\n                },\r\n                (error) => {\r\n                  this.toastr.error(\"Failed. Please check the fields!\");\r\n                  this.btnLoading = false;\r\n                }\r\n              );\r\n          }\r\n        });\r\n      } else {\r\n        this.dataservice\r\n          .UpdateCropPrice(\r\n            this.cropPriceForm.value,\r\n            this.selectedRows[0].id,\r\n            null\r\n          )\r\n          .subscribe(\r\n            (result: any) => {\r\n              resp = result.data;\r\n              console.log(\"response\", result);\r\n              if (result.data.updateCropPrice) {\r\n                this.toastr.success(\"Success!\");\r\n                this.getCropPrices();\r\n                this.file = null;\r\n                this.cropPriceModal.hide();\r\n                this.gridApi.deselectAll();\r\n                this.btnLoading = false;\r\n              }\r\n            },\r\n            (error) => {\r\n              this.toastr.error(\"Failed. Please check the fields!\");\r\n              this.btnLoading = false;\r\n            }\r\n          );\r\n      }\r\n    } else {\r\n      this.dataservice.upload(this.file).subscribe((response: any) => {\r\n        if (response.status == 200) {\r\n          console.log(response);\r\n          this.dataservice\r\n            .AddCropPrice(this.cropPriceForm.value, response.body[0]?.id)\r\n            .subscribe(\r\n              (result: any) => {\r\n                resp = result.data;\r\n                console.log(\"response\", result);\r\n                if (result.data.createCropPrice) {\r\n                  this.toastr.success(\"Success!\");\r\n                  this.getCropPrices();\r\n                  this.file = null;\r\n                  this.cropPriceModal.hide();\r\n                  this.gridApi.deselectAll();\r\n                }\r\n                this.btnLoading = false;\r\n              },\r\n              (error) => {\r\n                this.toastr.error(\"Failed. Please check the fields!\");\r\n                this.btnLoading = false;\r\n              }\r\n            );\r\n        } else {\r\n          this.toastr.error(\"Image failed to upload!\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n"]}