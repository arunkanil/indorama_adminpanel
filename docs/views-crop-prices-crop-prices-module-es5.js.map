{"version":3,"sources":["webpack:///src/app/views/crop-prices/crop-prices-routing.module.ts","webpack:///src/app/views/crop-prices/crop-prices.module.ts","webpack:///src/app/views/crop-prices/crop-prices.component.html","webpack:///src/app/views/crop-prices/crop-prices.component.ts"],"names":["routes","path","children","redirectTo","component","data","roles","title","SoilTestRoutingModule","imports","forChild","exports","CropPricesModule","withComponents","forRoot","declarations","CropPricesComponent","dataservice","router","fb","toastr","loading","btnLoading","disableButton","orders","columnDefs","States","Markets","Crops","cropPriceForm","group","crop","required","state","market","Price","Unit","Image","rowData","selectedRows","selectedYear","Date","getFullYear","years","filter","file","rowSelection","console","log","getCropPrices","getCrops","getMarkets","getStates","valueChanges","subscribe","result","cropPrices","crops","states","id","markets","event","target","value","params","gridApi","api","gridColumnApi","columnApi","sizeColumnsToFit","getSelectedRows","length","attributes","Name","i","files","push","imageUrl","cropPriceModal","show","url","resp","upload","response","status","UpdateCropPrice","body","updateCropPrice","success","hide","deselectAll","error","AddCropPrice","createCropPrice","template"],"mappings":"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","file":"views-crop-prices-crop-prices-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CropPricesComponent } from './crop-prices.component';\r\nimport { AuthGuard } from '../login/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    \r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'cropprices'\r\n      },\r\n      {\r\n        path: 'all',\r\n        // canActivate: [AuthGuard],\r\n        component: CropPricesComponent,\r\n        data: {\r\n          roles: 'KP_CALLER',\r\n          title: 'Profile'\r\n        }\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SoilTestRoutingModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { CropPricesComponent } from './crop-prices.component';\r\n\r\n// Dropdowns Component\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\n// Buttons Routing\r\nimport { SoilTestRoutingModule } from './crop-prices-routing.module';\r\n\r\n// Angular\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TabsModule,\r\n    ReactiveFormsModule,\r\n    AgGridModule.withComponents([]),\r\n    SoilTestRoutingModule,\r\n    BsDropdownModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    CropPricesComponent,\r\n  ]\r\n})\r\nexport class CropPricesModule { }\r\n","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\r\\n      <h2>Crop Prices Home</h2>\\r\\n      <div>\\r\\n        <!-- <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn btn-danger\\\"\\r\\n          data-toggle=\\\"modal\\\"\\r\\n          [disabled]=\\\"disableButton\\\"\\r\\n          (click)=\\\"openModal()\\\"\\r\\n        >\\r\\n          Delete\\r\\n        </button> -->\\r\\n        <button type=\\\"button\\\" [disabled]=\\\"disableButton\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\"\\r\\n          (click)=\\\"openModal('Edit')\\\">\\r\\n          Edit\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" [disabled]=\\\"!disableButton\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\"\\r\\n          (click)=\\\"openModal()\\\">\\r\\n          Add New Price\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <p class=\\\"text-muted mx-3\\\">\\r\\n      To approve a crop price simply select and edit the record without\\r\\n      modifying the data\\r\\n    </p>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <ag-grid-angular #agGrid style=\\\"width: 100%; height: 65vh\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\r\\n            [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\r\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\" (gridReady)=\\\"onGridReady($event)\\\" animateRows=\\\"true\\\">\\r\\n          </ag-grid-angular>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div bsModal #cropPriceModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Add/Edit Crop Price</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"cropPriceModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"cropPriceForm\\\" (ngSubmit)=\\\"cropPriceSubmit()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"state\\\">State</label>\\r\\n            <select class=\\\"form-control\\\" id=\\\"state\\\" (change)=\\\"filterMarkets($event)\\\" required ngModel name=\\\"state\\\" formControlName=\\\"state\\\">\\r\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n              <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\r\\n                {{ item.attributes.Name }}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"market\\\">Market</label>\\r\\n            <select class=\\\"form-control\\\" id=\\\"market\\\" required ngModel name=\\\"market\\\" formControlName=\\\"market\\\">\\r\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n              <option *ngFor=\\\"let item of Markets\\\" value=\\\"{{ item.id }}\\\">\\r\\n                {{ item.attributes.Name }}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"crop\\\">Crop</label>\\r\\n            <select class=\\\"form-control\\\" id=\\\"crop\\\" required ngModel name=\\\"crop\\\" formControlName=\\\"crop\\\">\\r\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n              <option *ngFor=\\\"let item of Crops\\\" value=\\\"{{ item.id }}\\\">\\r\\n                {{ item.attributes.Name }}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"name\\\">Price</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Price\\\" name=\\\"Price\\\" formControlName=\\\"Price\\\"\\r\\n              placeholder=\\\"Enter price\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"name\\\">Unit</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Unit\\\" name=\\\"Unit\\\" formControlName=\\\"Unit\\\"\\r\\n              placeholder=\\\"Enter unit\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"Image\\\">Image</label>\\r\\n            <div>\\r\\n              <img *ngIf=\\\"imageUrl\\\" src=\\\"{{ imageUrl }}\\\" width=\\\"100\\\" height=\\\"100\\\" style=\\\"object-fit: cover\\\" />\\r\\n            </div>\\r\\n            <input type=\\\"file\\\" class=\\\"form-control\\\" id=\\\"Image\\\" accept=\\\".jpg,.jpeg,.JPEG,.png\\\" name=\\\"Image\\\"\\r\\n              (change)=\\\"onChange($event)\\\" formControlName=\\\"Image\\\" placeholder=\\\"Choose image\\\" />\\r\\n          </div>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cropPriceModal.hide()\\\">\\r\\n            Close\\r\\n          </button>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-2\\\" [disabled]=\\\"btnLoading || !cropPriceForm.valid\\\">\\r\\n            <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            Save changes\\r\\n          </button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- /.modal-content -->\\r\\n  </div>\\r\\n  <!-- /.modal-dialog -->\\r\\n</div>\";","import { Component, ViewChild } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DataService } from \"../../data.service\";\r\n// import { ActionRenderer } from \"../../utils/StatusRenderer\";\r\n\r\nimport { CropPricesColumn } from \"../../constants/columnMetadata\";\r\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\r\n\r\n@Component({\r\n  templateUrl: \"crop-prices.component.html\",\r\n})\r\nexport class CropPricesComponent {\r\n  rowSelection: string;\r\n  constructor(\r\n    public dataservice: DataService,\r\n    public router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.columnDefs = [...CropPricesColumn];\r\n    this.rowSelection = \"single\";\r\n  }\r\n  @ViewChild(\"cropPriceModal\") public cropPriceModal: ModalDirective;\r\n  @ViewChild(\"detailsModal\") public detailsModal: ModalDirective;\r\n\r\n  loading = true;\r\n  btnLoading = false;\r\n  disableButton = true;\r\n  title = \"Verification\";\r\n  orders: any = {};\r\n  columnDefs = [];\r\n  States: any = [];\r\n  Markets: any = [];\r\n  Crops: any = [];\r\n  imageUrl;\r\n\r\n  cropPriceForm = this.fb.group({\r\n    crop: [\"\", Validators.required],\r\n    state: [\"\", Validators.required],\r\n    market: [\"\", Validators.required],\r\n    Price: [\"\", Validators.required],\r\n    Unit: [\"\", Validators.required],\r\n    Image: [\"\"],\r\n  });\r\n  // frameworkComponents = {\r\n  //   statusRenderer: ActionRenderer,\r\n  // };\r\n  rowData: any = [];\r\n  selectedRows: any = [];\r\n  selectedYear: any = new Date().getFullYear();\r\n  years: any = [];\r\n  private gridApi;\r\n  private gridColumnApi;\r\n  filter: any = {};\r\n  file: any = null;\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    console.log(this.router);\r\n    this.getCropPrices();\r\n    this.getCrops();\r\n    this.getMarkets();\r\n    this.getStates();\r\n  }\r\n  getCropPrices() {\r\n    this.dataservice.getCropPrices().valueChanges.subscribe((result: any) => {\r\n      console.log(\"getCropPrices\", result.data.cropPrices.data);\r\n      this.rowData = result.data.cropPrices.data;\r\n    });\r\n  }\r\n  getCrops() {\r\n    this.dataservice.getCrops().valueChanges.subscribe((result: any) => {\r\n      console.log(\"getCrops\", result.data.crops.data);\r\n      this.Crops = result.data.crops.data;\r\n    });\r\n  }\r\n  getStates() {\r\n    this.dataservice.getStates().valueChanges.subscribe((result: any) => {\r\n      console.log(\"getStates\", result.data.states.data);\r\n      this.States = result.data.states.data;\r\n    });\r\n  }\r\n  getMarkets(id?) {\r\n    this.dataservice.getMarkets(id).valueChanges.subscribe((result: any) => {\r\n      console.log(\"getMarkets\", result.data.markets.data);\r\n      this.Markets = result.data.markets.data;\r\n    });\r\n  }\r\n  filterMarkets(event) {\r\n    this.getMarkets(event.target.value);\r\n  }\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n  onRowClicked(event: any) {\r\n    console.log(\"row\", event.data);\r\n  }\r\n  onSelectionChanged(event: any) {\r\n    this.selectedRows = this.gridApi.getSelectedRows();\r\n    if (this.selectedRows.length > 0) {\r\n      this.disableButton = false;\r\n    } else {\r\n      this.disableButton = true;\r\n    }\r\n    console.log(this.selectedRows, this.selectedRows[0].attributes.Name);\r\n  }\r\n  // On file Select\r\n  onChange(event: any) {\r\n    this.file = [];\r\n    for (var i = 0; i < event.target.files.length; i++) {\r\n      this.file.push(event.target.files[i]);\r\n    }\r\n    console.log(this.file);\r\n  }\r\n  openModal(data: any) {\r\n    this.imageUrl = null;\r\n    this.cropPriceModal.show();\r\n    if (data) {\r\n      this.cropPriceForm = this.fb.group({\r\n        crop: [\r\n          this.selectedRows[0].attributes.crop.data.id,\r\n          Validators.required,\r\n        ],\r\n        state: [\r\n          this.selectedRows[0].attributes.state.data.id,\r\n          Validators.required,\r\n        ],\r\n        market: [\r\n          this.selectedRows[0].attributes.market.data.id,\r\n          Validators.required,\r\n        ],\r\n        Price: [this.selectedRows[0].attributes.Price, Validators.required],\r\n        Unit: [this.selectedRows[0].attributes.Unit, Validators.required],\r\n        Image: [\r\n          this.selectedRows[0].attributes.Image?.data?.id,\r\n          Validators.required,\r\n        ],\r\n      });\r\n      this.imageUrl = this.selectedRows[0].attributes.Image?.data?.attributes\r\n        ?.url\r\n        ? \"https://indoramaapp.untanglestrategy.com\" +\r\n          this.selectedRows[0].attributes.Image?.data?.attributes?.url\r\n        : null;\r\n    } else {\r\n      this.cropPriceForm = this.fb.group({\r\n        crop: [\"\", Validators.required],\r\n        state: [\"\", Validators.required],\r\n        market: [\"\", Validators.required],\r\n        Price: [\"\", Validators.required],\r\n        Unit: [\"\", Validators.required],\r\n        Image: [\"\", Validators.required],\r\n      });\r\n      this.imageUrl = null;\r\n    }\r\n  }\r\n  cropPriceSubmit() {\r\n    let resp = {};\r\n    console.log(this.cropPriceForm.value);\r\n    if (!this.disableButton) {\r\n      if (this.file) {\r\n        this.dataservice.upload(this.file).subscribe((response: any) => {\r\n          if (response.status == 200) {\r\n            console.log(response);\r\n            this.dataservice\r\n          .UpdateCropPrice(\r\n            this.cropPriceForm.value,\r\n            this.selectedRows[0].id,\r\n            response.body[0]?.id\r\n          )\r\n          .subscribe((result: any) => {\r\n            resp = result.data;\r\n            console.log(\"response\", result);\r\n            if (result.data.updateCropPrice) {\r\n              this.toastr.success(\"Success!\");\r\n              this.getCropPrices();\r\n              this.file = null;\r\n              this.cropPriceModal.hide();\r\n              this.gridApi.deselectAll();\r\n            } else {\r\n              this.toastr.error(\"Failed. Please check the fields!\");\r\n            }\r\n          });\r\n          }\r\n        });\r\n      } else {\r\n        this.dataservice\r\n          .UpdateCropPrice(\r\n            this.cropPriceForm.value,\r\n            this.selectedRows[0].id,\r\n            null\r\n          )\r\n          .subscribe((result: any) => {\r\n            resp = result.data;\r\n            console.log(\"response\", result);\r\n            if (result.data.updateCropPrice) {\r\n              this.toastr.success(\"Success!\");\r\n              this.getCropPrices();\r\n              this.file = null;\r\n              this.cropPriceModal.hide();\r\n              this.gridApi.deselectAll();\r\n            } else {\r\n              this.toastr.error(\"Failed. Please check the fields!\");\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      this.dataservice.upload(this.file).subscribe((response: any) => {\r\n        if (response.status == 200) {\r\n          console.log(response);\r\n          this.dataservice\r\n            .AddCropPrice(this.cropPriceForm.value, response.body[0]?.id)\r\n            .subscribe((result: any) => {\r\n              resp = result.data;\r\n              console.log(\"response\", result);\r\n              if (result.data.createCropPrice) {\r\n                this.toastr.success(\"Success!\");\r\n                this.getCropPrices();\r\n                this.file = null;\r\n                this.cropPriceModal.hide();\r\n                this.gridApi.deselectAll();\r\n              } else {\r\n                this.toastr.error(\"Failed. Please check the fields!\");\r\n              }\r\n            });\r\n        } else {\r\n          this.toastr.error(\"Image failed to upload!\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n"]}