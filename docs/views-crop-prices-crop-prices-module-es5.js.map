{"version":3,"sources":["webpack:///src/app/views/crop-prices/crop-prices-routing.module.ts","webpack:///src/app/views/crop-prices/crop-prices.module.ts","webpack:///src/app/views/crop-prices/crop-prices.component.html","webpack:///src/app/views/crop-prices/crop-prices.component.ts"],"names":["routes","path","children","redirectTo","component","data","roles","title","SoilTestRoutingModule","imports","forChild","exports","CropPricesModule","withComponents","forRoot","declarations","CropPricesComponent","dataservice","router","fb","toastr","loading","btnLoading","disableButton","disableNextButton","disablePrevButton","selectedList","listCheck","publicationState","toApprove","undefined","isRejected","columnDefs","States","Markets","Crops","pageSize","from","to","count","cropPriceForm","group","crop","required","state","market","Price","Unit","Image","rowData","selectedRows","selectedYear","Date","getFullYear","years","filter","file","rowSelection","console","log","getCropPrices","getCrops","getMarkets","getStates","valueChanges","subscribe","result","cropPrices","meta","pagination","pageCount","total","crops","length","states","id","markets","event","target","value","params","gridApi","api","gridColumnApi","columnApi","sizeColumnsToFit","getSelectedRows","i","files","push","check","published","UpdateCropPrice","updateCropPrice","success","approveModal","hide","deselectAll","error","resp","downloadCropPrices","body","status","message","window","open","apiUrl","show","imageUrl","cropPriceModal","attributes","url","upload","response","reset","AddCropPrice","createCropPrice","template"],"mappings":"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","file":"views-crop-prices-crop-prices-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CropPricesComponent } from './crop-prices.component';\r\nimport { AuthGuard } from '../login/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'cropprices'\r\n      },\r\n      {\r\n        path: 'all',\r\n        // canActivate: [AuthGuard],\r\n        component: CropPricesComponent,\r\n        data: {\r\n          roles: 'KP_CALLER',\r\n          title: 'Crop Prices'\r\n        }\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SoilTestRoutingModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { CropPricesComponent } from './crop-prices.component';\r\n\r\n// Dropdowns Component\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\n// Buttons Routing\r\nimport { SoilTestRoutingModule } from './crop-prices-routing.module';\r\n\r\n// Angular\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TabsModule,\r\n    ReactiveFormsModule,\r\n    AgGridModule.withComponents([]),\r\n    SoilTestRoutingModule,\r\n    BsDropdownModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    CropPricesComponent,\r\n  ]\r\n})\r\nexport class CropPricesModule { }\r\n","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div\\n      class=\\\"card-header\\\"\\n      style=\\\"display: flex; justify-content: space-between\\\"\\n    >\\n      <h2>Crop Prices Home</h2>\\n      <div>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-outline-primary\\\"\\n          data-toggle=\\\"modal\\\"\\n          (click)=\\\"downloadExcel()\\\"\\n        >\\n          Download excel\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-warning\\\"\\n          data-toggle=\\\"modal\\\"\\n          [disabled]=\\\"disableButton\\\"\\n          (click)=\\\"openApproveModal()\\\"\\n        >\\n          Approve / Reject\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          [disabled]=\\\"disableButton\\\"\\n          class=\\\"btn btn-info\\\"\\n          data-toggle=\\\"modal\\\"\\n          (click)=\\\"openModal('Edit')\\\"\\n        >\\n          Edit\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          [disabled]=\\\"!disableButton\\\"\\n          class=\\\"btn btn-primary\\\"\\n          data-toggle=\\\"modal\\\"\\n          (click)=\\\"openModal()\\\"\\n        >\\n          Add New Price\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <div class=\\\"btn-group float-right mb-3\\\" dropdown>\\n            <button\\n              dropdownToggle\\n              type=\\\"button\\\"\\n              class=\\\"btn btn-primary dropdown-toggle\\\"\\n            >\\n              {{ selectedList }}<span class=\\\"caret\\\"></span>\\n            </button>\\n            <ul *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\n              <li role=\\\"menuitem\\\">\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"toggleCropPrices('All')\\\"\\n                  >All</a\\n                >\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"toggleCropPrices('Approvalpending')\\\"\\n                  >Approval pending</a\\n                >\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"toggleCropPrices('Rejected')\\\"\\n                  >Rejected</a\\n                >\\n              </li>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <ag-grid-angular\\n            #agGrid\\n            style=\\\"width: 100%; height: 65vh\\\"\\n            id=\\\"myGrid\\\"\\n            class=\\\"ag-theme-alpine\\\"\\n            [columnDefs]=\\\"columnDefs\\\"\\n            [rowData]=\\\"rowData\\\"\\n            [rowSelection]=\\\"rowSelection\\\"\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\n            (gridReady)=\\\"onGridReady($event)\\\"\\n            animateRows=\\\"true\\\"\\n          >\\n          </ag-grid-angular>\\n          <span class=\\\"float-left mt-3\\\"\\n            >{{ from }} to {{ to }} of {{ meta?.pagination?.total }}</span\\n          >\\n          <button\\n            type=\\\"button\\\"\\n            [disabled]=\\\"disableNextButton\\\"\\n            class=\\\"btn btn-primary float-right m-2\\\"\\n            (click)=\\\"loadNext()\\\"\\n          >\\n            Next\\n          </button>\\n          <span class=\\\"float-right mt-3\\\"\\n            >Page {{ meta?.pagination?.page }} of\\n            {{ meta?.pagination?.pageCount }}</span\\n          >\\n          <button\\n            type=\\\"button\\\"\\n            [disabled]=\\\"disablePrevButton\\\"\\n            class=\\\"btn btn-primary float-right m-2\\\"\\n            (click)=\\\"loadPrev()\\\"\\n          >\\n            Prev\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div\\n  bsModal\\n  #cropPriceModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add/Edit Crop Price</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"cropPriceModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"cropPriceForm\\\" (ngSubmit)=\\\"cropPriceSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"state\\\">State</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"state\\\"\\n              (change)=\\\"filterMarkets($event)\\\"\\n              required\\n              ngModel\\n              name=\\\"state\\\"\\n              formControlName=\\\"state\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"market\\\">Market</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"market\\\"\\n              required\\n              ngModel\\n              name=\\\"market\\\"\\n              formControlName=\\\"market\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of Markets\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"crop\\\">Crop</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"crop\\\"\\n              required\\n              ngModel\\n              name=\\\"crop\\\"\\n              formControlName=\\\"crop\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of Crops\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Price</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"Price\\\"\\n              name=\\\"Price\\\"\\n              formControlName=\\\"Price\\\"\\n              placeholder=\\\"Enter price\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Unit</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"Unit\\\"\\n              name=\\\"Unit\\\"\\n              formControlName=\\\"Unit\\\"\\n              placeholder=\\\"Enter unit\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"Image\\\">Image</label>\\n            <div>\\n              <img\\n                *ngIf=\\\"imageUrl\\\"\\n                src=\\\"{{ imageUrl }}\\\"\\n                width=\\\"100\\\"\\n                height=\\\"100\\\"\\n                style=\\\"object-fit: cover\\\"\\n              />\\n            </div>\\n            <input\\n              type=\\\"file\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"Image\\\"\\n              accept=\\\".jpg,.jpeg,.JPEG,.png\\\"\\n              name=\\\"Image\\\"\\n              (change)=\\\"onChange($event)\\\"\\n              formControlName=\\\"Image\\\"\\n              placeholder=\\\"Choose image\\\"\\n            />\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"cropPriceModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !cropPriceForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Save changes\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n    <!-- /.modal-content -->\\n  </div>\\n  <!-- /.modal-dialog -->\\n</div>\\n<div\\n  bsModal\\n  #approveModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-body text-center\\\">\\n        Do you want to approve this record?\\n      </div>\\n      <div class=\\\"modal-footer justify-content-around\\\">\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-secondary\\\"\\n          (click)=\\\"approveOrReject(true)\\\"\\n        >\\n          No! Reject.\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-primary\\\"\\n          (click)=\\\"approveOrReject(false)\\\"\\n        >\\n          Yes! Approve.\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { Component, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { DataService } from '../../data.service';\n// import { ActionRenderer } from \"../../utils/StatusRenderer\";\n\nimport { CropPricesColumn } from '../../constants/columnMetadata';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { environment } from '../../../environments/environment';\n\n@Component({\n  templateUrl: 'crop-prices.component.html',\n})\nexport class CropPricesComponent {\n  rowSelection: string;\n  constructor(\n    public dataservice: DataService,\n    public router: Router,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) {\n    this.columnDefs = [...CropPricesColumn];\n    this.rowSelection = 'single';\n  }\n  @ViewChild('cropPriceModal') public cropPriceModal: ModalDirective;\n  @ViewChild('approveModal') public approveModal: ModalDirective;\n\n  loading = true;\n  btnLoading = false;\n  disableButton = true;\n  disableNextButton = false;\n  disablePrevButton = true;\n  selectedList = 'All';\n  listCheck = false;\n  publicationState = 'PREVIEW';\n  toApprove = undefined;\n  isRejected = undefined;\n  columnDefs = [];\n  States: any = [];\n  Markets: any = [];\n  Crops: any = [];\n  imageUrl;\n  meta;\n  pageSize = 20;\n  from = 1;\n  to = 20;\n  count = 1;\n  cropPriceForm = this.fb.group({\n    crop: ['', Validators.required],\n    state: ['', Validators.required],\n    market: ['', Validators.required],\n    Price: ['', Validators.required],\n    Unit: ['', Validators.required],\n    Image: [''],\n  });\n  // frameworkComponents = {\n  //   statusRenderer: ActionRenderer,\n  // };\n  rowData: any = [];\n  selectedRows: any = [];\n  selectedYear: any = new Date().getFullYear();\n  years: any = [];\n  private gridApi;\n  private gridColumnApi;\n  filter: any = {};\n  file: any = null;\n\n  ngOnInit(): void {\n    this.loading = true;\n    console.log(this.router);\n    this.getCropPrices();\n    this.getCrops();\n    this.getMarkets();\n    this.getStates();\n  }\n  getCropPrices() {\n    this.dataservice\n      .getCropPrices(\n        1,\n        this.pageSize,\n        this.publicationState,\n        this.toApprove,\n        this.isRejected\n      )\n      .valueChanges.subscribe((result: any) => {\n        this.rowData = result.data.cropPrices.data;\n        this.meta = result.data.cropPrices.meta;\n        if (this.meta?.pagination?.pageCount <= 1) {\n          this.disablePrevButton = true;\n          this.disableNextButton = true;\n        }\n        if (this.meta?.pagination?.total < this.pageSize) {\n          this.to = this.meta?.pagination?.total;\n        }\n      });\n  }\n  getCrops() {\n    this.dataservice.getCrops(1, 10000, '').valueChanges.subscribe((result: any) => {\n      this.Crops = result.data.crops.data;\n    });\n  }\n  loadNext() {\n    this.count++;\n    this.disablePrevButton = false;\n    this.from = this.from + this.pageSize;\n    this.to =\n      this.to + this.pageSize > this.meta?.pagination?.total\n        ? this.meta?.pagination?.total\n        : this.to + this.pageSize;\n    if (this.count === this.meta.pagination.pageCount) {\n      this.disableNextButton = true;\n    }\n    this.dataservice\n      .getCropPrices(\n        this.count,\n        this.pageSize,\n        this.publicationState,\n        this.toApprove\n      )\n      .valueChanges.subscribe((result: any) => {\n        this.meta = result.data.cropPrices.meta;\n        this.rowData = result.data.cropPrices.data;\n      });\n  }\n  loadPrev() {\n    this.count--;\n    if (this.count < this.meta.pagination.pageCount) {\n      this.disableNextButton = false;\n    }\n    if (this.count === 1) {\n      this.disablePrevButton = true;\n    }\n    this.from = this.from - this.pageSize;\n    this.to = this.to - this.rowData.length;\n    this.dataservice\n      .getCropPrices(\n        this.count,\n        this.pageSize,\n        this.publicationState,\n        this.toApprove\n      )\n      .valueChanges.subscribe((result: any) => {\n        this.meta = result.data.cropPrices.meta;\n        this.rowData = result.data.cropPrices.data;\n      });\n  }\n  getStates() {\n    this.dataservice.getStates(1, 10000, '').valueChanges.subscribe((result: any) => {\n      console.log('getStates', result.data.states.data);\n      this.States = result.data.states.data;\n    });\n  }\n  getMarkets(id?) {\n    this.dataservice.getMarkets(1, 10000, '', id).valueChanges.subscribe((result: any) => {\n      console.log('getMarkets', result.data.markets.data);\n      this.Markets = result.data.markets.data;\n    });\n  }\n  filterMarkets(event) {\n    this.getMarkets(event.target.value);\n  }\n  toggleCropPrices(data) {\n    switch (data) {\n      case 'Rejected':\n        this.selectedList = 'Rejected';\n        this.publicationState = 'PREVIEW';\n        this.toApprove = null;\n        this.isRejected = true;\n        this.getCropPrices();\n        break;\n      case 'Approvalpending':\n        this.selectedList = 'Pending';\n        this.publicationState = 'PREVIEW';\n        this.toApprove = null;\n        this.isRejected = false;\n        this.getCropPrices();\n        break;\n      case 'All':\n        this.selectedList = 'All';\n        this.publicationState = 'PREVIEW';\n        this.toApprove = undefined;\n        this.isRejected = undefined;\n        this.getCropPrices();\n        break;\n    }\n    // if (data == 'Approvalpending') {\n    //   this.selectedList = \"Approval Pending\";\n    //   this.publicationState = \"PREVIEW\";\n    //   this.toApprove = null;\n    //   this.getCropPrices();\n    // }\n    // else if{\n\n    // } else {\n    //   this.selectedList = \"All\";\n    //   this.publicationState = \"PREVIEW\";\n    //   this.toApprove = undefined;\n    //   this.getCropPrices();\n    // }\n  }\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.gridApi.sizeColumnsToFit();\n  }\n  onRowClicked(event: any) {\n    console.log('row', event.data);\n  }\n  onSelectionChanged(event: any) {\n    this.selectedRows = this.gridApi.getSelectedRows();\n    if (this.selectedRows.length > 0) {\n      this.disableButton = false;\n    } else {\n      this.disableButton = true;\n    }\n  }\n  // On file Select\n  onChange(event: any) {\n    this.file = [];\n    for (let i = 0; i < event.target.files.length; i++) {\n      this.file.push(event.target.files[i]);\n    }\n    console.log(this.file);\n  }\n  approveOrReject(check) {\n    let published = null;\n    if (!check) { published = new Date(); }\n    this.dataservice\n      .UpdateCropPrice(\n        undefined,\n        this.selectedRows[0].id,\n        undefined,\n        check,\n        published\n      )\n      .subscribe(\n        (result: any) => {\n          console.log('response', result);\n          if (result.data.updateCropPrice) {\n            this.toastr.success('Success!');\n            this.getCropPrices();\n            this.file = null;\n            this.approveModal.hide();\n            this.gridApi.deselectAll();\n            this.btnLoading = false;\n          }\n        },\n        (error) => {\n          this.toastr.error('Failed. Please check the fields!');\n          this.btnLoading = false;\n        }\n      );\n  }\n\n  downloadExcel() {\n    let resp = {};\n    this.btnLoading = true;\n    this.dataservice\n      .downloadCropPrices()\n      .subscribe((result: any) => {\n        resp = result.body;\n        console.log(result);\n        if (result.status === 200 && result.body.status == 'Success') {\n          this.toastr.success(result.body.message);\n          this.btnLoading = false;\n          window.open(`${environment.apiUrl}${result?.body?.path}`, '_blank');\n        } else {\n          this.btnLoading = false;\n          this.toastr.error(result.body.message);\n        }\n      });\n  }\n\n\n  openApproveModal() {\n    this.approveModal.show();\n  }\n  openModal(data?: any) {\n    this.imageUrl = null;\n    this.cropPriceModal.show();\n    if (data) {\n      this.cropPriceForm = this.fb.group({\n        crop: [\n          this.selectedRows[0].attributes.crop.data.id,\n          Validators.required,\n        ],\n        state: [\n          this.selectedRows[0].attributes.state.data.id,\n          Validators.required,\n        ],\n        market: [\n          this.selectedRows[0].attributes.market.data.id,\n          Validators.required,\n        ],\n        Price: [this.selectedRows[0].attributes.Price, Validators.required],\n        Unit: [this.selectedRows[0].attributes.Unit, Validators.required],\n        Image: [\n          this.selectedRows[0].attributes.Image?.data?.id,\n          Validators.required,\n        ],\n      });\n      this.imageUrl = this.selectedRows[0].attributes.Image?.data?.attributes\n        ?.url\n        ? `${environment.apiUrl}` +\n          this.selectedRows[0].attributes.Image?.data?.attributes?.url\n        : null;\n    } else {\n      this.cropPriceForm = this.fb.group({\n        crop: ['', Validators.required],\n        state: ['', Validators.required],\n        market: ['', Validators.required],\n        Price: ['', Validators.required],\n        Unit: ['', Validators.required],\n        Image: ['', Validators.required],\n      });\n      this.imageUrl = null;\n    }\n  }\n  cropPriceSubmit() {\n    let resp = {};\n    this.btnLoading = true;\n    console.log(this.cropPriceForm.value);\n    if (!this.disableButton) {\n      if (this.file) {\n        this.dataservice.upload(this.file).subscribe((response: any) => {\n          if (response.status == 200) {\n            console.log(response);\n            this.dataservice\n              .UpdateCropPrice(\n                this.cropPriceForm.value,\n                this.selectedRows[0].id,\n                response.body[0]?.id\n              )\n              .subscribe(\n                (result: any) => {\n                  resp = result.data;\n                  console.log('response', result);\n                  if (result.data.updateCropPrice) {\n                    this.toastr.success('Success!');\n                    this.getCropPrices();\n                    this.file = null;\n                    this.cropPriceModal.hide();\n                    this.cropPriceForm.reset();\n                    this.gridApi.deselectAll();\n                    this.btnLoading = false;\n                  }\n                },\n                (error) => {\n                  this.toastr.error('Failed. Please check the fields!');\n                  this.btnLoading = false;\n                }\n              );\n          }\n        });\n      } else {\n        this.dataservice\n          .UpdateCropPrice(\n            this.cropPriceForm.value,\n            this.selectedRows[0].id,\n            null\n          )\n          .subscribe(\n            (result: any) => {\n              resp = result.data;\n              console.log('response', result);\n              if (result.data.updateCropPrice) {\n                this.toastr.success('Success!');\n                this.getCropPrices();\n                this.file = null;\n                this.cropPriceModal.hide();\n                this.cropPriceForm.reset();\n                this.gridApi.deselectAll();\n                this.btnLoading = false;\n              }\n            },\n            (error) => {\n              this.toastr.error('Failed. Please check the fields!');\n              this.btnLoading = false;\n            }\n          );\n      }\n    } else {\n      this.dataservice.upload(this.file).subscribe((response: any) => {\n        if (response.status == 200) {\n          console.log(response);\n          this.dataservice\n            .AddCropPrice(this.cropPriceForm.value, response.body[0]?.id)\n            .subscribe(\n              (result: any) => {\n                resp = result.data;\n                console.log('response', result);\n                if (result.data.createCropPrice) {\n                  this.toastr.success('Success!');\n                  this.getCropPrices();\n                  this.file = null;\n                  this.cropPriceModal.hide();\n                  this.cropPriceForm.reset();\n                  this.gridApi.deselectAll();\n                }\n                this.btnLoading = false;\n              },\n              (error) => {\n                this.toastr.error('Failed. Please check the fields!');\n                this.btnLoading = false;\n              }\n            );\n        } else {\n          this.toastr.error('Image failed to upload!');\n        }\n      });\n    }\n  }\n}\n"]}