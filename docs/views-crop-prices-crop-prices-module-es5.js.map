{"version":3,"sources":["webpack:///src/app/views/crop-prices/crop-prices-routing.module.ts","webpack:///src/app/views/crop-prices/crop-prices.module.ts","webpack:///src/app/views/crop-prices/crop-prices.component.html","webpack:///src/app/views/crop-prices/crop-prices.component.ts"],"names":["routes","path","children","redirectTo","component","data","roles","title","SoilTestRoutingModule","imports","forChild","exports","CropPricesModule","withComponents","forRoot","declarations","CropPricesComponent","dataservice","router","fb","toastr","loading","btnLoading","disableButton","disableNextButton","disablePrevButton","selectedList","listCheck","publicationState","toApprove","undefined","isRejected","columnDefs","States","Markets","Crops","pageSize","from","to","count","cropPriceForm","group","crop","required","state","market","Price","Unit","Image","rowData","selectedRows","selectedYear","Date","getFullYear","years","filter","file","rowSelection","console","log","getCropPrices","getCrops","getMarkets","getStates","valueChanges","subscribe","result","cropPrices","meta","pagination","pageCount","total","crops","length","states","id","markets","event","target","value","params","gridApi","api","gridColumnApi","columnApi","sizeColumnsToFit","getSelectedRows","i","files","push","check","published","UpdateCropPrice","updateCropPrice","success","approveModal","hide","deselectAll","error","show","imageUrl","cropPriceModal","attributes","url","apiUrl","resp","upload","response","status","body","reset","AddCropPrice","createCropPrice","template"],"mappings":"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","file":"views-crop-prices-crop-prices-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CropPricesComponent } from './crop-prices.component';\nimport { AuthGuard } from '../login/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    \n    children: [\n      {\n        path: '',\n        redirectTo: 'cropprices'\n      },\n      {\n        path: 'all',\n        // canActivate: [AuthGuard],\n        component: CropPricesComponent,\n        data: {\n          roles: 'KP_CALLER',\n          title: 'Crop Prices'\n        }\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SoilTestRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { CropPricesComponent } from './crop-prices.component';\n\n// Dropdowns Component\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\n\n// Buttons Routing\nimport { SoilTestRoutingModule } from './crop-prices-routing.module';\n\n// Angular\nimport { AgGridModule } from 'ag-grid-angular';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TabsModule,\n    ReactiveFormsModule,\n    AgGridModule.withComponents([]),\n    SoilTestRoutingModule,\n    BsDropdownModule.forRoot(),\n    ModalModule.forRoot(),\n    FormsModule\n  ],\n  declarations: [\n    CropPricesComponent,\n  ]\n})\nexport class CropPricesModule { }\n","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div\\n      class=\\\"card-header\\\"\\n      style=\\\"display: flex; justify-content: space-between\\\"\\n    >\\n      <h2>Crop Prices Home</h2>\\n      <div>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-warning\\\"\\n          data-toggle=\\\"modal\\\"\\n          [disabled]=\\\"disableButton\\\"\\n          (click)=\\\"openApproveModal()\\\"\\n        >\\n          Approve / Reject\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          [disabled]=\\\"disableButton\\\"\\n          class=\\\"btn btn-info\\\"\\n          data-toggle=\\\"modal\\\"\\n          (click)=\\\"openModal('Edit')\\\"\\n        >\\n          Edit\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          [disabled]=\\\"!disableButton\\\"\\n          class=\\\"btn btn-primary\\\"\\n          data-toggle=\\\"modal\\\"\\n          (click)=\\\"openModal()\\\"\\n        >\\n          Add New Price\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <div class=\\\"btn-group float-right mb-3\\\" dropdown>\\n            <button\\n              dropdownToggle\\n              type=\\\"button\\\"\\n              class=\\\"btn btn-primary dropdown-toggle\\\"\\n            >\\n              {{ selectedList }}<span class=\\\"caret\\\"></span>\\n            </button>\\n            <ul *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\n              <li role=\\\"menuitem\\\">\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"toggleCropPrices('All')\\\"\\n                  >All</a\\n                >\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"toggleCropPrices('Approvalpending')\\\"\\n                  >Approval pending</a\\n                >\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"toggleCropPrices('Rejected')\\\"\\n                  >Rejected</a\\n                >\\n              </li>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <ag-grid-angular\\n            #agGrid\\n            style=\\\"width: 100%; height: 65vh\\\"\\n            id=\\\"myGrid\\\"\\n            class=\\\"ag-theme-alpine\\\"\\n            [columnDefs]=\\\"columnDefs\\\"\\n            [rowData]=\\\"rowData\\\"\\n            [rowSelection]=\\\"rowSelection\\\"\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\n            (gridReady)=\\\"onGridReady($event)\\\"\\n            animateRows=\\\"true\\\"\\n          >\\n          </ag-grid-angular>\\n          <span class=\\\"float-left mt-3\\\"\\n            >{{ from }} to {{ to }} of {{ meta?.pagination?.total }}</span\\n          >\\n          <button\\n            type=\\\"button\\\"\\n            [disabled]=\\\"disableNextButton\\\"\\n            class=\\\"btn btn-primary float-right m-2\\\"\\n            (click)=\\\"loadNext()\\\"\\n          >\\n            Next\\n          </button>\\n          <span class=\\\"float-right mt-3\\\"\\n            >Page {{ meta?.pagination?.page }} of\\n            {{ meta?.pagination?.pageCount }}</span\\n          >\\n          <button\\n            type=\\\"button\\\"\\n            [disabled]=\\\"disablePrevButton\\\"\\n            class=\\\"btn btn-primary float-right m-2\\\"\\n            (click)=\\\"loadPrev()\\\"\\n          >\\n            Prev\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div\\n  bsModal\\n  #cropPriceModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add/Edit Crop Price</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"cropPriceModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"cropPriceForm\\\" (ngSubmit)=\\\"cropPriceSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"state\\\">State</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"state\\\"\\n              (change)=\\\"filterMarkets($event)\\\"\\n              required\\n              ngModel\\n              name=\\\"state\\\"\\n              formControlName=\\\"state\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"market\\\">Market</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"market\\\"\\n              required\\n              ngModel\\n              name=\\\"market\\\"\\n              formControlName=\\\"market\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of Markets\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"crop\\\">Crop</label>\\n            <select\\n              class=\\\"form-control\\\"\\n              id=\\\"crop\\\"\\n              required\\n              ngModel\\n              name=\\\"crop\\\"\\n              formControlName=\\\"crop\\\"\\n            >\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n              <option *ngFor=\\\"let item of Crops\\\" value=\\\"{{ item.id }}\\\">\\n                {{ item.attributes.Name }}\\n              </option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Price</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"Price\\\"\\n              name=\\\"Price\\\"\\n              formControlName=\\\"Price\\\"\\n              placeholder=\\\"Enter price\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Unit</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"Unit\\\"\\n              name=\\\"Unit\\\"\\n              formControlName=\\\"Unit\\\"\\n              placeholder=\\\"Enter unit\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"Image\\\">Image</label>\\n            <div>\\n              <img\\n                *ngIf=\\\"imageUrl\\\"\\n                src=\\\"{{ imageUrl }}\\\"\\n                width=\\\"100\\\"\\n                height=\\\"100\\\"\\n                style=\\\"object-fit: cover\\\"\\n              />\\n            </div>\\n            <input\\n              type=\\\"file\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"Image\\\"\\n              accept=\\\".jpg,.jpeg,.JPEG,.png\\\"\\n              name=\\\"Image\\\"\\n              (change)=\\\"onChange($event)\\\"\\n              formControlName=\\\"Image\\\"\\n              placeholder=\\\"Choose image\\\"\\n            />\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"cropPriceModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !cropPriceForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Save changes\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n    <!-- /.modal-content -->\\n  </div>\\n  <!-- /.modal-dialog -->\\n</div>\\n<div\\n  bsModal\\n  #approveModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-body text-center\\\">\\n        Do you want to approve this record?\\n      </div>\\n      <div class=\\\"modal-footer justify-content-around\\\">\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-secondary\\\"\\n          (click)=\\\"approveOrReject(true)\\\"\\n        >\\n          No! Reject.\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-primary\\\"\\n          (click)=\\\"approveOrReject(false)\\\"\\n        >\\n          Yes! Approve.\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { Component, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { DataService } from \"../../data.service\";\n// import { ActionRenderer } from \"../../utils/StatusRenderer\";\n\nimport { CropPricesColumn } from \"../../constants/columnMetadata\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\nimport { environment } from \"../../../environments/environment\";\n\n@Component({\n  templateUrl: \"crop-prices.component.html\",\n})\nexport class CropPricesComponent {\n  rowSelection: string;\n  constructor(\n    public dataservice: DataService,\n    public router: Router,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) {\n    this.columnDefs = [...CropPricesColumn];\n    this.rowSelection = \"single\";\n  }\n  @ViewChild(\"cropPriceModal\") public cropPriceModal: ModalDirective;\n  @ViewChild(\"approveModal\") public approveModal: ModalDirective;\n\n  loading = true;\n  btnLoading = false;\n  disableButton = true;\n  disableNextButton = false;\n  disablePrevButton = true;\n  selectedList = \"All\";\n  listCheck = false;\n  publicationState = \"PREVIEW\";\n  toApprove = undefined;\n  isRejected = undefined;\n  columnDefs = [];\n  States: any = [];\n  Markets: any = [];\n  Crops: any = [];\n  imageUrl;\n  meta;\n  pageSize = 20;\n  from = 1;\n  to = 20;\n  count = 1;\n  cropPriceForm = this.fb.group({\n    crop: [\"\", Validators.required],\n    state: [\"\", Validators.required],\n    market: [\"\", Validators.required],\n    Price: [\"\", Validators.required],\n    Unit: [\"\", Validators.required],\n    Image: [\"\"],\n  });\n  // frameworkComponents = {\n  //   statusRenderer: ActionRenderer,\n  // };\n  rowData: any = [];\n  selectedRows: any = [];\n  selectedYear: any = new Date().getFullYear();\n  years: any = [];\n  private gridApi;\n  private gridColumnApi;\n  filter: any = {};\n  file: any = null;\n\n  ngOnInit(): void {\n    this.loading = true;\n    console.log(this.router);\n    this.getCropPrices();\n    this.getCrops();\n    this.getMarkets();\n    this.getStates();\n  }\n  getCropPrices() {\n    this.dataservice\n      .getCropPrices(\n        1,\n        this.pageSize,\n        this.publicationState,\n        this.toApprove,\n        this.isRejected\n      )\n      .valueChanges.subscribe((result: any) => {\n        this.rowData = result.data.cropPrices.data;\n        this.meta = result.data.cropPrices.meta;\n        if (this.meta?.pagination?.pageCount <= 1) {\n          this.disablePrevButton = true;\n          this.disableNextButton = true;\n        }\n        if (this.meta?.pagination?.total < this.pageSize) {\n          this.to = this.meta?.pagination?.total;\n        }\n      });\n  }\n  getCrops() {\n    this.dataservice.getCrops().valueChanges.subscribe((result: any) => {\n      this.Crops = result.data.crops.data;\n    });\n  }\n  loadNext() {\n    this.count++;\n    this.disablePrevButton = false;\n    this.from = this.from + this.pageSize;\n    this.to =\n      this.to + this.pageSize > this.meta?.pagination?.total\n        ? this.meta?.pagination?.total\n        : this.to + this.pageSize;\n    if (this.count === this.meta.pagination.pageCount) {\n      this.disableNextButton = true;\n    }\n    this.dataservice\n      .getCropPrices(\n        this.count,\n        this.pageSize,\n        this.publicationState,\n        this.toApprove\n      )\n      .valueChanges.subscribe((result: any) => {\n        this.meta = result.data.cropPrices.meta;\n        this.rowData = result.data.cropPrices.data;\n      });\n  }\n  loadPrev() {\n    this.count--;\n    if (this.count < this.meta.pagination.pageCount) {\n      this.disableNextButton = false;\n    }\n    if (this.count === 1) {\n      this.disablePrevButton = true;\n    }\n    this.from = this.from - this.pageSize;\n    this.to = this.to - this.rowData.length;\n    this.dataservice\n      .getCropPrices(\n        this.count,\n        this.pageSize,\n        this.publicationState,\n        this.toApprove\n      )\n      .valueChanges.subscribe((result: any) => {\n        this.meta = result.data.cropPrices.meta;\n        this.rowData = result.data.cropPrices.data;\n      });\n  }\n  getStates() {\n    this.dataservice.getStates().valueChanges.subscribe((result: any) => {\n      console.log(\"getStates\", result.data.states.data);\n      this.States = result.data.states.data;\n    });\n  }\n  getMarkets(id?) {\n    this.dataservice.getMarkets(id).valueChanges.subscribe((result: any) => {\n      console.log(\"getMarkets\", result.data.markets.data);\n      this.Markets = result.data.markets.data;\n    });\n  }\n  filterMarkets(event) {\n    this.getMarkets(event.target.value);\n  }\n  toggleCropPrices(data) {\n    switch (data) {\n      case \"Rejected\":\n        this.selectedList = \"Rejected\";\n        this.publicationState = \"PREVIEW\";\n        this.toApprove = null;\n        this.isRejected = true;\n        this.getCropPrices();\n        break;\n      case \"Approvalpending\":\n        this.selectedList = \"Pending\";\n        this.publicationState = \"PREVIEW\";\n        this.toApprove = null;\n        this.isRejected = false;\n        this.getCropPrices();\n        break;\n      case \"All\":\n        this.selectedList = \"All\";\n        this.publicationState = \"PREVIEW\";\n        this.toApprove = undefined;\n        this.isRejected = undefined;\n        this.getCropPrices();\n        break;\n    }\n    // if (data == 'Approvalpending') {\n    //   this.selectedList = \"Approval Pending\";\n    //   this.publicationState = \"PREVIEW\";\n    //   this.toApprove = null;\n    //   this.getCropPrices();\n    // }\n    // else if{\n\n    // } else {\n    //   this.selectedList = \"All\";\n    //   this.publicationState = \"PREVIEW\";\n    //   this.toApprove = undefined;\n    //   this.getCropPrices();\n    // }\n  }\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.gridApi.sizeColumnsToFit();\n  }\n  onRowClicked(event: any) {\n    console.log(\"row\", event.data);\n  }\n  onSelectionChanged(event: any) {\n    this.selectedRows = this.gridApi.getSelectedRows();\n    if (this.selectedRows.length > 0) {\n      this.disableButton = false;\n    } else {\n      this.disableButton = true;\n    }\n  }\n  // On file Select\n  onChange(event: any) {\n    this.file = [];\n    for (var i = 0; i < event.target.files.length; i++) {\n      this.file.push(event.target.files[i]);\n    }\n    console.log(this.file);\n  }\n  approveOrReject(check) {\n    let published = null;\n    if (!check) published = new Date();\n    this.dataservice\n      .UpdateCropPrice(\n        undefined,\n        this.selectedRows[0].id,\n        undefined,\n        check,\n        published\n      )\n      .subscribe(\n        (result: any) => {\n          console.log(\"response\", result);\n          if (result.data.updateCropPrice) {\n            this.toastr.success(\"Success!\");\n            this.getCropPrices();\n            this.file = null;\n            this.approveModal.hide();\n            this.gridApi.deselectAll();\n            this.btnLoading = false;\n          }\n        },\n        (error) => {\n          this.toastr.error(\"Failed. Please check the fields!\");\n          this.btnLoading = false;\n        }\n      );\n  }\n  openApproveModal() {\n    this.approveModal.show();\n  }\n  openModal(data?: any) {\n    this.imageUrl = null;\n    this.cropPriceModal.show();\n    if (data) {\n      this.cropPriceForm = this.fb.group({\n        crop: [\n          this.selectedRows[0].attributes.crop.data.id,\n          Validators.required,\n        ],\n        state: [\n          this.selectedRows[0].attributes.state.data.id,\n          Validators.required,\n        ],\n        market: [\n          this.selectedRows[0].attributes.market.data.id,\n          Validators.required,\n        ],\n        Price: [this.selectedRows[0].attributes.Price, Validators.required],\n        Unit: [this.selectedRows[0].attributes.Unit, Validators.required],\n        Image: [\n          this.selectedRows[0].attributes.Image?.data?.id,\n          Validators.required,\n        ],\n      });\n      this.imageUrl = this.selectedRows[0].attributes.Image?.data?.attributes\n        ?.url\n        ? `${environment.apiUrl}` +\n          this.selectedRows[0].attributes.Image?.data?.attributes?.url\n        : null;\n    } else {\n      this.cropPriceForm = this.fb.group({\n        crop: [\"\", Validators.required],\n        state: [\"\", Validators.required],\n        market: [\"\", Validators.required],\n        Price: [\"\", Validators.required],\n        Unit: [\"\", Validators.required],\n        Image: [\"\", Validators.required],\n      });\n      this.imageUrl = null;\n    }\n  }\n  cropPriceSubmit() {\n    let resp = {};\n    this.btnLoading = true;\n    console.log(this.cropPriceForm.value);\n    if (!this.disableButton) {\n      if (this.file) {\n        this.dataservice.upload(this.file).subscribe((response: any) => {\n          if (response.status == 200) {\n            console.log(response);\n            this.dataservice\n              .UpdateCropPrice(\n                this.cropPriceForm.value,\n                this.selectedRows[0].id,\n                response.body[0]?.id\n              )\n              .subscribe(\n                (result: any) => {\n                  resp = result.data;\n                  console.log(\"response\", result);\n                  if (result.data.updateCropPrice) {\n                    this.toastr.success(\"Success!\");\n                    this.getCropPrices();\n                    this.file = null;\n                    this.cropPriceModal.hide();\n                    this.cropPriceForm.reset();\n                    this.gridApi.deselectAll();\n                    this.btnLoading = false;\n                  }\n                },\n                (error) => {\n                  this.toastr.error(\"Failed. Please check the fields!\");\n                  this.btnLoading = false;\n                }\n              );\n          }\n        });\n      } else {\n        this.dataservice\n          .UpdateCropPrice(\n            this.cropPriceForm.value,\n            this.selectedRows[0].id,\n            null\n          )\n          .subscribe(\n            (result: any) => {\n              resp = result.data;\n              console.log(\"response\", result);\n              if (result.data.updateCropPrice) {\n                this.toastr.success(\"Success!\");\n                this.getCropPrices();\n                this.file = null;\n                this.cropPriceModal.hide();\n                this.cropPriceForm.reset();\n                this.gridApi.deselectAll();\n                this.btnLoading = false;\n              }\n            },\n            (error) => {\n              this.toastr.error(\"Failed. Please check the fields!\");\n              this.btnLoading = false;\n            }\n          );\n      }\n    } else {\n      this.dataservice.upload(this.file).subscribe((response: any) => {\n        if (response.status == 200) {\n          console.log(response);\n          this.dataservice\n            .AddCropPrice(this.cropPriceForm.value, response.body[0]?.id)\n            .subscribe(\n              (result: any) => {\n                resp = result.data;\n                console.log(\"response\", result);\n                if (result.data.createCropPrice) {\n                  this.toastr.success(\"Success!\");\n                  this.getCropPrices();\n                  this.file = null;\n                  this.cropPriceModal.hide();\n                  this.cropPriceForm.reset();\n                  this.gridApi.deselectAll();\n                }\n                this.btnLoading = false;\n              },\n              (error) => {\n                this.toastr.error(\"Failed. Please check the fields!\");\n                this.btnLoading = false;\n              }\n            );\n        } else {\n          this.toastr.error(\"Image failed to upload!\");\n        }\n      });\n    }\n  }\n}\n"]}