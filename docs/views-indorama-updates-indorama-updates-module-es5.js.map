{"version":3,"sources":["webpack:///src/app/views/indorama-updates/indorama-updates-routing.module.ts","webpack:///src/app/views/indorama-updates/indorama-updates.module.ts","webpack:///src/app/views/indorama-updates/indorama-updates.component.html","webpack:///src/app/views/indorama-updates/indorama-updates.component.ts"],"names":["routes","path","children","redirectTo","component","IndoramaUpdatesRoutingModule","imports","forChild","exports","IndoramaUpdatesModule","withComponents","forRoot","declarations","IndoramaUpdatesComponent","dataservice","router","fb","toastr","loading","btnLoading","disableButton","orders","columnDefs","newsForm","group","Title","required","Body","Image","rowData","selectedRows","selectedYear","Date","getFullYear","years","filter","file","rowSelection","console","log","getUpdates","id","getIndoramaUpdates","valueChanges","subscribe","result","data","newsAndUpdates","params","gridApi","api","gridColumnApi","columnApi","sizeColumnsToFit","event","getSelectedRows","length","target","files","imageUrl","cropPriceModal","show","attributes","Images","url","resp","UpdateIndoramaUpdates","isDelete","updateNewsAndUpdate","success","deleteModal","hide","deselectAll","error","value","upload","response","status","body","AddIndoramaUpdates","createNewsAndUpdate","template"],"mappings":"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","file":"views-indorama-updates-indorama-updates-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IndoramaUpdatesComponent } from './indorama-updates.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    \r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'cropprices'\r\n      },\r\n      {\r\n        path: 'all',\r\n        // canActivate: [AuthGuard],\r\n        component: IndoramaUpdatesComponent,\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class IndoramaUpdatesRoutingModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { IndoramaUpdatesRoutingModule } from './indorama-updates-routing.module';\r\nimport { IndoramaUpdatesComponent } from './indorama-updates.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TabsModule,\r\n    ReactiveFormsModule,\r\n    AgGridModule.withComponents([]),\r\n    IndoramaUpdatesRoutingModule,\r\n    BsDropdownModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    IndoramaUpdatesComponent,\r\n  ]\r\n})\r\nexport class IndoramaUpdatesModule { }\r\n","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\r\\n      <h2>Indorama Updates</h2>\\r\\n      <div>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\" [disabled]=\\\"disableButton\\\"\\r\\n          (click)=\\\"deleteModal.show()\\\">\\r\\n          Delete\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" [disabled]=\\\"disableButton\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\"\\r\\n          (click)=\\\"openModal('Edit')\\\">\\r\\n          Edit\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" [disabled]=\\\"!disableButton\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\"\\r\\n          (click)=\\\"openModal()\\\">\\r\\n          Add New Update\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- <p class=\\\"text-muted mx-3\\\">\\r\\n      To approve a crop price simply select and edit the record without\\r\\n      modifying the data\\r\\n    </p> -->\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <ag-grid-angular #agGrid style=\\\"width: 100%; height: 65vh\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\r\\n            [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\r\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\" (gridReady)=\\\"onGridReady($event)\\\" animateRows=\\\"true\\\">\\r\\n          </ag-grid-angular>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div bsModal #cropPriceModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Add/Edit News</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"cropPriceModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"newsForm\\\" (ngSubmit)=\\\"cropPriceSubmit()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"Title\\\">Title</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Title\\\" name=\\\"Title\\\" formControlName=\\\"Title\\\"\\r\\n              placeholder=\\\"Enter title\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"Body\\\">Body</label>\\r\\n            <textarea  class=\\\"form-control\\\" id=\\\"Body\\\" rows=\\\"5\\\" name=\\\"Body\\\" formControlName=\\\"Body\\\"\\r\\n              placeholder=\\\"Enter Body\\\" ></textarea>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"Image\\\">Image</label>\\r\\n            <div>\\r\\n              <img *ngIf=\\\"imageUrl\\\" src=\\\"{{ imageUrl }}\\\" width=\\\"100\\\" height=\\\"100\\\" style=\\\"object-fit: cover\\\" />\\r\\n            </div>\\r\\n            <input type=\\\"file\\\" class=\\\"form-control\\\" id=\\\"Image\\\" accept=\\\".jpg,.jpeg,.JPEG,.png\\\" name=\\\"Image\\\"\\r\\n              (change)=\\\"onChange($event)\\\" formControlName=\\\"Image\\\" placeholder=\\\"Choose image\\\" />\\r\\n          </div>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cropPriceModal.hide()\\\">\\r\\n            Close\\r\\n          </button>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-2\\\" [disabled]=\\\"btnLoading || !newsForm.valid\\\">\\r\\n            <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            Save changes\\r\\n          </button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- /.modal-content -->\\r\\n  </div>\\r\\n  <!-- /.modal-dialog -->\\r\\n</div>\\r\\n<div bsModal #deleteModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body text-center\\\">\\r\\n        Do you want to delete this record?\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer justify-content-around\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"deleteModal.hide()\\\">\\r\\n          No! Cancel.\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deleteRecord()\\\">\\r\\n          Yes! Delete.\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";","import { Component, ViewChild } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DataService } from \"../../data.service\";\r\nimport { IndoramaUpdatesColumn } from \"../../constants/columnMetadata\";\r\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\r\n\r\n@Component({\r\n  templateUrl: \"indorama-updates.component.html\",\r\n})\r\nexport class IndoramaUpdatesComponent {\r\n  rowSelection: string;\r\n  constructor(\r\n    public dataservice: DataService,\r\n    public router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.columnDefs = [...IndoramaUpdatesColumn];\r\n    this.rowSelection = \"single\";\r\n  }\r\n  @ViewChild(\"cropPriceModal\") public cropPriceModal: ModalDirective;\r\n  @ViewChild(\"detailsModal\") public detailsModal: ModalDirective;\r\n  @ViewChild(\"deleteModal\") public deleteModal: ModalDirective;\r\n\r\n  loading = true;\r\n  btnLoading = false;\r\n  disableButton = true;\r\n  orders: any = {};\r\n  columnDefs = [];\r\n  imageUrl;\r\n\r\n  newsForm = this.fb.group({\r\n    Title: [\"\", Validators.required],\r\n    Body: [\"\", Validators.required],\r\n    Image: [\"\"],\r\n  });\r\n  rowData: any = [];\r\n  selectedRows: any = [];\r\n  selectedYear: any = new Date().getFullYear();\r\n  years: any = [];\r\n  private gridApi;\r\n  private gridColumnApi;\r\n  filter: any = {};\r\n  file: any = null;\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    console.log(this.router);\r\n    this.getUpdates();\r\n  }\r\n  getUpdates(id?) {\r\n    this.dataservice\r\n      .getIndoramaUpdates(id)\r\n      .valueChanges.subscribe((result: any) => {\r\n        console.log(\"getIndoramaUpdates\", result.data.newsAndUpdates.data);\r\n        this.rowData = result.data.newsAndUpdates.data;\r\n      });\r\n  }\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n  onRowClicked(event: any) {\r\n    console.log(\"row\", event.data);\r\n  }\r\n  onSelectionChanged(event: any) {\r\n    this.selectedRows = this.gridApi.getSelectedRows();\r\n    if (this.selectedRows.length > 0) {\r\n      this.disableButton = false;\r\n    } else {\r\n      this.disableButton = true;\r\n    }\r\n  }\r\n  // On file Select\r\n  onChange(event: any) {\r\n    this.file = event.target.files[0];\r\n    console.log(event.target.files[0]);\r\n  }\r\n  openModal(data: any) {\r\n    this.imageUrl = null;\r\n    this.cropPriceModal.show();\r\n    if (data) {\r\n      this.newsForm = this.fb.group({\r\n        Title: [\r\n          this.selectedRows[0].attributes.Title,\r\n          Validators.required,\r\n        ],\r\n        Body: [\r\n          this.selectedRows[0].attributes.Body,\r\n          Validators.required,\r\n        ],\r\n        Image: [\r\n          this.selectedRows[0].attributes.Images?.data[0]?.id,\r\n          Validators.required,\r\n        ],\r\n      });\r\n      this.imageUrl = this.selectedRows[0].attributes.Images?.data[0]?.attributes\r\n        ?.url\r\n        ? \"https://indoramaapp.untanglestrategy.com\" +\r\n          this.selectedRows[0].attributes.Images?.data[0]?.attributes?.url\r\n        : null;\r\n    } else {\r\n      this.newsForm = this.fb.group({\r\n        Title: [\"\", Validators.required],\r\n        Body: [\"\", Validators.required],\r\n        Image: [\"\", Validators.required],\r\n      });\r\n      this.imageUrl = null;\r\n    }\r\n  }\r\n  deleteRecord() {\r\n    let resp = {}\r\n    this.dataservice\r\n      .UpdateIndoramaUpdates({isDelete: true}, this.selectedRows[0].id, null)\r\n      .subscribe((result: any) => {\r\n        resp = result.data;\r\n        console.log(\"response\", result);\r\n        if (result.data.updateNewsAndUpdate) {\r\n          this.toastr.success(\"Success!\");\r\n          this.getUpdates();\r\n          this.file = null;\r\n          this.deleteModal.hide();\r\n          this.gridApi.deselectAll();\r\n        } else {\r\n          this.toastr.error(\"Failed. Please check the fields!\");\r\n        }\r\n      });\r\n  }\r\n  cropPriceSubmit() {\r\n    let resp = {};\r\n    console.log(this.newsForm.value);\r\n    if (!this.disableButton) {\r\n      if (this.file) {\r\n        this.dataservice.upload(this.file).subscribe((response: any) => {\r\n          if (response.status == 200) {\r\n            console.log(response);\r\n            this.dataservice\r\n              .UpdateIndoramaUpdates(\r\n                this.newsForm.value,\r\n                this.selectedRows[0].id,\r\n                response.body[0]?.id\r\n              )\r\n              .subscribe((result: any) => {\r\n                resp = result.data;\r\n                console.log(\"response\", result);\r\n                if (result.data.updateNewsAndUpdate) {\r\n                  this.toastr.success(\"Success!\");\r\n                  this.file = null;\r\n                  this.getUpdates();\r\n                  this.cropPriceModal.hide();\r\n                  this.gridApi.deselectAll();\r\n                } else {\r\n                  this.toastr.error(\"Failed. Please check the fields!\");\r\n                }\r\n              });\r\n          }\r\n        });\r\n      } else {\r\n        this.dataservice\r\n          .UpdateIndoramaUpdates(\r\n            this.newsForm.value,\r\n            this.selectedRows[0].id,\r\n            null\r\n          )\r\n          .subscribe((result: any) => {\r\n            resp = result.data;\r\n            console.log(\"response\", result);\r\n            if (result.data.updateNewsAndUpdate) {\r\n              this.toastr.success(\"Success!\");\r\n              this.file = null;\r\n              this.cropPriceModal.hide();\r\n              this.gridApi.deselectAll();\r\n              this.getUpdates();\r\n            } else {\r\n              this.toastr.error(\"Failed. Please check the fields!\");\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      this.dataservice.upload(this.file).subscribe((response: any) => {\r\n        if (response.status == 200) {\r\n          console.log(response);\r\n          this.dataservice\r\n            .AddIndoramaUpdates(this.newsForm.value, response.body[0]?.id)\r\n            .subscribe((result: any) => {\r\n              resp = result.data;\r\n              console.log(\"response\", result);\r\n              if (result.data.createNewsAndUpdate) {\r\n                this.toastr.success(\"Success!\");\r\n                this.file = null;\r\n                this.cropPriceModal.hide();\r\n                this.getUpdates();\r\n                this.gridApi.deselectAll();\r\n              } else {\r\n                this.toastr.error(\"Failed. Please check the fields!\");\r\n              }\r\n            });\r\n        } else {\r\n          this.toastr.error(\"Image failed to upload!\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n"]}