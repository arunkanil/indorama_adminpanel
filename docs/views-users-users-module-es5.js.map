{"version":3,"sources":["webpack:///src/app/views/users/users.module.ts","webpack:///src/app/views/users/users-routing.module.ts","webpack:///src/app/views/users/user-detail.component.ts","webpack:///src/app/views/users/user-detail.component.html","webpack:///src/app/views/users/users.component.html","webpack:///src/app/views/users/users.component.ts"],"names":["UsersModule","imports","withComponents","forRoot","declarations","routes","path","children","redirectTo","component","data","title","RetailersRoutingModule","forChild","exports","UserDetailComponent","dataservice","activatedRouter","router","fb","toastr","baseURL","apiUrl","loading","details","btnLoading","dateConverter","users","Villages","LGA","Areas","Retailers","Farmers","States","Crops","file","dispArea","agentForm","group","ContactNumber","required","blocked","Name","Farmer","UserType","Bio","password","state","village","lga","Latitude","Longitude","resultForm","id","itemName","price","unit","areaForm","agronomist_lgas","productForm","Image","getLists","getAreas","getCrops","getLGAs","getStates","getVillages","getFarmers","getRetailers","params","subscribe","getTest","url","getsingleRetailer","valueChanges","result","console","log","usersPermissionsUsers","attributes","agronomists","crops","states","lgas","areas","getRetailerCategories","retailerCategories","getUsers","undefined","villages","date","Date","flag","resultModal","show","soil_test_sample","ItemName","Price","Unit","deleteObj","deleteModal","resp","value","UpdateRetailer","updateUsersPermissionsUser","success","myModal","hide","error","UpdateRetailerProducts","retailer_categories","updateRetailerProduct","event","i","target","files","length","push","upload","response","status","UpdateRetailerPic","body","addProductModal","areaModal","addRetailerProducts","createRetailerProduct","deleteUser","deleteUsersPermissionsUser","navigate","template","UsersComponent","disableNextButton","disablePrevButton","pageSize","from","to","count","columnDefs","rowData","selectedYear","getFullYear","years","filter","setForm","rowSelection","commentForm","username","minLength","cannotContainSpace","email","Gender","Age","controls","meta","pagination","pageCount","total","gridApi","api","gridColumnApi","columnApi","sizeColumnsToFit","selectedRows","getSelectedRows","detailsModal","createRetailer","commentModal"],"mappings":"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","file":"views-users-users-module-es5.js","sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { UsersComponent } from './users.component';\r\n\r\n// Dropdowns Component\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\n// Buttons Routing\r\nimport { RetailersRoutingModule } from './users-routing.module';\r\n\r\n// Angular\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { UserDetailComponent } from './user-detail.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TabsModule,\r\n    ReactiveFormsModule,\r\n    AgGridModule.withComponents([]),\r\n    RetailersRoutingModule,\r\n    BsDropdownModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    UsersComponent,\r\n    UserDetailComponent\r\n  ]\r\n})\r\nexport class UsersModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UsersComponent } from './users.component';\r\nimport { AuthGuard } from '../login/auth.guard';\r\nimport { UserDetailComponent } from './user-detail.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    \r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'retailers'\r\n      },\r\n      {\r\n        path: 'all',\r\n        // canActivate: [AuthGuard],\r\n        component: UsersComponent,\r\n        data: {\r\n          title: 'Users'\r\n        }\r\n      },\r\n      {\r\n        path: 'user_details/:id',\r\n        // canActivate: [AuthGuard],\r\n        component: UserDetailComponent,\r\n        data: {\r\n          title: 'Retailer Details'\r\n        }\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RetailersRoutingModule {}\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DataService } from \"../../data.service\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { dateConverter } from \"../../constants/columnMetadata\";\r\nimport { environment } from \"../../../environments/environment\";\r\n\r\n@Component({\r\n  templateUrl: \"user-detail.component.html\",\r\n})\r\nexport class UserDetailComponent implements OnInit {\r\n  constructor(\r\n    public dataservice: DataService,\r\n    private activatedRouter: ActivatedRoute,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {}\r\n  @ViewChild(\"myModal\") public myModal: ModalDirective;\r\n  @ViewChild(\"areaModal\") public areaModal: ModalDirective;\r\n  @ViewChild(\"resultModal\") public resultModal: ModalDirective;\r\n  @ViewChild(\"deleteModal\") public deleteModal: ModalDirective;\r\n  @ViewChild(\"addProductModal\") public addProductModal: ModalDirective;\r\n\r\n  id: any;\r\n  baseURL = environment.apiUrl;\r\n  loading = true;\r\n  details: any = [];\r\n  btnLoading = false;\r\n  dateConverter = dateConverter;\r\n  users: any = [];\r\n  Villages: any = [];\r\n  LGA: any = [];\r\n  Areas: any = [];\r\n  Retailers: any = [];\r\n  Farmers: any = [];\r\n  States: any = [];\r\n  Crops: any = [];\r\n  file: any = null;\r\n  dispArea = false;\r\n  agronomists;\r\n  flag;\r\n  deleteObj;\r\n  agentForm = this.fb.group({\r\n    ContactNumber: [\"\", Validators.required],\r\n    // username: [\"\", Validators.required],\r\n    blocked: [\"\"],\r\n    Name: [\"\", Validators.required],\r\n    // email: [\"\", Validators.required],\r\n    Farmer: [\"\", Validators.required],\r\n    UserType: [\"\", Validators.required],\r\n    Bio: [\"\"],\r\n    password: [\"\"],\r\n    state: [\"\", Validators.required],\r\n    village: [\"\", Validators.required],\r\n    lga: [\"\", Validators.required],\r\n    Latitude: [\"\"],\r\n    Longitude: [\"\"],\r\n  });\r\n  resultForm = this.fb.group({\r\n    id: [\"\"],\r\n    itemName: [\"\", Validators.required],\r\n    price: [\"\", Validators.required],\r\n    unit: [\"\", Validators.required],\r\n  });\r\n  areaForm = this.fb.group({\r\n    state: [\"\"],\r\n    agronomist_lgas: [\"\", Validators.required],\r\n  });\r\n  productForm = this.fb.group({\r\n    Image: [\"\", Validators.required],\r\n    itemName: [\"\", Validators.required],\r\n    price: [\"\", Validators.required],\r\n    unit: [\"\", Validators.required],\r\n  });\r\n  ngOnInit(): void {\r\n    this.getLists();\r\n    this.getAreas();\r\n    this.getCrops();\r\n    this.getLGAs();\r\n    this.getStates();\r\n    this.getVillages();\r\n    this.getFarmers();\r\n    this.getRetailers();\r\n    this.activatedRouter.params.subscribe((params) => {\r\n      this.id = params[\"id\"];\r\n    });\r\n    this.getTest();\r\n  }\r\n  imgUrl(url) {\r\n    return `${environment.apiUrl}` + url;\r\n  }\r\n  getTest() {\r\n    this.dataservice\r\n      .getsingleRetailer(this.id)\r\n      .valueChanges.subscribe((result: any) => {\r\n        console.log(\r\n          \"getsingleRetailer\",\r\n          result.data.usersPermissionsUsers.data[0]\r\n        );\r\n        this.details = result.data.usersPermissionsUsers.data[0];\r\n        this.agentForm = this.fb.group({\r\n          ContactNumber: [\r\n            this.details.attributes?.ContactNumber,\r\n            Validators.required,\r\n          ],\r\n          Name: [this.details.attributes?.Name, Validators.required],\r\n          // email: [this.details.attributes?.email, Validators.required],\r\n          Bio: [this.details.attributes?.Bio],\r\n          Latitude: [this.details.attributes?.Latitude],\r\n          Longitude: [this.details.attributes?.Longitude],\r\n          state: [\r\n            this.details?.attributes?.lga?.data?.attributes?.state?.data?.id,\r\n            Validators.required,\r\n          ],\r\n          lga: [this.details?.attributes?.lga?.data?.id, Validators.required],\r\n          village: [\r\n            this.details?.attributes?.village?.data?.id,\r\n            Validators.required,\r\n          ],\r\n          password: [\"\"],\r\n          blocked: [this.details?.attributes?.blocked],\r\n          UserType: [this.details?.attributes?.UserType, Validators.required],\r\n        });\r\n        this.loading = false;\r\n        this.dispArea =\r\n          this.details?.attributes?.UserType == \"Agronomist\" ? true : false;\r\n        if (this.dispArea == true) {\r\n          this.agronomists = this.details?.attributes?.agronomist_lgas?.data;\r\n          // this.dataservice\r\n          //   .getAgronomist(this.id)\r\n          //   .valueChanges.subscribe((result: any) => {\r\n          //     console.log(\"getAgronomist\", result?.data?.agronomists?.data);\r\n          //     this.agronomists = result?.data?.agronomists?.data[0];\r\n          //   });\r\n        }\r\n      });\r\n  }\r\n  getCrops() {\r\n    this.dataservice.getCrops().valueChanges.subscribe((result: any) => {\r\n      console.log(\"getCrops\", result.data.crops.data);\r\n      this.Crops = result.data.crops.data;\r\n    });\r\n  }\r\n  getStates() {\r\n    this.dataservice.getStates().valueChanges.subscribe((result: any) => {\r\n      console.log(\"getStates\", result.data.states.data);\r\n      this.States = result.data.states.data;\r\n    });\r\n  }\r\n  getLGAs(id?) {\r\n    this.dataservice.getLGAs(id).valueChanges.subscribe((result: any) => {\r\n      console.log(\"getLGAs\", result.data.lgas.data);\r\n      this.LGA = result.data.lgas.data;\r\n    });\r\n  }\r\n  getAreas(id?) {\r\n    this.dataservice.getAreas(id).valueChanges.subscribe((result: any) => {\r\n      console.log(\"getAreas\", result.data.areas.data);\r\n      this.Areas = result.data.areas.data;\r\n    });\r\n  }\r\n  getRetailers() {\r\n    this.dataservice\r\n      .getRetailerCategories()\r\n      .valueChanges.subscribe((result: any) => {\r\n        console.log(\"getRetailers\", result.data.retailerCategories.data);\r\n        this.Retailers = result.data.retailerCategories.data;\r\n      });\r\n  }\r\n  getFarmers() {\r\n    this.dataservice\r\n      .getUsers(undefined, undefined, \"Farmer\")\r\n      .valueChanges.subscribe((result: any) => {\r\n        console.log(\"getFarmers\", result.data.usersPermissionsUsers.data);\r\n        this.Farmers = result.data.usersPermissionsUsers.data;\r\n      });\r\n  }\r\n  getVillages(id?) {\r\n    this.dataservice.getVillages(id).valueChanges.subscribe((result: any) => {\r\n      console.log(\"getVillages\", result.data.villages.data);\r\n      this.Villages = result.data.villages.data;\r\n    });\r\n  }\r\n  dateConvertor(date) {\r\n    return new Date(date);\r\n  }\r\n  getLists() {\r\n    this.loading = true;\r\n  }\r\n  openModal(data: any, flag) {\r\n    this.resultModal.show();\r\n    console.log(data, flag);\r\n    this.flag = flag;\r\n    this.resultForm = this.fb.group({\r\n      id: [data?.id],\r\n      soil_test_sample: [data?.id],\r\n      itemName: [data?.attributes?.ItemName, Validators.required],\r\n      price: [data?.attributes?.Price, Validators.required],\r\n      unit: [data?.attributes?.Unit, Validators.required],\r\n    });\r\n  }\r\n  openDeleteModal(data) {\r\n    this.deleteObj = data;\r\n    this.deleteModal.show();\r\n  }\r\n  FormSubmit() {\r\n    let resp = {};\r\n    this.btnLoading = true;\r\n    console.log(this.agentForm.value);\r\n    this.dataservice.UpdateRetailer(this.agentForm.value, this.id).subscribe(\r\n      (result: any) => {\r\n        resp = result.data;\r\n        console.log(\"response\", result);\r\n        if (result.data.updateUsersPermissionsUser) {\r\n          this.toastr.success(\"User updated successfully!\");\r\n          this.btnLoading = false;\r\n          this.myModal.hide();\r\n          this.getTest();\r\n        } else {\r\n          this.toastr.error(\"Failed. Please check the fields!\");\r\n          this.btnLoading = false;\r\n        }\r\n      },\r\n      (error) => {\r\n        this.btnLoading = false;\r\n      }\r\n    );\r\n  }\r\n  ResultSubmit() {\r\n    console.log(\"edit\", this.resultForm.value);\r\n    let resp = {};\r\n    console.log(this.resultForm.value);\r\n    this.dataservice\r\n      .UpdateRetailerProducts(\r\n        this.resultForm.value,\r\n        this.details?.attributes?.retailer_categories?.data[0]?.id,\r\n        this.id\r\n      )\r\n      .subscribe((result: any) => {\r\n        resp = result.data;\r\n        console.log(\"response\", result);\r\n        if (result.data.updateRetailerProduct) {\r\n          this.toastr.success(\"Product updated successfully!\");\r\n          this.resultModal.hide();\r\n          this.getTest();\r\n        } else {\r\n          this.toastr.error(\"Failed. Please check the fields!\");\r\n        }\r\n      });\r\n  }\r\n  onChange(event: any) {\r\n    this.file = [];\r\n    for (var i = 0; i < event.target.files.length; i++) {\r\n      this.file.push(event.target.files[i]);\r\n    }\r\n    console.log(this.file);\r\n  }\r\n  filterLGA(event) {\r\n    this.getLGAs(event.target.value);\r\n  }\r\n  filterArea(event) {\r\n    this.getAreas(event.target.value);\r\n  }\r\n  filterVillage(event) {\r\n    this.getVillages(event.target.value);\r\n  }\r\n  uploadProfPic() {\r\n    let resp = {};\r\n    this.dataservice.upload(this.file).subscribe((response: any) => {\r\n      if (response.status == 200) {\r\n        console.log(response);\r\n        this.dataservice\r\n          .UpdateRetailerPic(this.id, response.body[0]?.id)\r\n          .subscribe((result: any) => {\r\n            resp = result.data;\r\n            console.log(\"response\", result);\r\n            if (result.data.updateUsersPermissionsUser) {\r\n              this.toastr.success(\"Success!\");\r\n              this.file = null;\r\n              this.getTest();\r\n              this.addProductModal.hide();\r\n            } else {\r\n              this.toastr.error(\"Failed!\");\r\n            }\r\n          });\r\n      } else {\r\n        this.toastr.error(\"Image failed to upload!\");\r\n      }\r\n    });\r\n  }\r\n  AreaSubmit() {\r\n    let resp = {};\r\n    console.log(this.areaForm.value);\r\n    this.dataservice\r\n      .UpdateRetailer(this.areaForm.value, this.id)\r\n      .subscribe((result: any) => {\r\n        resp = result.data;\r\n        console.log(\"response\", result);\r\n        if (result.data.updateUsersPermissionsUser) {\r\n          this.toastr.success(\"User updated successfully!\");\r\n          this.areaModal.hide();\r\n          this.getTest();\r\n        } else {\r\n          this.toastr.error(\"Failed. Please check the fields!\");\r\n        }\r\n      });\r\n  }\r\n  ProductSubmit() {\r\n    let resp = {};\r\n    this.dataservice.upload(this.file).subscribe((response: any) => {\r\n      if (response.status == 200) {\r\n        console.log(response);\r\n        this.dataservice\r\n          .addRetailerProducts(\r\n            this.productForm.value,\r\n            this.details?.attributes?.retailer_categories?.data[0]?.id,\r\n            this.id,\r\n            response.body[0]?.id\r\n          )\r\n          .subscribe((result: any) => {\r\n            resp = result.data;\r\n            console.log(\"response\", result);\r\n            if (result.data.createRetailerProduct) {\r\n              this.toastr.success(\"Success!\");\r\n              this.file = null;\r\n              this.getTest();\r\n              this.addProductModal.hide();\r\n            } else {\r\n              this.toastr.error(\"Failed!\");\r\n            }\r\n          });\r\n      } else {\r\n        this.toastr.error(\"Image failed to upload!\");\r\n      }\r\n    });\r\n  }\r\n  deleteProduct() {\r\n    if (this.details?.attributes?.UserType !== \"Agronomist\") {\r\n      this.dataservice.deleteUser(this.id).subscribe((result: any) => {\r\n        console.log(\"response\", result);\r\n        if (result.data.deleteUsersPermissionsUser) {\r\n          this.toastr.success(\"Success!\");\r\n          this.deleteModal.hide();\r\n          this.router.navigate([\"/users/all\"]);\r\n        } else {\r\n          this.toastr.error(\"Failed!\");\r\n        }\r\n      });\r\n    } else {\r\n      this.toastr.error(\"Can't delete Agronomist. Try setting as blocked.\");\r\n    }\r\n  }\r\n}\r\n","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div\\r\\n    bsModal\\r\\n    #deleteModal=\\\"bs-modal\\\"\\r\\n    class=\\\"modal fade\\\"\\r\\n    tabindex=\\\"-1\\\"\\r\\n    role=\\\"dialog\\\"\\r\\n    aria-labelledby=\\\"myModalLabel\\\"\\r\\n    aria-hidden=\\\"true\\\"\\r\\n  >\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-body text-center\\\">\\r\\n          Do you want to delete this record?\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer justify-content-around\\\">\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-secondary\\\"\\r\\n            (click)=\\\"deleteModal.hide()\\\"\\r\\n          >\\r\\n            No! Cancel.\\r\\n          </button>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-primary\\\"\\r\\n            (click)=\\\"deleteProduct()\\\"\\r\\n          >\\r\\n            Yes! Delete.\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div\\r\\n    bsModal\\r\\n    #areaModal=\\\"bs-modal\\\"\\r\\n    class=\\\"modal fade\\\"\\r\\n    tabindex=\\\"-1\\\"\\r\\n    role=\\\"dialog\\\"\\r\\n    aria-labelledby=\\\"myModalLabel\\\"\\r\\n    aria-hidden=\\\"true\\\"\\r\\n  >\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title\\\">Edit assigned areas</h4>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"close\\\"\\r\\n            (click)=\\\"myModal.hide()\\\"\\r\\n            aria-label=\\\"Close\\\"\\r\\n          >\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <form [formGroup]=\\\"areaForm\\\" (ngSubmit)=\\\"AreaSubmit()\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"state\\\">State</label>\\r\\n              <select\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"state\\\"\\r\\n                (change)=\\\"filterLGA($event)\\\"\\r\\n                ngModel\\r\\n                name=\\\"state\\\"\\r\\n                formControlName=\\\"state\\\"\\r\\n              >\\r\\n                <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n                <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\r\\n                  {{ item.attributes.Name }}\\r\\n                </option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"lga\\\">LGA</label>\\r\\n              <select\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"lga\\\"\\r\\n                (change)=\\\"filterArea($event)\\\"\\r\\n                ngModel\\r\\n                name=\\\"lga\\\"\\r\\n                formControlName=\\\"lga\\\"\\r\\n              >\\r\\n                <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n                <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\r\\n                  {{ item.attributes.Name }}\\r\\n                </option>\\r\\n              </select>\\r\\n            </div> -->\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"agronomist_lgas\\\">LGAs</label>\\r\\n              <select\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"agronomist_lgas\\\"\\r\\n                multiple\\r\\n                required\\r\\n                ngModel\\r\\n                name=\\\"agronomist_lgas\\\"\\r\\n                formControlName=\\\"agronomist_lgas\\\"\\r\\n              >\\r\\n                <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n                <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\r\\n                  {{ item.attributes.Name }}\\r\\n                </option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              class=\\\"btn btn-secondary\\\"\\r\\n              (click)=\\\"areaModal.hide()\\\"\\r\\n            >\\r\\n              Close\\r\\n            </button>\\r\\n            <button\\r\\n              type=\\\"submit\\\"\\r\\n              class=\\\"btn btn-primary ml-2\\\"\\r\\n              [disabled]=\\\"btnLoading || !areaForm.valid\\\"\\r\\n            >\\r\\n              <span\\r\\n                *ngIf=\\\"btnLoading\\\"\\r\\n                class=\\\"spinner-border spinner-border-sm\\\"\\r\\n                role=\\\"status\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n              ></span>\\r\\n              Save changes\\r\\n            </button>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div\\r\\n      class=\\\"card-header\\\"\\r\\n      style=\\\"display: flex; justify-content: space-between\\\"\\r\\n    >\\r\\n      <h2>User Details</h2>\\r\\n      <span>\\r\\n        <div>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-primary\\\"\\r\\n            data-toggle=\\\"modal\\\"\\r\\n            (click)=\\\"myModal.show()\\\"\\r\\n          >\\r\\n            Edit\\r\\n          </button>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-danger\\\"\\r\\n            data-toggle=\\\"modal\\\"\\r\\n            (click)=\\\"deleteModal.show()\\\"\\r\\n          >\\r\\n            Delete\\r\\n          </button>\\r\\n        </div>\\r\\n      </span>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div style=\\\"display: flex; justify-content: space-between\\\">\\r\\n              <h4>Basic details</h4>\\r\\n            </div>\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td>ID</td>\\r\\n                  <td>{{ details?.id }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Username</td>\\r\\n                  <td>{{ details?.attributes?.username }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Profile pic</td>\\r\\n                  <td>\\r\\n                    <a\\r\\n                      href=\\\"{{ baseURL }}{{\\r\\n                        details?.attributes?.prof_pic?.data?.attributes?.url\\r\\n                      }}\\\"\\r\\n                      target=\\\"_blank\\\"\\r\\n                      ><img\\r\\n                        class=\\\"card-img-top\\\"\\r\\n                        style=\\\"width: 150px; height: 150px\\\"\\r\\n                        src=\\\"{{ baseURL }}{{\\r\\n                          details?.attributes?.prof_pic?.data?.attributes?.url\\r\\n                        }}\\\"\\r\\n                        alt=\\\"No image found\\\"\\r\\n                    /></a>\\r\\n                    <div style=\\\"display: flex\\\">\\r\\n                      <input\\r\\n                        type=\\\"file\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"prof_pic\\\"\\r\\n                        style=\\\"width: 250px\\\"\\r\\n                        accept=\\\".jpg,.jpeg,.JPEG,.png\\\"\\r\\n                        name=\\\"prof_pic\\\"\\r\\n                        (change)=\\\"onChange($event)\\\"\\r\\n                        placeholder=\\\"Choose image\\\"\\r\\n                      />\\r\\n                      <button\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"btn btn-outline-primary\\\"\\r\\n                        data-toggle=\\\"modal\\\"\\r\\n                        (click)=\\\"uploadProfPic()\\\"\\r\\n                      >\\r\\n                        Upload\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Name</td>\\r\\n                  <td>\\r\\n                    {{ details?.attributes?.Name }}\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Contact number</td>\\r\\n                  <td>{{ details?.attributes?.ContactNumber }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>User type</td>\\r\\n                  <td>{{ details?.attributes?.UserType }}</td>\\r\\n                </tr>\\r\\n                <!-- <tr>\\r\\n                  <td>Email</td>\\r\\n                  <td>\\r\\n                    {{ details?.attributes?.email }}\\r\\n                  </td>\\r\\n                </tr> -->\\r\\n                <tr>\\r\\n                  <td>Village</td>\\r\\n                  <td>\\r\\n                    {{ details?.attributes?.village?.data?.attributes?.Name }}\\r\\n                  </td>\\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n                  <td>LGA</td>\\r\\n                  <td>{{ details?.attributes?.lga?.data?.attributes.Name }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>State</td>\\r\\n                  <td>\\r\\n                    {{\\r\\n                      details?.attributes?.lga?.data?.attributes?.state?.data\\r\\n                        ?.attributes?.Name\\r\\n                    }}\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <!-- <tr>\\r\\n                  <td>Retailer Category</td>\\r\\n                  <td>\\r\\n                    {{\\r\\n                    details?.attributes?.retailer_categories?.data[0]?.attributes?.CategoryName\\r\\n                    }}\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Bio</td>\\r\\n                  <td style=\\\"width: 60%\\\">{{ details?.attributes?.Bio }}</td>\\r\\n                </tr> -->\\r\\n                <tr>\\r\\n                  <td>Created at</td>\\r\\n                  <td>{{ dateConvertor(details?.attributes?.createdAt) }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Last updated</td>\\r\\n                  <td>{{ dateConvertor(details?.attributes?.updatedAt) }}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"dispArea\\\" class=\\\"col\\\">\\r\\n          <div style=\\\"display: flex; justify-content: space-between\\\">\\r\\n            <h4>LGAs assigned</h4>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              class=\\\"btn btn-primary\\\"\\r\\n              data-toggle=\\\"modal\\\"\\r\\n              (click)=\\\"areaModal.show()\\\"\\r\\n            >\\r\\n              Edit LGAs\\r\\n            </button>\\r\\n          </div>\\r\\n          <ul>\\r\\n            <li *ngFor=\\\"let item of agronomists\\\">\\r\\n              {{ item?.attributes?.Name }}\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div\\r\\n        bsModal\\r\\n        #myModal=\\\"bs-modal\\\"\\r\\n        class=\\\"modal fade\\\"\\r\\n        tabindex=\\\"-1\\\"\\r\\n        role=\\\"dialog\\\"\\r\\n        aria-labelledby=\\\"myModalLabel\\\"\\r\\n        aria-hidden=\\\"true\\\"\\r\\n      >\\r\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n          <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <h4 class=\\\"modal-title\\\">Edit details</h4>\\r\\n              <button\\r\\n                type=\\\"button\\\"\\r\\n                class=\\\"close\\\"\\r\\n                (click)=\\\"myModal.hide()\\\"\\r\\n                aria-label=\\\"Close\\\"\\r\\n              >\\r\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n              </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n              <form [formGroup]=\\\"agentForm\\\" (ngSubmit)=\\\"FormSubmit()\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"Name\\\"\\r\\n                        >Name<span class=\\\"danger\\\">*</span></label\\r\\n                      >\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"Name\\\"\\r\\n                        name=\\\"Name\\\"\\r\\n                        formControlName=\\\"Name\\\"\\r\\n                        placeholder=\\\"Enter Name\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"market\\\"\\r\\n                        >Contact Number<span class=\\\"danger\\\">*</span></label\\r\\n                      >\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"ContactNumber\\\"\\r\\n                        name=\\\"ContactNumber\\\"\\r\\n                        formControlName=\\\"ContactNumber\\\"\\r\\n                        placeholder=\\\"Enter contact number\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                    <!-- <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"email\\\">email</label>\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"email\\\"\\r\\n                        name=\\\"email\\\"\\r\\n                        formControlName=\\\"email\\\"\\r\\n                        placeholder=\\\"Enter email\\\"\\r\\n                      />\\r\\n                    </div> -->\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"UserType\\\"\\r\\n                        >User type<span class=\\\"danger\\\">*</span></label\\r\\n                      >\\r\\n                      <select\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"UserType\\\"\\r\\n                        required\\r\\n                        ngModel\\r\\n                        name=\\\"UserType\\\"\\r\\n                        formControlName=\\\"UserType\\\"\\r\\n                      >\\r\\n                        <option value=\\\"\\\" disabled selected hidden>\\r\\n                          Choose...\\r\\n                        </option>\\r\\n                        <option value=\\\"Farmer\\\">Farmer</option>\\r\\n                        <option value=\\\"Retailer\\\">Retailer</option>\\r\\n                        <option value=\\\"Agronomist\\\">Agronomist</option>\\r\\n                        <option value=\\\"Admin\\\">Admin</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"Bio\\\">Bio</label>\\r\\n                      <textarea\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"Bio\\\"\\r\\n                        name=\\\"Bio\\\"\\r\\n                        formControlName=\\\"Bio\\\"\\r\\n                        placeholder=\\\"Enter Bio\\\"\\r\\n                      ></textarea>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"password\\\">Password</label>\\r\\n                      <input\\r\\n                        type=\\\"password\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"password\\\"\\r\\n                        name=\\\"password\\\"\\r\\n                        formControlName=\\\"password\\\"\\r\\n                        placeholder=\\\"Enter password\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                    <!-- <div class=\\\"form-check\\\">\\r\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" ngModel name=\\\"blocked\\\"\\r\\n                        formControlName=\\\"blocked\\\" id=\\\"blocked\\\">\\r\\n                      <label class=\\\"form-check-label\\\" for=\\\"blocked\\\">\\r\\n                        Blocked\\r\\n                      </label>\\r\\n                    </div> -->\\r\\n                    <!-- <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"blocked\\\">Active status</label>\\r\\n                      <input class=\\\"form-control\\\" type=\\\"checkbox\\\" id=\\\"blocked\\\" required ngModel name=\\\"blocked\\\"\\r\\n                        formControlName=\\\"blocked\\\" />\\r\\n                    </div> -->\\r\\n                  </div>\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"state\\\"\\r\\n                        >State<span class=\\\"danger\\\">*</span></label\\r\\n                      >\\r\\n                      <select\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"state\\\"\\r\\n                        (change)=\\\"filterLGA($event)\\\"\\r\\n                        required\\r\\n                        ngModel\\r\\n                        name=\\\"state\\\"\\r\\n                        formControlName=\\\"state\\\"\\r\\n                      >\\r\\n                        <option value=\\\"\\\" disabled selected hidden>\\r\\n                          Choose...\\r\\n                        </option>\\r\\n                        <option\\r\\n                          *ngFor=\\\"let item of States\\\"\\r\\n                          value=\\\"{{ item.id }}\\\"\\r\\n                        >\\r\\n                          {{ item.attributes.Name }}\\r\\n                        </option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"lga\\\">LGA<span class=\\\"danger\\\">*</span></label>\\r\\n                      <select\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"lga\\\"\\r\\n                        (change)=\\\"filterVillage($event)\\\"\\r\\n                        required\\r\\n                        ngModel\\r\\n                        name=\\\"lga\\\"\\r\\n                        formControlName=\\\"lga\\\"\\r\\n                      >\\r\\n                        <option value=\\\"\\\" disabled selected hidden>\\r\\n                          Choose...\\r\\n                        </option>\\r\\n                        <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\r\\n                          {{ item.attributes.Name }}\\r\\n                        </option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"village\\\"\\r\\n                        >Village<span class=\\\"danger\\\">*</span></label\\r\\n                      >\\r\\n                      <select\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"village\\\"\\r\\n                        required\\r\\n                        ngModel\\r\\n                        name=\\\"village\\\"\\r\\n                        formControlName=\\\"village\\\"\\r\\n                      >\\r\\n                        <option value=\\\"\\\" disabled selected hidden>\\r\\n                          Choose...\\r\\n                        </option>\\r\\n                        <option\\r\\n                          *ngFor=\\\"let item of Villages\\\"\\r\\n                          value=\\\"{{ item.id }}\\\"\\r\\n                        >\\r\\n                          {{ item.attributes.Name }}\\r\\n                        </option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"Latitude\\\">Latitude</label>\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"Latitude\\\"\\r\\n                        name=\\\"Latitude\\\"\\r\\n                        formControlName=\\\"Latitude\\\"\\r\\n                        placeholder=\\\"Enter Latitude\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"Longitude\\\">Longitude</label>\\r\\n                      <input\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"Longitude\\\"\\r\\n                        ngModel\\r\\n                        name=\\\"Longitude\\\"\\r\\n                        formControlName=\\\"Longitude\\\"\\r\\n                        placeholder=\\\"Enter Longitude\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"blocked\\\"\\r\\n                        >Status<span class=\\\"danger\\\">*</span></label\\r\\n                      >\\r\\n                      <select\\r\\n                        class=\\\"form-control\\\"\\r\\n                        id=\\\"blocked\\\"\\r\\n                        ngModel\\r\\n                        name=\\\"blocked\\\"\\r\\n                        formControlName=\\\"blocked\\\"\\r\\n                      >\\r\\n                        <option value=\\\"\\\" disabled selected hidden>\\r\\n                          Choose...\\r\\n                        </option>\\r\\n                        <option value=\\\"true\\\">Blocked</option>\\r\\n                        <option value=\\\"false\\\">Active</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      class=\\\"btn btn-secondary\\\"\\r\\n                      (click)=\\\"myModal.hide()\\\"\\r\\n                    >\\r\\n                      Close\\r\\n                    </button>\\r\\n                    <button\\r\\n                      type=\\\"submit\\\"\\r\\n                      class=\\\"btn btn-primary ml-2\\\"\\r\\n                      [disabled]=\\\"btnLoading || !agentForm.valid\\\"\\r\\n                    >\\r\\n                      <span\\r\\n                        *ngIf=\\\"btnLoading\\\"\\r\\n                        class=\\\"spinner-border spinner-border-sm\\\"\\r\\n                        role=\\\"status\\\"\\r\\n                        aria-hidden=\\\"true\\\"\\r\\n                      ></span>\\r\\n                      Save changes\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div\\r\\n        bsModal\\r\\n        #resultModal=\\\"bs-modal\\\"\\r\\n        class=\\\"modal fade\\\"\\r\\n        tabindex=\\\"-1\\\"\\r\\n        role=\\\"dialog\\\"\\r\\n        aria-labelledby=\\\"resultModalLabel\\\"\\r\\n        aria-hidden=\\\"true\\\"\\r\\n      >\\r\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n          <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <h4 class=\\\"modal-title\\\">Edit product</h4>\\r\\n              <button\\r\\n                type=\\\"button\\\"\\r\\n                class=\\\"close\\\"\\r\\n                (click)=\\\"resultModal.hide()\\\"\\r\\n                aria-label=\\\"Close\\\"\\r\\n              >\\r\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n              </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n              <form [formGroup]=\\\"resultForm\\\" (ngSubmit)=\\\"ResultSubmit()\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"id\\\">ID</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"soil_test_sample\\\"\\r\\n                    disabled=\\\"true\\\"\\r\\n                    name=\\\"id\\\"\\r\\n                    formControlName=\\\"id\\\"\\r\\n                  />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"itemName\\\">Item name</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"itemName\\\"\\r\\n                    name=\\\"itemName\\\"\\r\\n                    formControlName=\\\"itemName\\\"\\r\\n                  />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"price\\\">Price</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"price\\\"\\r\\n                    name=\\\"price\\\"\\r\\n                    formControlName=\\\"price\\\"\\r\\n                    placeholder=\\\"Enter value\\\"\\r\\n                  />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"unit\\\">Unit</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"unit\\\"\\r\\n                    name=\\\"unit\\\"\\r\\n                    formControlName=\\\"unit\\\"\\r\\n                    placeholder=\\\"Enter value\\\"\\r\\n                  />\\r\\n                </div>\\r\\n                <button\\r\\n                  type=\\\"button\\\"\\r\\n                  class=\\\"btn btn-secondary\\\"\\r\\n                  (click)=\\\"resultModal.hide()\\\"\\r\\n                >\\r\\n                  Close\\r\\n                </button>\\r\\n                <button\\r\\n                  type=\\\"submit\\\"\\r\\n                  class=\\\"btn btn-primary ml-2\\\"\\r\\n                  [disabled]=\\\"btnLoading\\\"\\r\\n                >\\r\\n                  <span\\r\\n                    *ngIf=\\\"btnLoading\\\"\\r\\n                    class=\\\"spinner-border spinner-border-sm\\\"\\r\\n                    role=\\\"status\\\"\\r\\n                    aria-hidden=\\\"true\\\"\\r\\n                  ></span>\\r\\n                  Save changes\\r\\n                </button>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div\\r\\n        bsModal\\r\\n        #addProductModal=\\\"bs-modal\\\"\\r\\n        class=\\\"modal fade\\\"\\r\\n        tabindex=\\\"-1\\\"\\r\\n        role=\\\"dialog\\\"\\r\\n        aria-labelledby=\\\"productModalLabel\\\"\\r\\n        aria-hidden=\\\"true\\\"\\r\\n      >\\r\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n          <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <h4 class=\\\"modal-title\\\">Add product</h4>\\r\\n              <button\\r\\n                type=\\\"button\\\"\\r\\n                class=\\\"close\\\"\\r\\n                (click)=\\\"addProductModal.hide()\\\"\\r\\n                aria-label=\\\"Close\\\"\\r\\n              >\\r\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n              </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n              <form [formGroup]=\\\"productForm\\\" (ngSubmit)=\\\"ProductSubmit()\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"itemName\\\">Item name</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"itemName\\\"\\r\\n                    name=\\\"itemName\\\"\\r\\n                    formControlName=\\\"itemName\\\"\\r\\n                  />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"price\\\">Price</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"price\\\"\\r\\n                    name=\\\"price\\\"\\r\\n                    formControlName=\\\"price\\\"\\r\\n                    placeholder=\\\"Enter value\\\"\\r\\n                  />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"unit\\\">Unit</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"unit\\\"\\r\\n                    name=\\\"unit\\\"\\r\\n                    formControlName=\\\"unit\\\"\\r\\n                    placeholder=\\\"Enter value\\\"\\r\\n                  />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"Image\\\">Image</label>\\r\\n                  <input\\r\\n                    type=\\\"file\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"Image\\\"\\r\\n                    accept=\\\".jpg,.jpeg,.JPEG,.png\\\"\\r\\n                    name=\\\"Image\\\"\\r\\n                    (change)=\\\"onChange($event)\\\"\\r\\n                    formControlName=\\\"Image\\\"\\r\\n                    placeholder=\\\"Choose image\\\"\\r\\n                  />\\r\\n                </div>\\r\\n                <button\\r\\n                  type=\\\"button\\\"\\r\\n                  class=\\\"btn btn-secondary\\\"\\r\\n                  (click)=\\\"addProductModal.hide()\\\"\\r\\n                >\\r\\n                  Close\\r\\n                </button>\\r\\n                <button\\r\\n                  type=\\\"submit\\\"\\r\\n                  class=\\\"btn btn-primary ml-2\\\"\\r\\n                  [disabled]=\\\"btnLoading || !productForm.valid\\\"\\r\\n                >\\r\\n                  <span\\r\\n                    *ngIf=\\\"btnLoading\\\"\\r\\n                    class=\\\"spinner-border spinner-border-sm\\\"\\r\\n                    role=\\\"status\\\"\\r\\n                    aria-hidden=\\\"true\\\"\\r\\n                  ></span>\\r\\n                  Save changes\\r\\n                </button>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div\\r\\n      class=\\\"card-header\\\"\\r\\n      style=\\\"display: flex; justify-content: space-between\\\"\\r\\n    >\\r\\n      <h2>Users</h2>\\r\\n      <button\\r\\n        type=\\\"button\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n        data-toggle=\\\"modal\\\"\\r\\n        (click)=\\\"commentModal.show()\\\"\\r\\n      >\\r\\n        Add New User\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <ag-grid-angular\\r\\n            #agGrid\\r\\n            style=\\\"width: 100%; height: 65vh\\\"\\r\\n            id=\\\"myGrid\\\"\\r\\n            class=\\\"ag-theme-alpine\\\"\\r\\n            [columnDefs]=\\\"columnDefs\\\"\\r\\n            [rowData]=\\\"rowData\\\"\\r\\n            [rowSelection]=\\\"rowSelection\\\"\\r\\n            (gridReady)=\\\"onGridReady($event)\\\"\\r\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\r\\n            animateRows=\\\"true\\\"\\r\\n          >\\r\\n          </ag-grid-angular>\\r\\n          <span class=\\\"float-left mt-3\\\"\\r\\n            >{{ from }} to {{ to }} of {{ meta?.pagination?.total }}</span\\r\\n          >\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            [disabled]=\\\"disableNextButton\\\"\\r\\n            class=\\\"btn btn-primary float-right m-2\\\"\\r\\n            (click)=\\\"loadNext()\\\"\\r\\n          >\\r\\n            Next\\r\\n          </button>\\r\\n          <span class=\\\"float-right mt-3\\\"\\r\\n            >Page {{ meta?.pagination?.page }} of\\r\\n            {{ meta?.pagination?.pageCount }}</span\\r\\n          >\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            [disabled]=\\\"disablePrevButton\\\"\\r\\n            class=\\\"btn btn-primary float-right m-2\\\"\\r\\n            (click)=\\\"loadPrev()\\\"\\r\\n          >\\r\\n            Prev\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div\\r\\n  bsModal\\r\\n  #commentModal=\\\"bs-modal\\\"\\r\\n  class=\\\"modal fade\\\"\\r\\n  tabindex=\\\"-1\\\"\\r\\n  role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\"\\r\\n>\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Add User</h4>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"close\\\"\\r\\n          (click)=\\\"commentModal.hide()\\\"\\r\\n          aria-label=\\\"Close\\\"\\r\\n        >\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"commentForm\\\" (ngSubmit)=\\\"formSubmit()\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"Name\\\">Name</label>\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"Name\\\"\\r\\n                  name=\\\"Name\\\"\\r\\n                  formControlName=\\\"Name\\\"\\r\\n                  placeholder=\\\"Enter  Name\\\"\\r\\n                />\\r\\n                <div\\r\\n                  *ngIf=\\\"f.Name.touched && f.Name.invalid\\\"\\r\\n                  class=\\\"text-danger\\\"\\r\\n                >\\r\\n                  <div *ngIf=\\\"f.Name.errors.required\\\">Name is required.</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"username\\\">Username</label>\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"username\\\"\\r\\n                  name=\\\"username\\\"\\r\\n                  formControlName=\\\"username\\\"\\r\\n                  placeholder=\\\"Enter username\\\"\\r\\n                />\\r\\n                <div\\r\\n                  *ngIf=\\\"f.username.touched && f.username.invalid\\\"\\r\\n                  class=\\\"text-danger\\\"\\r\\n                >\\r\\n                  <div *ngIf=\\\"f.username.errors.required\\\">\\r\\n                    Username is required.\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"f.username.errors.minlength\\\">\\r\\n                    Username should have minimum 3 characters.\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"f.username.errors.cannotContainSpace\\\">\\r\\n                    Username cannot contain space.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"password\\\">Password</label>\\r\\n                <input\\r\\n                  type=\\\"password\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"password\\\"\\r\\n                  name=\\\"password\\\"\\r\\n                  formControlName=\\\"password\\\"\\r\\n                  placeholder=\\\"Enter password\\\"\\r\\n                />\\r\\n                <div\\r\\n                  *ngIf=\\\"f.password.touched && f.password.invalid\\\"\\r\\n                  class=\\\"text-danger\\\"\\r\\n                >\\r\\n                  <div *ngIf=\\\"f.password.errors.required\\\">\\r\\n                    Password is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"UserType\\\">User type</label>\\r\\n                <select\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"UserType\\\"\\r\\n                  required\\r\\n                  ngModel\\r\\n                  name=\\\"UserType\\\"\\r\\n                  formControlName=\\\"UserType\\\"\\r\\n                >\\r\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n                  <option value=\\\"Farmer\\\">Farmer</option>\\r\\n                  <option value=\\\"Retailer\\\">Retailer</option>\\r\\n                  <option value=\\\"Agronomist\\\">Agronomist</option>\\r\\n                  <option value=\\\"Admin\\\">Admin</option>\\r\\n                </select>\\r\\n                <div\\r\\n                  *ngIf=\\\"f.UserType.touched && f.UserType.invalid\\\"\\r\\n                  class=\\\"text-danger\\\"\\r\\n                >\\r\\n                  <div *ngIf=\\\"f.UserType.errors.required\\\">\\r\\n                    User type is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"ContactNumber\\\">Contact number</label>\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"ContactNumber\\\"\\r\\n                  name=\\\"ContactNumber\\\"\\r\\n                  formControlName=\\\"ContactNumber\\\"\\r\\n                  placeholder=\\\"Enter contact number\\\"\\r\\n                />\\r\\n                <div\\r\\n                  *ngIf=\\\"f.ContactNumber.touched && f.ContactNumber.invalid\\\"\\r\\n                  class=\\\"text-danger\\\"\\r\\n                >\\r\\n                  <div *ngIf=\\\"f.ContactNumber.errors.required\\\">\\r\\n                    Contact number is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"name\\\">E-mail</label>\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"email\\\"\\r\\n                  name=\\\"email\\\"\\r\\n                  formControlName=\\\"email\\\"\\r\\n                  placeholder=\\\"Enter email\\\"\\r\\n                />\\r\\n              </div> -->\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"state\\\">State</label>\\r\\n                <select\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"state\\\"\\r\\n                  required\\r\\n                  ngModel\\r\\n                  (change)=\\\"filterLGA($event)\\\"\\r\\n                  name=\\\"state\\\"\\r\\n                  formControlName=\\\"state\\\"\\r\\n                >\\r\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n                  <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\r\\n                    {{ item.attributes.Name }}\\r\\n                  </option>\\r\\n                </select>\\r\\n                <div\\r\\n                  *ngIf=\\\"f.state.touched && f.state.invalid\\\"\\r\\n                  class=\\\"text-danger\\\"\\r\\n                >\\r\\n                  <div *ngIf=\\\"f.state.errors.required\\\">State is required.</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"lga\\\">LGA</label>\\r\\n                <select\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"lga\\\"\\r\\n                  required\\r\\n                  ngModel\\r\\n                  (change)=\\\"filterVillage($event)\\\"\\r\\n                  name=\\\"lga\\\"\\r\\n                  formControlName=\\\"lga\\\"\\r\\n                >\\r\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n                  <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\r\\n                    {{ item.attributes.Name }}\\r\\n                  </option>\\r\\n                </select>\\r\\n                <div *ngIf=\\\"f.lga.touched && f.lga.invalid\\\" class=\\\"text-danger\\\">\\r\\n                  <div *ngIf=\\\"f.lga.errors.required\\\">LGA is required.</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"village\\\">Village</label>\\r\\n                <select\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"village\\\"\\r\\n                  required\\r\\n                  ngModel\\r\\n                  name=\\\"village\\\"\\r\\n                  formControlName=\\\"village\\\"\\r\\n                >\\r\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n                  <option *ngFor=\\\"let item of Villages\\\" value=\\\"{{ item.id }}\\\">\\r\\n                    {{ item.attributes.Name }}\\r\\n                  </option>\\r\\n                </select>\\r\\n                <div\\r\\n                  *ngIf=\\\"f.village.touched && f.village.invalid\\\"\\r\\n                  class=\\\"text-danger\\\"\\r\\n                >\\r\\n                  <div *ngIf=\\\"f.village.errors.required\\\">\\r\\n                    Village is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"Gender\\\">Gender</label>\\r\\n                <select\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"Gender\\\"\\r\\n                  required\\r\\n                  ngModel\\r\\n                  name=\\\"Gender\\\"\\r\\n                  formControlName=\\\"Gender\\\"\\r\\n                >\\r\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n                  <option value=\\\"Male\\\">Male</option>\\r\\n                  <option value=\\\"Female\\\">Female</option>\\r\\n                </select>\\r\\n                <div\\r\\n                  *ngIf=\\\"f.Gender.touched && f.Gender.invalid\\\"\\r\\n                  class=\\\"text-danger\\\"\\r\\n                >\\r\\n                  <div *ngIf=\\\"f.Gender.errors.required\\\">\\r\\n                    Gender is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"Age\\\">Age</label>\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  id=\\\"Age\\\"\\r\\n                  name=\\\"Age\\\"\\r\\n                  formControlName=\\\"Age\\\"\\r\\n                  placeholder=\\\"Enter age\\\"\\r\\n                />\\r\\n                <div *ngIf=\\\"f.Age.touched && f.Age.invalid\\\" class=\\\"text-danger\\\">\\r\\n                  <div *ngIf=\\\"f.Age.errors.required\\\">Age is required.</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-secondary\\\"\\r\\n            (click)=\\\"commentModal.hide()\\\"\\r\\n          >\\r\\n            Close\\r\\n          </button>\\r\\n          <button\\r\\n            type=\\\"submit\\\"\\r\\n            class=\\\"btn btn-primary ml-2\\\"\\r\\n            [disabled]=\\\"btnLoading || !commentForm.valid\\\"\\r\\n          >\\r\\n            <span\\r\\n              *ngIf=\\\"btnLoading\\\"\\r\\n              class=\\\"spinner-border spinner-border-sm\\\"\\r\\n              role=\\\"status\\\"\\r\\n              aria-hidden=\\\"true\\\"\\r\\n            ></span>\\r\\n            Save changes\\r\\n          </button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Component, ViewChild } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DataService } from \"../../data.service\";\r\nimport { UsersColumn } from \"../../constants/columnMetadata\";\r\nimport { filter } from \"rxjs/operators\";\r\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\r\nimport { UsernameValidator } from \"../../utils/username.validator\";\r\n\r\n@Component({\r\n  templateUrl: \"users.component.html\",\r\n})\r\nexport class UsersComponent {\r\n  rowSelection: string;\r\n  constructor(\r\n    public dataservice: DataService,\r\n    public router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.columnDefs = [...UsersColumn];\r\n    this.setForm();\r\n    this.rowSelection = \"single\";\r\n  }\r\n  @ViewChild(\"commentModal\") public commentModal: ModalDirective;\r\n  @ViewChild(\"detailsModal\") public detailsModal: ModalDirective;\r\n\r\n  loading = true;\r\n  btnLoading = false;\r\n  disableNextButton = false;\r\n  disablePrevButton = true;\r\n  meta;\r\n  pageSize = 20;\r\n  from = 1;\r\n  to = 20;\r\n  count = 1;\r\n  columnDefs = [];\r\n  commentForm;\r\n  rowData: any = [];\r\n\r\n  Villages: any = [];\r\n  LGA: any = [];\r\n  Areas: any = [];\r\n  States: any = [];\r\n\r\n  selectedYear: any = new Date().getFullYear();\r\n  years: any = [];\r\n  private gridApi;\r\n  private gridColumnApi;\r\n  filter: any = {};\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    console.log(this.router);\r\n    this.getRetailers();\r\n    this.getAreas();\r\n    this.getLGAs();\r\n    this.getStates();\r\n    this.getVillages();\r\n  }\r\n  setForm() {\r\n    this.commentForm = this.fb.group({\r\n      UserType: [\"\", Validators.required],\r\n      username: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(3),\r\n          UsernameValidator.cannotContainSpace,\r\n        ],\r\n      ],\r\n      email: [\"nodata@email.com\"],\r\n      password: [\"\", Validators.required],\r\n      Name: [\"\", Validators.required],\r\n      Gender: [\"\", Validators.required],\r\n      Age: [\"\", Validators.required],\r\n      ContactNumber: [\"\", Validators.required],\r\n      lga: [\"\", Validators.required],\r\n      village: [\"\", Validators.required],\r\n      state: [\"\"],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.commentForm.controls;\r\n  }\r\n  getStates() {\r\n    this.dataservice.getStates().valueChanges.subscribe((result: any) => {\r\n      console.log(\"getStates\", result.data.states.data);\r\n      this.States = result.data.states.data;\r\n    });\r\n  }\r\n  getLGAs(id?) {\r\n    this.dataservice.getLGAs(id).valueChanges.subscribe((result: any) => {\r\n      console.log(\"getLGAs\", result.data.lgas.data);\r\n      this.LGA = result.data.lgas.data;\r\n    });\r\n  }\r\n  getAreas(id?) {\r\n    this.dataservice.getAreas(id).valueChanges.subscribe((result: any) => {\r\n      console.log(\"getAreas\", result.data.areas.data);\r\n      this.Areas = result.data.areas.data;\r\n    });\r\n  }\r\n  getVillages(id?) {\r\n    this.dataservice.getVillages(id).valueChanges.subscribe((result: any) => {\r\n      console.log(\"getVillages\", result.data.villages.data);\r\n      this.Villages = result.data.villages.data;\r\n    });\r\n  }\r\n  getRetailers() {\r\n    this.dataservice\r\n      .getUsers(1, this.pageSize)\r\n      .valueChanges.subscribe((result: any) => {\r\n        this.rowData = result.data.usersPermissionsUsers.data;\r\n        this.meta = result.data.usersPermissionsUsers.meta;\r\n        if (this.meta?.pagination?.pageCount <= 1) {\r\n          this.disablePrevButton = true;\r\n          this.disableNextButton = true;\r\n        }\r\n        if (this.meta?.pagination?.total < this.pageSize) {\r\n          this.to = this.meta?.pagination?.total;\r\n        }\r\n      });\r\n  }\r\n  loadNext() {\r\n    this.count++;\r\n    this.disablePrevButton = false;\r\n    this.from = this.from + this.pageSize;\r\n    this.to =\r\n      this.to + this.pageSize > this.meta?.pagination?.total\r\n        ? this.meta?.pagination?.total\r\n        : this.to + this.pageSize;\r\n    if (this.count === this.meta.pagination.pageCount) {\r\n      this.disableNextButton = true;\r\n    }\r\n    this.dataservice\r\n      .getUsers(this.count, this.pageSize)\r\n      .valueChanges.subscribe((result: any) => {\r\n        this.meta = result.data.usersPermissionsUsers.meta;\r\n        this.rowData = result.data.usersPermissionsUsers.data;\r\n      });\r\n  }\r\n  loadPrev() {\r\n    this.count--;\r\n    if (this.count < this.meta.pagination.pageCount) {\r\n      this.disableNextButton = false;\r\n    }\r\n    if (this.count === 1) {\r\n      this.disablePrevButton = true;\r\n    }\r\n    this.from = this.from - this.pageSize;\r\n    this.to = this.to - this.rowData.length;\r\n    this.dataservice\r\n      .getUsers(this.count, this.pageSize)\r\n      .valueChanges.subscribe((result: any) => {\r\n        this.meta = result.data.usersPermissionsUsers.meta;\r\n        this.rowData = result.data.usersPermissionsUsers.data;\r\n      });\r\n  }\r\n  filterLGA(event) {\r\n    this.getLGAs(event.target.value);\r\n  }\r\n  filterVillage(event) {\r\n    this.getVillages(event.target.value);\r\n  }\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n  onRowClicked(event: any) {\r\n    console.log(\"row\", event.data);\r\n    // this.router.navigate(\r\n    //   [\"/cropprices/kp_customer_details\", event.data.id, this.router.url],\r\n    //   {\r\n    //     state: { data: event.data },\r\n    //   }\r\n    // );\r\n  }\r\n  onSelectionChanged(event: any) {\r\n    var selectedRows = this.gridApi.getSelectedRows();\r\n    console.log(selectedRows, event);\r\n    this.router.navigate([\"/users/user_details\", selectedRows[0].id], {\r\n      state: { data: selectedRows },\r\n    });\r\n  }\r\n  openModal(data: any) {\r\n    this.detailsModal.show();\r\n  }\r\n  formSubmit() {\r\n    this.btnLoading = true;\r\n    console.log(this.commentForm.value);\r\n    let resp = {};\r\n    this.dataservice.createRetailer(this.commentForm.value).subscribe(\r\n      (result: any) => {\r\n        resp = result;\r\n        console.log(\"response\", result);\r\n        if (result) {\r\n          this.toastr.success(\"User added successfully!\");\r\n          this.btnLoading = false;\r\n          this.commentModal.hide();\r\n          this.setForm();\r\n          this.getRetailers();\r\n        } else {\r\n          this.toastr.error(\"Failed. Please check the fields!\");\r\n          this.btnLoading = false;\r\n        }\r\n      },\r\n      (error) => {\r\n        this.btnLoading = false;\r\n      }\r\n    );\r\n  }\r\n}\r\n"]}