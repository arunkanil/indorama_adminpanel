{"version":3,"sources":["webpack:///src/app/views/users/users.module.ts","webpack:///src/app/views/users/users-routing.module.ts","webpack:///src/app/views/users/user-detail.component.ts","webpack:///src/app/views/users/user-detail.component.html","webpack:///src/app/views/users/users.component.html","webpack:///src/app/views/users/users.component.ts"],"names":["UsersModule","imports","withComponents","forRoot","declarations","routes","path","children","redirectTo","component","data","title","RetailersRoutingModule","forChild","exports","UserDetailComponent","dataservice","activatedRouter","router","fb","toastr","baseURL","apiUrl","loading","details","btnLoading","dateConverter","users","Villages","LGA","Areas","Retailers","Farmers","States","Crops","file","dispArea","agentForm","group","ContactNumber","required","blocked","Name","Farmer","UserType","Bio","password","state","village","lga","Latitude","Longitude","resultForm","id","itemName","price","unit","areaForm","agronomist_lgas","productForm","Image","getLists","getAreas","getCrops","getLGAs","getStates","getVillages","getFarmers","getRetailers","params","subscribe","getTest","url","getsingleRetailer","valueChanges","result","console","log","usersPermissionsUsers","attributes","agronomists","crops","states","lgas","areas","getRetailerCategories","retailerCategories","getUsers","undefined","villages","date","Date","flag","resultModal","show","soil_test_sample","ItemName","Price","Unit","deleteObj","deleteModal","resp","value","UpdateRetailer","updateUsersPermissionsUser","success","myModal","hide","error","UpdateRetailerProducts","retailer_categories","updateRetailerProduct","event","i","target","files","length","push","upload","response","status","UpdateRetailerPic","body","addProductModal","areaModal","addRetailerProducts","createRetailerProduct","deleteUser","deleteUsersPermissionsUser","navigate","template","UsersComponent","disableNextButton","disablePrevButton","pageSize","from","to","count","columnDefs","rowData","selectedYear","getFullYear","years","filter","setForm","rowSelection","commentForm","username","minLength","cannotContainSpace","email","Gender","Age","controls","meta","pagination","pageCount","total","gridApi","api","gridColumnApi","columnApi","sizeColumnsToFit","selectedRows","getSelectedRows","detailsModal","createRetailer","commentModal"],"mappings":"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","file":"views-users-users-module-es5.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { UsersComponent } from './users.component';\n\n// Dropdowns Component\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\n\n// Buttons Routing\nimport { RetailersRoutingModule } from './users-routing.module';\n\n// Angular\nimport { AgGridModule } from 'ag-grid-angular';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { UserDetailComponent } from './user-detail.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TabsModule,\n    ReactiveFormsModule,\n    AgGridModule.withComponents([]),\n    RetailersRoutingModule,\n    BsDropdownModule.forRoot(),\n    ModalModule.forRoot(),\n    FormsModule\n  ],\n  declarations: [\n    UsersComponent,\n    UserDetailComponent\n  ]\n})\nexport class UsersModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UsersComponent } from './users.component';\nimport { AuthGuard } from '../login/auth.guard';\nimport { UserDetailComponent } from './user-detail.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    \n    children: [\n      {\n        path: '',\n        redirectTo: 'retailers'\n      },\n      {\n        path: 'all',\n        // canActivate: [AuthGuard],\n        component: UsersComponent,\n        data: {\n          title: 'Users'\n        }\n      },\n      {\n        path: 'user_details/:id',\n        // canActivate: [AuthGuard],\n        component: UserDetailComponent,\n        data: {\n          title: 'Retailer Details'\n        }\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RetailersRoutingModule {}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { DataService } from \"../../data.service\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { dateConverter } from \"../../constants/columnMetadata\";\nimport { environment } from \"../../../environments/environment\";\n\n@Component({\n  templateUrl: \"user-detail.component.html\",\n})\nexport class UserDetailComponent implements OnInit {\n  constructor(\n    public dataservice: DataService,\n    private activatedRouter: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) {}\n  @ViewChild(\"myModal\") public myModal: ModalDirective;\n  @ViewChild(\"areaModal\") public areaModal: ModalDirective;\n  @ViewChild(\"resultModal\") public resultModal: ModalDirective;\n  @ViewChild(\"deleteModal\") public deleteModal: ModalDirective;\n  @ViewChild(\"addProductModal\") public addProductModal: ModalDirective;\n\n  id: any;\n  baseURL = environment.apiUrl;\n  loading = true;\n  details: any = [];\n  btnLoading = false;\n  dateConverter = dateConverter;\n  users: any = [];\n  Villages: any = [];\n  LGA: any = [];\n  Areas: any = [];\n  Retailers: any = [];\n  Farmers: any = [];\n  States: any = [];\n  Crops: any = [];\n  file: any = null;\n  dispArea = false;\n  agronomists;\n  flag;\n  deleteObj;\n  agentForm = this.fb.group({\n    ContactNumber: [\"\", Validators.required],\n    // username: [\"\", Validators.required],\n    blocked: [\"\"],\n    Name: [\"\", Validators.required],\n    // email: [\"\", Validators.required],\n    Farmer: [\"\", Validators.required],\n    UserType: [\"\", Validators.required],\n    Bio: [\"\"],\n    password: [\"\"],\n    state: [\"\", Validators.required],\n    village: [\"\", Validators.required],\n    lga: [\"\", Validators.required],\n    Latitude: [\"\"],\n    Longitude: [\"\"],\n  });\n  resultForm = this.fb.group({\n    id: [\"\"],\n    itemName: [\"\", Validators.required],\n    price: [\"\", Validators.required],\n    unit: [\"\", Validators.required],\n  });\n  areaForm = this.fb.group({\n    state: [\"\"],\n    agronomist_lgas: [\"\", Validators.required],\n  });\n  productForm = this.fb.group({\n    Image: [\"\", Validators.required],\n    itemName: [\"\", Validators.required],\n    price: [\"\", Validators.required],\n    unit: [\"\", Validators.required],\n  });\n  ngOnInit(): void {\n    this.getLists();\n    this.getAreas();\n    this.getCrops();\n    this.getLGAs();\n    this.getStates();\n    this.getVillages();\n    this.getFarmers();\n    this.getRetailers();\n    this.activatedRouter.params.subscribe((params) => {\n      this.id = params[\"id\"];\n    });\n    this.getTest();\n  }\n  imgUrl(url) {\n    return `${environment.apiUrl}` + url;\n  }\n  getTest() {\n    this.dataservice\n      .getsingleRetailer(this.id)\n      .valueChanges.subscribe((result: any) => {\n        console.log(\n          \"getsingleRetailer\",\n          result.data.usersPermissionsUsers.data[0]\n        );\n        this.details = result.data.usersPermissionsUsers.data[0];\n        this.agentForm = this.fb.group({\n          ContactNumber: [\n            this.details.attributes?.ContactNumber,\n            Validators.required,\n          ],\n          Name: [this.details.attributes?.Name, Validators.required],\n          // email: [this.details.attributes?.email, Validators.required],\n          Bio: [this.details.attributes?.Bio],\n          Latitude: [this.details.attributes?.Latitude],\n          Longitude: [this.details.attributes?.Longitude],\n          state: [\n            this.details?.attributes?.lga?.data?.attributes?.state?.data?.id,\n            Validators.required,\n          ],\n          lga: [this.details?.attributes?.lga?.data?.id, Validators.required],\n          village: [\n            this.details?.attributes?.village?.data?.id,\n            Validators.required,\n          ],\n          password: [\"\"],\n          blocked: [this.details?.attributes?.blocked],\n          UserType: [this.details?.attributes?.UserType, Validators.required],\n        });\n        this.loading = false;\n        this.dispArea =\n          this.details?.attributes?.UserType == \"Agronomist\" ? true : false;\n        if (this.dispArea == true) {\n          this.agronomists = this.details?.attributes?.agronomist_lgas?.data;\n          // this.dataservice\n          //   .getAgronomist(this.id)\n          //   .valueChanges.subscribe((result: any) => {\n          //     console.log(\"getAgronomist\", result?.data?.agronomists?.data);\n          //     this.agronomists = result?.data?.agronomists?.data[0];\n          //   });\n        }\n      });\n  }\n  getCrops() {\n    this.dataservice.getCrops().valueChanges.subscribe((result: any) => {\n      console.log(\"getCrops\", result.data.crops.data);\n      this.Crops = result.data.crops.data;\n    });\n  }\n  getStates() {\n    this.dataservice.getStates().valueChanges.subscribe((result: any) => {\n      console.log(\"getStates\", result.data.states.data);\n      this.States = result.data.states.data;\n    });\n  }\n  getLGAs(id?) {\n    this.dataservice.getLGAs(id).valueChanges.subscribe((result: any) => {\n      console.log(\"getLGAs\", result.data.lgas.data);\n      this.LGA = result.data.lgas.data;\n    });\n  }\n  getAreas(id?) {\n    this.dataservice.getAreas(id).valueChanges.subscribe((result: any) => {\n      console.log(\"getAreas\", result.data.areas.data);\n      this.Areas = result.data.areas.data;\n    });\n  }\n  getRetailers() {\n    this.dataservice\n      .getRetailerCategories()\n      .valueChanges.subscribe((result: any) => {\n        console.log(\"getRetailers\", result.data.retailerCategories.data);\n        this.Retailers = result.data.retailerCategories.data;\n      });\n  }\n  getFarmers() {\n    this.dataservice\n      .getUsers(undefined, undefined, \"Farmer\")\n      .valueChanges.subscribe((result: any) => {\n        console.log(\"getFarmers\", result.data.usersPermissionsUsers.data);\n        this.Farmers = result.data.usersPermissionsUsers.data;\n      });\n  }\n  getVillages(id?) {\n    this.dataservice.getVillages(id).valueChanges.subscribe((result: any) => {\n      console.log(\"getVillages\", result.data.villages.data);\n      this.Villages = result.data.villages.data;\n    });\n  }\n  dateConvertor(date) {\n    return new Date(date);\n  }\n  getLists() {\n    this.loading = true;\n  }\n  openModal(data: any, flag) {\n    this.resultModal.show();\n    console.log(data, flag);\n    this.flag = flag;\n    this.resultForm = this.fb.group({\n      id: [data?.id],\n      soil_test_sample: [data?.id],\n      itemName: [data?.attributes?.ItemName, Validators.required],\n      price: [data?.attributes?.Price, Validators.required],\n      unit: [data?.attributes?.Unit, Validators.required],\n    });\n  }\n  openDeleteModal(data) {\n    this.deleteObj = data;\n    this.deleteModal.show();\n  }\n  FormSubmit() {\n    let resp = {};\n    this.btnLoading = true;\n    console.log(this.agentForm.value);\n    this.dataservice.UpdateRetailer(this.agentForm.value, this.id).subscribe(\n      (result: any) => {\n        resp = result.data;\n        console.log(\"response\", result);\n        if (result.data.updateUsersPermissionsUser) {\n          this.toastr.success(\"User updated successfully!\");\n          this.btnLoading = false;\n          this.myModal.hide();\n          this.getTest();\n        } else {\n          this.toastr.error(\"Failed. Please check the fields!\");\n          this.btnLoading = false;\n        }\n      },\n      (error) => {\n        this.btnLoading = false;\n      }\n    );\n  }\n  ResultSubmit() {\n    console.log(\"edit\", this.resultForm.value);\n    let resp = {};\n    console.log(this.resultForm.value);\n    this.dataservice\n      .UpdateRetailerProducts(\n        this.resultForm.value,\n        this.details?.attributes?.retailer_categories?.data[0]?.id,\n        this.id\n      )\n      .subscribe((result: any) => {\n        resp = result.data;\n        console.log(\"response\", result);\n        if (result.data.updateRetailerProduct) {\n          this.toastr.success(\"Product updated successfully!\");\n          this.resultModal.hide();\n          this.getTest();\n        } else {\n          this.toastr.error(\"Failed. Please check the fields!\");\n        }\n      });\n  }\n  onChange(event: any) {\n    this.file = [];\n    for (var i = 0; i < event.target.files.length; i++) {\n      this.file.push(event.target.files[i]);\n    }\n    console.log(this.file);\n  }\n  filterLGA(event) {\n    this.getLGAs(event.target.value);\n  }\n  filterArea(event) {\n    this.getAreas(event.target.value);\n  }\n  filterVillage(event) {\n    this.getVillages(event.target.value);\n  }\n  uploadProfPic() {\n    let resp = {};\n    this.dataservice.upload(this.file).subscribe((response: any) => {\n      if (response.status == 200) {\n        console.log(response);\n        this.dataservice\n          .UpdateRetailerPic(this.id, response.body[0]?.id)\n          .subscribe((result: any) => {\n            resp = result.data;\n            console.log(\"response\", result);\n            if (result.data.updateUsersPermissionsUser) {\n              this.toastr.success(\"Success!\");\n              this.file = null;\n              this.getTest();\n              this.addProductModal.hide();\n            } else {\n              this.toastr.error(\"Failed!\");\n            }\n          });\n      } else {\n        this.toastr.error(\"Image failed to upload!\");\n      }\n    });\n  }\n  AreaSubmit() {\n    let resp = {};\n    console.log(this.areaForm.value);\n    this.dataservice\n      .UpdateRetailer(this.areaForm.value, this.id)\n      .subscribe((result: any) => {\n        resp = result.data;\n        console.log(\"response\", result);\n        if (result.data.updateUsersPermissionsUser) {\n          this.toastr.success(\"User updated successfully!\");\n          this.areaModal.hide();\n          this.getTest();\n        } else {\n          this.toastr.error(\"Failed. Please check the fields!\");\n        }\n      });\n  }\n  ProductSubmit() {\n    let resp = {};\n    this.dataservice.upload(this.file).subscribe((response: any) => {\n      if (response.status == 200) {\n        console.log(response);\n        this.dataservice\n          .addRetailerProducts(\n            this.productForm.value,\n            this.details?.attributes?.retailer_categories?.data[0]?.id,\n            this.id,\n            response.body[0]?.id\n          )\n          .subscribe((result: any) => {\n            resp = result.data;\n            console.log(\"response\", result);\n            if (result.data.createRetailerProduct) {\n              this.toastr.success(\"Success!\");\n              this.file = null;\n              this.getTest();\n              this.addProductModal.hide();\n            } else {\n              this.toastr.error(\"Failed!\");\n            }\n          });\n      } else {\n        this.toastr.error(\"Image failed to upload!\");\n      }\n    });\n  }\n  deleteProduct() {\n    if (this.details?.attributes?.UserType !== \"Agronomist\") {\n      this.dataservice.deleteUser(this.id).subscribe((result: any) => {\n        console.log(\"response\", result);\n        if (result.data.deleteUsersPermissionsUser) {\n          this.toastr.success(\"Success!\");\n          this.deleteModal.hide();\n          this.router.navigate([\"/users/all\"]);\n        } else {\n          this.toastr.error(\"Failed!\");\n        }\n      });\n    } else {\n      this.toastr.error(\"Can't delete Agronomist. Try setting as blocked.\");\n    }\n  }\n}\n","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div\\n    bsModal\\n    #deleteModal=\\\"bs-modal\\\"\\n    class=\\\"modal fade\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"dialog\\\"\\n    aria-labelledby=\\\"myModalLabel\\\"\\n    aria-hidden=\\\"true\\\"\\n  >\\n    <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-body text-center\\\">\\n          Do you want to delete this record?\\n        </div>\\n        <div class=\\\"modal-footer justify-content-around\\\">\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"deleteModal.hide()\\\"\\n          >\\n            No! Cancel.\\n          </button>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-primary\\\"\\n            (click)=\\\"deleteProduct()\\\"\\n          >\\n            Yes! Delete.\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div\\n    bsModal\\n    #areaModal=\\\"bs-modal\\\"\\n    class=\\\"modal fade\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"dialog\\\"\\n    aria-labelledby=\\\"myModalLabel\\\"\\n    aria-hidden=\\\"true\\\"\\n  >\\n    <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">Edit assigned areas</h4>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"close\\\"\\n            (click)=\\\"myModal.hide()\\\"\\n            aria-label=\\\"Close\\\"\\n          >\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <form [formGroup]=\\\"areaForm\\\" (ngSubmit)=\\\"AreaSubmit()\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"state\\\">State</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                id=\\\"state\\\"\\n                (change)=\\\"filterLGA($event)\\\"\\n                ngModel\\n                name=\\\"state\\\"\\n                formControlName=\\\"state\\\"\\n              >\\n                <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\n                  {{ item.attributes.Name }}\\n                </option>\\n              </select>\\n            </div>\\n            <!-- <div class=\\\"form-group\\\">\\n              <label for=\\\"lga\\\">LGA</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                id=\\\"lga\\\"\\n                (change)=\\\"filterArea($event)\\\"\\n                ngModel\\n                name=\\\"lga\\\"\\n                formControlName=\\\"lga\\\"\\n              >\\n                <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\n                  {{ item.attributes.Name }}\\n                </option>\\n              </select>\\n            </div> -->\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"agronomist_lgas\\\">LGAs</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                id=\\\"agronomist_lgas\\\"\\n                multiple\\n                required\\n                ngModel\\n                name=\\\"agronomist_lgas\\\"\\n                formControlName=\\\"agronomist_lgas\\\"\\n              >\\n                <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\n                  {{ item.attributes.Name }}\\n                </option>\\n              </select>\\n            </div>\\n            <button\\n              type=\\\"button\\\"\\n              class=\\\"btn btn-secondary\\\"\\n              (click)=\\\"areaModal.hide()\\\"\\n            >\\n              Close\\n            </button>\\n            <button\\n              type=\\\"submit\\\"\\n              class=\\\"btn btn-primary ml-2\\\"\\n              [disabled]=\\\"btnLoading || !areaForm.valid\\\"\\n            >\\n              <span\\n                *ngIf=\\\"btnLoading\\\"\\n                class=\\\"spinner-border spinner-border-sm\\\"\\n                role=\\\"status\\\"\\n                aria-hidden=\\\"true\\\"\\n              ></span>\\n              Save changes\\n            </button>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"card\\\">\\n    <div\\n      class=\\\"card-header\\\"\\n      style=\\\"display: flex; justify-content: space-between\\\"\\n    >\\n      <h2>User Details</h2>\\n      <span>\\n        <div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-primary\\\"\\n            data-toggle=\\\"modal\\\"\\n            (click)=\\\"myModal.show()\\\"\\n          >\\n            Edit\\n          </button>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-danger\\\"\\n            data-toggle=\\\"modal\\\"\\n            (click)=\\\"deleteModal.show()\\\"\\n          >\\n            Delete\\n          </button>\\n        </div>\\n      </span>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n          <div class=\\\"row\\\">\\n            <div style=\\\"display: flex; justify-content: space-between\\\">\\n              <h4>Basic details</h4>\\n            </div>\\n            <table class=\\\"table table-striped\\\">\\n              <tbody>\\n                <tr>\\n                  <td>ID</td>\\n                  <td>{{ details?.id }}</td>\\n                </tr>\\n                <tr>\\n                  <td>Username</td>\\n                  <td>{{ details?.attributes?.username }}</td>\\n                </tr>\\n                <tr>\\n                  <td>Status</td>\\n                  <td>\\n                    <span\\n                      *ngIf=\\\"details?.attributes?.blocked\\\"\\n                      class=\\\"text-danger\\\"\\n                      >Blocked</span\\n                    ><span *ngIf=\\\"!details?.attributes?.blocked\\\" class=\\\"text-success\\\">Active</span>\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Profile pic</td>\\n                  <td>\\n                    <a\\n                      href=\\\"{{ baseURL }}{{\\n                        details?.attributes?.prof_pic?.data?.attributes?.url\\n                      }}\\\"\\n                      target=\\\"_blank\\\"\\n                      ><img\\n                        class=\\\"card-img-top\\\"\\n                        style=\\\"width: 150px; height: 150px\\\"\\n                        src=\\\"{{ baseURL }}{{\\n                          details?.attributes?.prof_pic?.data?.attributes?.url\\n                        }}\\\"\\n                        alt=\\\"No image found\\\"\\n                    /></a>\\n                    <div style=\\\"display: flex\\\">\\n                      <input\\n                        type=\\\"file\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"prof_pic\\\"\\n                        style=\\\"width: 250px\\\"\\n                        accept=\\\".jpg,.jpeg,.JPEG,.png\\\"\\n                        name=\\\"prof_pic\\\"\\n                        (change)=\\\"onChange($event)\\\"\\n                        placeholder=\\\"Choose image\\\"\\n                      />\\n                      <button\\n                        type=\\\"button\\\"\\n                        class=\\\"btn btn-outline-primary\\\"\\n                        data-toggle=\\\"modal\\\"\\n                        (click)=\\\"uploadProfPic()\\\"\\n                      >\\n                        Upload\\n                      </button>\\n                    </div>\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Name</td>\\n                  <td>\\n                    {{ details?.attributes?.Name }}\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Contact number</td>\\n                  <td>{{ details?.attributes?.ContactNumber }}</td>\\n                </tr>\\n                <tr>\\n                  <td>User type</td>\\n                  <td>{{ details?.attributes?.UserType }}</td>\\n                </tr>\\n                <!-- <tr>\\n                  <td>Email</td>\\n                  <td>\\n                    {{ details?.attributes?.email }}\\n                  </td>\\n                </tr> -->\\n                <tr>\\n                  <td>Village</td>\\n                  <td>\\n                    {{ details?.attributes?.village?.data?.attributes?.Name }}\\n                  </td>\\n                </tr>\\n\\n                <tr>\\n                  <td>LGA</td>\\n                  <td>{{ details?.attributes?.lga?.data?.attributes.Name }}</td>\\n                </tr>\\n                <tr>\\n                  <td>State</td>\\n                  <td>\\n                    {{\\n                      details?.attributes?.lga?.data?.attributes?.state?.data\\n                        ?.attributes?.Name\\n                    }}\\n                  </td>\\n                </tr>\\n                <!-- <tr>\\n                  <td>Retailer Category</td>\\n                  <td>\\n                    {{\\n                    details?.attributes?.retailer_categories?.data[0]?.attributes?.CategoryName\\n                    }}\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Bio</td>\\n                  <td style=\\\"width: 60%\\\">{{ details?.attributes?.Bio }}</td>\\n                </tr> -->\\n                <tr>\\n                  <td>Created at</td>\\n                  <td>{{ dateConvertor(details?.attributes?.createdAt) }}</td>\\n                </tr>\\n                <tr>\\n                  <td>Last updated</td>\\n                  <td>{{ dateConvertor(details?.attributes?.updatedAt) }}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"dispArea\\\" class=\\\"col\\\">\\n          <div style=\\\"display: flex; justify-content: space-between\\\">\\n            <h4>LGAs assigned</h4>\\n            <button\\n              type=\\\"button\\\"\\n              class=\\\"btn btn-primary\\\"\\n              data-toggle=\\\"modal\\\"\\n              (click)=\\\"areaModal.show()\\\"\\n            >\\n              Edit LGAs\\n            </button>\\n          </div>\\n          <ul>\\n            <li *ngFor=\\\"let item of agronomists\\\">\\n              {{ item?.attributes?.Name }}\\n            </li>\\n          </ul>\\n        </div>\\n      </div>\\n      <div\\n        bsModal\\n        #myModal=\\\"bs-modal\\\"\\n        class=\\\"modal fade\\\"\\n        tabindex=\\\"-1\\\"\\n        role=\\\"dialog\\\"\\n        aria-labelledby=\\\"myModalLabel\\\"\\n        aria-hidden=\\\"true\\\"\\n      >\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title\\\">Edit details</h4>\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"close\\\"\\n                (click)=\\\"myModal.hide()\\\"\\n                aria-label=\\\"Close\\\"\\n              >\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              <form [formGroup]=\\\"agentForm\\\" (ngSubmit)=\\\"FormSubmit()\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"Name\\\"\\n                        >Name<span class=\\\"danger\\\">*</span></label\\n                      >\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"Name\\\"\\n                        name=\\\"Name\\\"\\n                        formControlName=\\\"Name\\\"\\n                        placeholder=\\\"Enter Name\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"market\\\"\\n                        >Contact Number<span class=\\\"danger\\\">*</span></label\\n                      >\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"ContactNumber\\\"\\n                        name=\\\"ContactNumber\\\"\\n                        formControlName=\\\"ContactNumber\\\"\\n                        placeholder=\\\"Enter contact number\\\"\\n                      />\\n                    </div>\\n                    <!-- <div class=\\\"form-group\\\">\\n                      <label for=\\\"email\\\">email</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"email\\\"\\n                        name=\\\"email\\\"\\n                        formControlName=\\\"email\\\"\\n                        placeholder=\\\"Enter email\\\"\\n                      />\\n                    </div> -->\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"UserType\\\"\\n                        >User type<span class=\\\"danger\\\">*</span></label\\n                      >\\n                      <select\\n                        class=\\\"form-control\\\"\\n                        id=\\\"UserType\\\"\\n                        required\\n                        ngModel\\n                        name=\\\"UserType\\\"\\n                        formControlName=\\\"UserType\\\"\\n                      >\\n                        <option value=\\\"\\\" disabled selected hidden>\\n                          Choose...\\n                        </option>\\n                        <option value=\\\"Farmer\\\">Farmer</option>\\n                        <option value=\\\"Retailer\\\">Retailer</option>\\n                        <option value=\\\"Agronomist\\\">Agronomist</option>\\n                        <option value=\\\"Admin\\\">Admin</option>\\n                      </select>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"Bio\\\">Bio</label>\\n                      <textarea\\n                        class=\\\"form-control\\\"\\n                        id=\\\"Bio\\\"\\n                        name=\\\"Bio\\\"\\n                        formControlName=\\\"Bio\\\"\\n                        placeholder=\\\"Enter Bio\\\"\\n                      ></textarea>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"password\\\">Password</label>\\n                      <input\\n                        type=\\\"password\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"password\\\"\\n                        name=\\\"password\\\"\\n                        formControlName=\\\"password\\\"\\n                        placeholder=\\\"Enter password\\\"\\n                      />\\n                    </div>\\n                    <!-- <div class=\\\"form-check\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" ngModel name=\\\"blocked\\\"\\n                        formControlName=\\\"blocked\\\" id=\\\"blocked\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"blocked\\\">\\n                        Blocked\\n                      </label>\\n                    </div> -->\\n                    <!-- <div class=\\\"form-group\\\">\\n                      <label for=\\\"blocked\\\">Active status</label>\\n                      <input class=\\\"form-control\\\" type=\\\"checkbox\\\" id=\\\"blocked\\\" required ngModel name=\\\"blocked\\\"\\n                        formControlName=\\\"blocked\\\" />\\n                    </div> -->\\n                  </div>\\n                  <div class=\\\"col\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"state\\\"\\n                        >State<span class=\\\"danger\\\">*</span></label\\n                      >\\n                      <select\\n                        class=\\\"form-control\\\"\\n                        id=\\\"state\\\"\\n                        (change)=\\\"filterLGA($event)\\\"\\n                        required\\n                        ngModel\\n                        name=\\\"state\\\"\\n                        formControlName=\\\"state\\\"\\n                      >\\n                        <option value=\\\"\\\" disabled selected hidden>\\n                          Choose...\\n                        </option>\\n                        <option\\n                          *ngFor=\\\"let item of States\\\"\\n                          value=\\\"{{ item.id }}\\\"\\n                        >\\n                          {{ item.attributes.Name }}\\n                        </option>\\n                      </select>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"lga\\\">LGA<span class=\\\"danger\\\">*</span></label>\\n                      <select\\n                        class=\\\"form-control\\\"\\n                        id=\\\"lga\\\"\\n                        (change)=\\\"filterVillage($event)\\\"\\n                        required\\n                        ngModel\\n                        name=\\\"lga\\\"\\n                        formControlName=\\\"lga\\\"\\n                      >\\n                        <option value=\\\"\\\" disabled selected hidden>\\n                          Choose...\\n                        </option>\\n                        <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\n                          {{ item.attributes.Name }}\\n                        </option>\\n                      </select>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"village\\\"\\n                        >Village<span class=\\\"danger\\\">*</span></label\\n                      >\\n                      <select\\n                        class=\\\"form-control\\\"\\n                        id=\\\"village\\\"\\n                        required\\n                        ngModel\\n                        name=\\\"village\\\"\\n                        formControlName=\\\"village\\\"\\n                      >\\n                        <option value=\\\"\\\" disabled selected hidden>\\n                          Choose...\\n                        </option>\\n                        <option\\n                          *ngFor=\\\"let item of Villages\\\"\\n                          value=\\\"{{ item.id }}\\\"\\n                        >\\n                          {{ item.attributes.Name }}\\n                        </option>\\n                      </select>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"Latitude\\\">Latitude</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"Latitude\\\"\\n                        name=\\\"Latitude\\\"\\n                        formControlName=\\\"Latitude\\\"\\n                        placeholder=\\\"Enter Latitude\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"Longitude\\\">Longitude</label>\\n                      <input\\n                        class=\\\"form-control\\\"\\n                        id=\\\"Longitude\\\"\\n                        ngModel\\n                        name=\\\"Longitude\\\"\\n                        formControlName=\\\"Longitude\\\"\\n                        placeholder=\\\"Enter Longitude\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"blocked\\\"\\n                        >Status<span class=\\\"danger\\\">*</span></label\\n                      >\\n                      <select\\n                        class=\\\"form-control\\\"\\n                        id=\\\"blocked\\\"\\n                        ngModel\\n                        name=\\\"blocked\\\"\\n                        formControlName=\\\"blocked\\\"\\n                      >\\n                        <option value=\\\"\\\" disabled selected hidden>\\n                          Choose...\\n                        </option>\\n                        <option value=\\\"true\\\">Blocked</option>\\n                        <option value=\\\"false\\\">Active</option>\\n                      </select>\\n                    </div>\\n                    <button\\n                      type=\\\"button\\\"\\n                      class=\\\"btn btn-secondary\\\"\\n                      (click)=\\\"myModal.hide()\\\"\\n                    >\\n                      Close\\n                    </button>\\n                    <button\\n                      type=\\\"submit\\\"\\n                      class=\\\"btn btn-primary ml-2\\\"\\n                      [disabled]=\\\"btnLoading || !agentForm.valid\\\"\\n                    >\\n                      <span\\n                        *ngIf=\\\"btnLoading\\\"\\n                        class=\\\"spinner-border spinner-border-sm\\\"\\n                        role=\\\"status\\\"\\n                        aria-hidden=\\\"true\\\"\\n                      ></span>\\n                      Save changes\\n                    </button>\\n                  </div>\\n                </div>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div\\n        bsModal\\n        #resultModal=\\\"bs-modal\\\"\\n        class=\\\"modal fade\\\"\\n        tabindex=\\\"-1\\\"\\n        role=\\\"dialog\\\"\\n        aria-labelledby=\\\"resultModalLabel\\\"\\n        aria-hidden=\\\"true\\\"\\n      >\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title\\\">Edit product</h4>\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"close\\\"\\n                (click)=\\\"resultModal.hide()\\\"\\n                aria-label=\\\"Close\\\"\\n              >\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              <form [formGroup]=\\\"resultForm\\\" (ngSubmit)=\\\"ResultSubmit()\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"id\\\">ID</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"soil_test_sample\\\"\\n                    disabled=\\\"true\\\"\\n                    name=\\\"id\\\"\\n                    formControlName=\\\"id\\\"\\n                  />\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"itemName\\\">Item name</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"itemName\\\"\\n                    name=\\\"itemName\\\"\\n                    formControlName=\\\"itemName\\\"\\n                  />\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"price\\\">Price</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"price\\\"\\n                    name=\\\"price\\\"\\n                    formControlName=\\\"price\\\"\\n                    placeholder=\\\"Enter value\\\"\\n                  />\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"unit\\\">Unit</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"unit\\\"\\n                    name=\\\"unit\\\"\\n                    formControlName=\\\"unit\\\"\\n                    placeholder=\\\"Enter value\\\"\\n                  />\\n                </div>\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-secondary\\\"\\n                  (click)=\\\"resultModal.hide()\\\"\\n                >\\n                  Close\\n                </button>\\n                <button\\n                  type=\\\"submit\\\"\\n                  class=\\\"btn btn-primary ml-2\\\"\\n                  [disabled]=\\\"btnLoading\\\"\\n                >\\n                  <span\\n                    *ngIf=\\\"btnLoading\\\"\\n                    class=\\\"spinner-border spinner-border-sm\\\"\\n                    role=\\\"status\\\"\\n                    aria-hidden=\\\"true\\\"\\n                  ></span>\\n                  Save changes\\n                </button>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div\\n        bsModal\\n        #addProductModal=\\\"bs-modal\\\"\\n        class=\\\"modal fade\\\"\\n        tabindex=\\\"-1\\\"\\n        role=\\\"dialog\\\"\\n        aria-labelledby=\\\"productModalLabel\\\"\\n        aria-hidden=\\\"true\\\"\\n      >\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title\\\">Add product</h4>\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"close\\\"\\n                (click)=\\\"addProductModal.hide()\\\"\\n                aria-label=\\\"Close\\\"\\n              >\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              <form [formGroup]=\\\"productForm\\\" (ngSubmit)=\\\"ProductSubmit()\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"itemName\\\">Item name</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"itemName\\\"\\n                    name=\\\"itemName\\\"\\n                    formControlName=\\\"itemName\\\"\\n                  />\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"price\\\">Price</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"price\\\"\\n                    name=\\\"price\\\"\\n                    formControlName=\\\"price\\\"\\n                    placeholder=\\\"Enter value\\\"\\n                  />\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"unit\\\">Unit</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"unit\\\"\\n                    name=\\\"unit\\\"\\n                    formControlName=\\\"unit\\\"\\n                    placeholder=\\\"Enter value\\\"\\n                  />\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"Image\\\">Image</label>\\n                  <input\\n                    type=\\\"file\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"Image\\\"\\n                    accept=\\\".jpg,.jpeg,.JPEG,.png\\\"\\n                    name=\\\"Image\\\"\\n                    (change)=\\\"onChange($event)\\\"\\n                    formControlName=\\\"Image\\\"\\n                    placeholder=\\\"Choose image\\\"\\n                  />\\n                </div>\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-secondary\\\"\\n                  (click)=\\\"addProductModal.hide()\\\"\\n                >\\n                  Close\\n                </button>\\n                <button\\n                  type=\\\"submit\\\"\\n                  class=\\\"btn btn-primary ml-2\\\"\\n                  [disabled]=\\\"btnLoading || !productForm.valid\\\"\\n                >\\n                  <span\\n                    *ngIf=\\\"btnLoading\\\"\\n                    class=\\\"spinner-border spinner-border-sm\\\"\\n                    role=\\\"status\\\"\\n                    aria-hidden=\\\"true\\\"\\n                  ></span>\\n                  Save changes\\n                </button>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div\\n      class=\\\"card-header\\\"\\n      style=\\\"display: flex; justify-content: space-between\\\"\\n    >\\n      <h2>Users</h2>\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"btn btn-primary\\\"\\n        data-toggle=\\\"modal\\\"\\n        (click)=\\\"commentModal.show()\\\"\\n      >\\n        Add New User\\n      </button>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <ag-grid-angular\\n            #agGrid\\n            style=\\\"width: 100%; height: 65vh\\\"\\n            id=\\\"myGrid\\\"\\n            class=\\\"ag-theme-alpine\\\"\\n            [columnDefs]=\\\"columnDefs\\\"\\n            [rowData]=\\\"rowData\\\"\\n            [rowSelection]=\\\"rowSelection\\\"\\n            (gridReady)=\\\"onGridReady($event)\\\"\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\n            animateRows=\\\"true\\\"\\n          >\\n          </ag-grid-angular>\\n          <span class=\\\"float-left mt-3\\\"\\n            >{{ from }} to {{ to }} of {{ meta?.pagination?.total }}</span\\n          >\\n          <button\\n            type=\\\"button\\\"\\n            [disabled]=\\\"disableNextButton\\\"\\n            class=\\\"btn btn-primary float-right m-2\\\"\\n            (click)=\\\"loadNext()\\\"\\n          >\\n            Next\\n          </button>\\n          <span class=\\\"float-right mt-3\\\"\\n            >Page {{ meta?.pagination?.page }} of\\n            {{ meta?.pagination?.pageCount }}</span\\n          >\\n          <button\\n            type=\\\"button\\\"\\n            [disabled]=\\\"disablePrevButton\\\"\\n            class=\\\"btn btn-primary float-right m-2\\\"\\n            (click)=\\\"loadPrev()\\\"\\n          >\\n            Prev\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div\\n  bsModal\\n  #commentModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add User</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"commentModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"commentForm\\\" (ngSubmit)=\\\"formSubmit()\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"Name\\\">Name</label>\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"Name\\\"\\n                  name=\\\"Name\\\"\\n                  formControlName=\\\"Name\\\"\\n                  placeholder=\\\"Enter  Name\\\"\\n                />\\n                <div\\n                  *ngIf=\\\"f.Name.touched && f.Name.invalid\\\"\\n                  class=\\\"text-danger\\\"\\n                >\\n                  <div *ngIf=\\\"f.Name.errors.required\\\">Name is required.</div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"username\\\">Username</label>\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"username\\\"\\n                  name=\\\"username\\\"\\n                  formControlName=\\\"username\\\"\\n                  placeholder=\\\"Enter username\\\"\\n                />\\n                <div\\n                  *ngIf=\\\"f.username.touched && f.username.invalid\\\"\\n                  class=\\\"text-danger\\\"\\n                >\\n                  <div *ngIf=\\\"f.username.errors.required\\\">\\n                    Username is required.\\n                  </div>\\n                  <div *ngIf=\\\"f.username.errors.minlength\\\">\\n                    Username should have minimum 3 characters.\\n                  </div>\\n                  <div *ngIf=\\\"f.username.errors.cannotContainSpace\\\">\\n                    Username cannot contain space.\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"password\\\">Password</label>\\n                <input\\n                  type=\\\"password\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"password\\\"\\n                  name=\\\"password\\\"\\n                  formControlName=\\\"password\\\"\\n                  placeholder=\\\"Enter password\\\"\\n                />\\n                <div\\n                  *ngIf=\\\"f.password.touched && f.password.invalid\\\"\\n                  class=\\\"text-danger\\\"\\n                >\\n                  <div *ngIf=\\\"f.password.errors.required\\\">\\n                    Password is required.\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"UserType\\\">User type</label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"UserType\\\"\\n                  required\\n                  ngModel\\n                  name=\\\"UserType\\\"\\n                  formControlName=\\\"UserType\\\"\\n                >\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option value=\\\"Farmer\\\">Farmer</option>\\n                  <option value=\\\"Retailer\\\">Retailer</option>\\n                  <option value=\\\"Agronomist\\\">Agronomist</option>\\n                  <option value=\\\"Admin\\\">Admin</option>\\n                  <option value=\\\"Marketing\\\">Marketing</option>\\n                </select>\\n                <div\\n                  *ngIf=\\\"f.UserType.touched && f.UserType.invalid\\\"\\n                  class=\\\"text-danger\\\"\\n                >\\n                  <div *ngIf=\\\"f.UserType.errors.required\\\">\\n                    User type is required.\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"ContactNumber\\\">Contact number</label>\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"ContactNumber\\\"\\n                  name=\\\"ContactNumber\\\"\\n                  formControlName=\\\"ContactNumber\\\"\\n                  placeholder=\\\"Enter contact number\\\"\\n                />\\n                <div\\n                  *ngIf=\\\"f.ContactNumber.touched && f.ContactNumber.invalid\\\"\\n                  class=\\\"text-danger\\\"\\n                >\\n                  <div *ngIf=\\\"f.ContactNumber.errors.required\\\">\\n                    Contact number is required.\\n                  </div>\\n                </div>\\n              </div>\\n              <!-- <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\">E-mail</label>\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"email\\\"\\n                  name=\\\"email\\\"\\n                  formControlName=\\\"email\\\"\\n                  placeholder=\\\"Enter email\\\"\\n                />\\n              </div> -->\\n            </div>\\n            <div class=\\\"col\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"state\\\">State</label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"state\\\"\\n                  required\\n                  ngModel\\n                  (change)=\\\"filterLGA($event)\\\"\\n                  name=\\\"state\\\"\\n                  formControlName=\\\"state\\\"\\n                >\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\n                    {{ item.attributes.Name }}\\n                  </option>\\n                </select>\\n                <div\\n                  *ngIf=\\\"f.state.touched && f.state.invalid\\\"\\n                  class=\\\"text-danger\\\"\\n                >\\n                  <div *ngIf=\\\"f.state.errors.required\\\">State is required.</div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"lga\\\">LGA</label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"lga\\\"\\n                  required\\n                  ngModel\\n                  (change)=\\\"filterVillage($event)\\\"\\n                  name=\\\"lga\\\"\\n                  formControlName=\\\"lga\\\"\\n                >\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\n                    {{ item.attributes.Name }}\\n                  </option>\\n                </select>\\n                <div *ngIf=\\\"f.lga.touched && f.lga.invalid\\\" class=\\\"text-danger\\\">\\n                  <div *ngIf=\\\"f.lga.errors.required\\\">LGA is required.</div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"village\\\">Village</label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"village\\\"\\n                  required\\n                  ngModel\\n                  name=\\\"village\\\"\\n                  formControlName=\\\"village\\\"\\n                >\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option *ngFor=\\\"let item of Villages\\\" value=\\\"{{ item.id }}\\\">\\n                    {{ item.attributes.Name }}\\n                  </option>\\n                </select>\\n                <div\\n                  *ngIf=\\\"f.village.touched && f.village.invalid\\\"\\n                  class=\\\"text-danger\\\"\\n                >\\n                  <div *ngIf=\\\"f.village.errors.required\\\">\\n                    Village is required.\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"Gender\\\">Gender</label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"Gender\\\"\\n                  required\\n                  ngModel\\n                  name=\\\"Gender\\\"\\n                  formControlName=\\\"Gender\\\"\\n                >\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option value=\\\"Male\\\">Male</option>\\n                  <option value=\\\"Female\\\">Female</option>\\n                </select>\\n                <div\\n                  *ngIf=\\\"f.Gender.touched && f.Gender.invalid\\\"\\n                  class=\\\"text-danger\\\"\\n                >\\n                  <div *ngIf=\\\"f.Gender.errors.required\\\">\\n                    Gender is required.\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"Age\\\">Age</label>\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"Age\\\"\\n                  name=\\\"Age\\\"\\n                  formControlName=\\\"Age\\\"\\n                  placeholder=\\\"Enter age\\\"\\n                />\\n                <div *ngIf=\\\"f.Age.touched && f.Age.invalid\\\" class=\\\"text-danger\\\">\\n                  <div *ngIf=\\\"f.Age.errors.required\\\">Age is required.</div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"commentModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !commentForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Save changes\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { Component, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { DataService } from \"../../data.service\";\nimport { UsersColumn } from \"../../constants/columnMetadata\";\nimport { filter } from \"rxjs/operators\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\nimport { UsernameValidator } from \"../../utils/username.validator\";\n\n@Component({\n  templateUrl: \"users.component.html\",\n})\nexport class UsersComponent {\n  rowSelection: string;\n  constructor(\n    public dataservice: DataService,\n    public router: Router,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) {\n    this.columnDefs = [...UsersColumn];\n    this.setForm();\n    this.rowSelection = \"single\";\n  }\n  @ViewChild(\"commentModal\") public commentModal: ModalDirective;\n  @ViewChild(\"detailsModal\") public detailsModal: ModalDirective;\n\n  loading = true;\n  btnLoading = false;\n  disableNextButton = false;\n  disablePrevButton = true;\n  meta;\n  pageSize = 20;\n  from = 1;\n  to = 20;\n  count = 1;\n  columnDefs = [];\n  commentForm;\n  rowData: any = [];\n\n  Villages: any = [];\n  LGA: any = [];\n  Areas: any = [];\n  States: any = [];\n\n  selectedYear: any = new Date().getFullYear();\n  years: any = [];\n  private gridApi;\n  private gridColumnApi;\n  filter: any = {};\n\n  ngOnInit(): void {\n    this.loading = true;\n    console.log(this.router);\n    this.getRetailers();\n    this.getAreas();\n    this.getLGAs();\n    this.getStates();\n    this.getVillages();\n  }\n  setForm() {\n    this.commentForm = this.fb.group({\n      UserType: [\"\", Validators.required],\n      username: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(3),\n          UsernameValidator.cannotContainSpace,\n        ],\n      ],\n      email: [\"nodata@email.com\"],\n      password: [\"\", Validators.required],\n      Name: [\"\", Validators.required],\n      Gender: [\"\", Validators.required],\n      Age: [\"\", Validators.required],\n      ContactNumber: [\"\", Validators.required],\n      lga: [\"\", Validators.required],\n      village: [\"\", Validators.required],\n      state: [\"\"],\n    });\n  }\n  get f() {\n    return this.commentForm.controls;\n  }\n  getStates() {\n    this.dataservice.getStates().valueChanges.subscribe((result: any) => {\n      console.log(\"getStates\", result.data.states.data);\n      this.States = result.data.states.data;\n    });\n  }\n  getLGAs(id?) {\n    this.dataservice.getLGAs(id).valueChanges.subscribe((result: any) => {\n      console.log(\"getLGAs\", result.data.lgas.data);\n      this.LGA = result.data.lgas.data;\n    });\n  }\n  getAreas(id?) {\n    this.dataservice.getAreas(id).valueChanges.subscribe((result: any) => {\n      console.log(\"getAreas\", result.data.areas.data);\n      this.Areas = result.data.areas.data;\n    });\n  }\n  getVillages(id?) {\n    this.dataservice.getVillages(id).valueChanges.subscribe((result: any) => {\n      console.log(\"getVillages\", result.data.villages.data);\n      this.Villages = result.data.villages.data;\n    });\n  }\n  getRetailers() {\n    this.dataservice\n      .getUsers(1, this.pageSize)\n      .valueChanges.subscribe((result: any) => {\n        this.rowData = result.data.usersPermissionsUsers.data;\n        this.meta = result.data.usersPermissionsUsers.meta;\n        if (this.meta?.pagination?.pageCount <= 1) {\n          this.disablePrevButton = true;\n          this.disableNextButton = true;\n        }\n        if (this.meta?.pagination?.total < this.pageSize) {\n          this.to = this.meta?.pagination?.total;\n        }\n      });\n  }\n  loadNext() {\n    this.count++;\n    this.disablePrevButton = false;\n    this.from = this.from + this.pageSize;\n    this.to =\n      this.to + this.pageSize > this.meta?.pagination?.total\n        ? this.meta?.pagination?.total\n        : this.to + this.pageSize;\n    if (this.count === this.meta.pagination.pageCount) {\n      this.disableNextButton = true;\n    }\n    this.dataservice\n      .getUsers(this.count, this.pageSize)\n      .valueChanges.subscribe((result: any) => {\n        this.meta = result.data.usersPermissionsUsers.meta;\n        this.rowData = result.data.usersPermissionsUsers.data;\n      });\n  }\n  loadPrev() {\n    this.count--;\n    if (this.count < this.meta.pagination.pageCount) {\n      this.disableNextButton = false;\n    }\n    if (this.count === 1) {\n      this.disablePrevButton = true;\n    }\n    this.from = this.from - this.pageSize;\n    this.to = this.to - this.rowData.length;\n    this.dataservice\n      .getUsers(this.count, this.pageSize)\n      .valueChanges.subscribe((result: any) => {\n        this.meta = result.data.usersPermissionsUsers.meta;\n        this.rowData = result.data.usersPermissionsUsers.data;\n      });\n  }\n  filterLGA(event) {\n    this.getLGAs(event.target.value);\n  }\n  filterVillage(event) {\n    this.getVillages(event.target.value);\n  }\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.gridApi.sizeColumnsToFit();\n  }\n  onRowClicked(event: any) {\n    console.log(\"row\", event.data);\n    // this.router.navigate(\n    //   [\"/cropprices/kp_customer_details\", event.data.id, this.router.url],\n    //   {\n    //     state: { data: event.data },\n    //   }\n    // );\n  }\n  onSelectionChanged(event: any) {\n    var selectedRows = this.gridApi.getSelectedRows();\n    console.log(selectedRows, event);\n    this.router.navigate([\"/users/user_details\", selectedRows[0].id], {\n      state: { data: selectedRows },\n    });\n  }\n  openModal(data: any) {\n    this.detailsModal.show();\n  }\n  formSubmit() {\n    this.btnLoading = true;\n    console.log(this.commentForm.value);\n    let resp = {};\n    this.dataservice.createRetailer(this.commentForm.value).subscribe(\n      (result: any) => {\n        resp = result;\n        console.log(\"response\", result);\n        if (result) {\n          this.toastr.success(\"User added successfully!\");\n          this.btnLoading = false;\n          this.commentModal.hide();\n          this.setForm();\n          this.getRetailers();\n        } else {\n          this.toastr.error(\"Failed. Please check the fields!\");\n          this.btnLoading = false;\n        }\n      },\n      (error) => {\n        this.btnLoading = false;\n      }\n    );\n  }\n}\n"]}