{"version":3,"sources":["./src/app/views/best-crop-practices/best-crop-practices-routing.module.ts","./src/app/views/best-crop-practices/best-crop-practices.component.ts","./src/app/views/best-crop-practices/best-crop-practices.component.html","./src/app/views/best-crop-practices/best-crop-practices.module.ts"],"names":[],"mappings":"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","file":"views-best-crop-practices-best-crop-practices-module-es2017.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { BestCropPracticesComponent } from './best-crop-practices.component';\r\nimport { AuthGuard } from '../login/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'cropprices'\r\n      },\r\n      {\r\n        path: 'all',\r\n        // canActivate: [AuthGuard],\r\n        component: BestCropPracticesComponent,\r\n        data: {\r\n          roles: 'KP_CALLER',\r\n          title: 'Best Crop Practices'\r\n        }\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BestCropPracticesRoutingModule {}\r\n","import { Component, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { DataService } from '../../data.service';\nimport { CropPricesColumn } from '../../constants/columnMetadata';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { environment } from '../../../environments/environment';\n\n@Component({\n  templateUrl: 'best-crop-practices.component.html',\n})\nexport class BestCropPracticesComponent {\n  rowSelection: string;\n  constructor(\n    public dataservice: DataService,\n    public router: Router,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) {\n    this.columnDefs = [...CropPricesColumn];\n    this.rowSelection = 'single';\n  }\n  @ViewChild('practicesModal') public practicesModal: ModalDirective;\n  @ViewChild('deleteModal') public deleteModal: ModalDirective;\n\n  loading = true;\n  btnLoading = false;\n  disableButton = true;\n  title = 'Verification';\n  orders: any = {};\n  columnDefs = [];\n  Crops: any = [];\n  imageUrl;\n  baseURL = environment.apiUrl;\n  practicesForm = this.fb.group({\n    crop: ['', Validators.required],\n    content: ['', Validators.required],\n    File: ['', Validators.required],\n    Image: ['', Validators.required],\n  });\n  rowData: any = [];\n  selectedRows: any = [];\n  filter: any = {};\n  file: any = null;\n  image: any = null;\n  deleteId;\n\n  ngOnInit(): void {\n    this.loading = true;\n    console.log(this.router);\n    this.getBestCropPractises();\n    this.getCrops();\n  }\n  getBestCropPractises() {\n    this.dataservice\n      .getBestCropPractises(1, 1000)\n      .valueChanges.subscribe((result: any) => {\n        this.rowData = result.data.bestCropPractises.data;\n        console.log(this.rowData);\n      });\n  }\n  getCrops() {\n    this.dataservice.getCrops(1, 10000, '').valueChanges.subscribe((result: any) => {\n      this.Crops = result.data.crops.data;\n    });\n  }\n  // On file Select\n  onChange(event: any, check) {\n    if (check == true) {\n      this.file = [];\n      for (let i = 0; i < event.target.files.length; i++) {\n        this.file.push(event.target.files[i]);\n      }\n    } else {\n      this.image = [];\n      for (let i = 0; i < event.target.files.length; i++) {\n        this.image.push(event.target.files[i]);\n      }\n    }\n    console.log(this.file, this.image);\n  }\n  openModal(data: any) {\n    this.deleteModal.show();\n    this.deleteId = data.id;\n  }\n  deletePractice() {\n    this.dataservice\n      .deleteBestPractice(this.deleteId)\n      .subscribe((result: any) => {\n        console.log('response', result);\n        if (result.data.deleteBestCropPractise) {\n          this.dataservice.getBestCropPractises().refetch();\n          this.toastr.success('Success!');\n          this.deleteModal.hide();\n        } else {\n          this.toastr.error('Failed!');\n        }\n      });\n  }\n  practicesSubmit() {\n    let resp = {};\n    let image = null;\n    let file = null;\n    this.btnLoading = true;\n    console.log(this.practicesForm.value);\n    this.dataservice.upload(this.image).subscribe((imgResponse: any) => {\n      if (imgResponse.status == 200) {\n        image = imgResponse.body[0]?.id;\n        console.log(imgResponse);\n        this.dataservice.upload(this.file).subscribe((fileResponse: any) => {\n          if (fileResponse.status == 200) {\n            file = fileResponse.body[0]?.id;\n            console.log(fileResponse);\n            this.dataservice\n              .createBestCropPractise(this.practicesForm.value, image, file)\n              .subscribe((result: any) => {\n                resp = result.data;\n                console.log('response', result);\n                if (result.data.createBestCropPractise) {\n                  this.toastr.success('Success!');\n                  this.practicesForm.reset();\n                  this.dataservice.getBestCropPractises().refetch();\n                  this.practicesModal.hide();\n                  this.btnLoading = false;\n                } else {\n                  this.toastr.error('Failed. Please check the fields!');\n                  this.btnLoading = false;\n                }\n              });\n          } else {\n            this.toastr.error('Image failed to upload!');\n            this.btnLoading = false;\n          }\n        });\n      } else {\n        this.toastr.error('Image failed to upload!');\n        this.btnLoading = false;\n      }\n    });\n  }\n}\n","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\r\\n      <h2>Best Crop Practices</h2>\\r\\n      <div>\\r\\n        <button type=\\\"button\\\" [disabled]=\\\"!disableButton\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\"\\r\\n          (click)=\\\"practicesModal.show()\\\">\\r\\n          Add New\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-3\\\" *ngFor=\\\"let item of rowData\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"img-container\\\">\\r\\n              <img class=\\\"card-img-top\\\" height=\\\"200\\\" width=\\\"200\\\"\\r\\n                src=\\\"{{baseURL}}{{item?.attributes?.cropImage?.data?.attributes?.url}}\\\" alt=\\\"Card image cap\\\" />\\r\\n              <div class=\\\"overlay\\\">\\r\\n                <div class=\\\"overlay-text\\\"><a target=\\\"_blank\\\"\\r\\n                    href=\\\"{{baseURL}}{{item?.attributes?.media?.data?.attributes?.url}}\\\" style=\\\"color: white;\\\">Click\\r\\n                    to view file</a></div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <div style=\\\"display: flex; justify-content: space-between\\\">\\r\\n                <h5 class=\\\"card-title\\\">\\r\\n                  {{item.attributes.crop.data.attributes.Name}}\\r\\n                </h5>\\r\\n                <div>\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-outline-primary p-1\\\" (click)=\\\"openModal(item)\\\">\\r\\n                    <img src=\\\"assets/deleteIcon.svg\\\">\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n              <p class=\\\"card-text\\\">\\r\\n                {{item.attributes.content}}\\r\\n              </p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div bsModal #practicesModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Add/Edit Practice</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"practicesModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"practicesForm\\\" (ngSubmit)=\\\"practicesSubmit()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"crop\\\">Crop</label>\\r\\n            <select class=\\\"form-control\\\" id=\\\"crop\\\" required ngModel name=\\\"crop\\\" formControlName=\\\"crop\\\">\\r\\n              <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n              <option *ngFor=\\\"let item of Crops\\\" value=\\\"{{ item.id }}\\\">\\r\\n                {{ item.attributes.Name }}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"content\\\">Description</label>\\r\\n            <textarea type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"content\\\" maxlength=\\\"150\\\" name=\\\"content\\\" rows=\\\"3\\\" formControlName=\\\"content\\\"\\r\\n              placeholder=\\\"Enter description\\\"></textarea>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"File\\\">PDF File</label>\\r\\n            <div><input type=\\\"file\\\" id=\\\"File\\\" accept=\\\".pdf\\\" name=\\\"File\\\" (change)=\\\"onChange($event,true)\\\"\\r\\n              formControlName=\\\"File\\\" placeholder=\\\"Choose file\\\" /></div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"Image\\\">Preview image</label>\\r\\n            <div>\\r\\n              <img *ngIf=\\\"imageUrl\\\" src=\\\"{{ imageUrl }}\\\" width=\\\"100\\\" height=\\\"100\\\" style=\\\"object-fit: cover\\\" />\\r\\n            </div>\\r\\n            <input type=\\\"file\\\" id=\\\"Image\\\" accept=\\\".jpg,.jpeg,.JPEG,.png\\\" name=\\\"Image\\\"\\r\\n              (change)=\\\"onChange($event,false)\\\" formControlName=\\\"Image\\\" placeholder=\\\"Choose image\\\" />\\r\\n          </div>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"practicesModal.hide()\\\">\\r\\n            Close\\r\\n          </button>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-2\\\" [disabled]=\\\"btnLoading || !practicesForm.valid\\\">\\r\\n            <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            Save changes\\r\\n          </button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- /.modal-content -->\\r\\n  </div>\\r\\n  <!-- /.modal-dialog -->\\r\\n</div>\\r\\n<div bsModal #deleteModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body text-center\\\">\\r\\n        Do you want to delete this record?\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer justify-content-around\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"deleteModal.hide()\\\">\\r\\n          No! Cancel.\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deletePractice()\\\">\\r\\n          Yes! Delete.\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";","import { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { BestCropPracticesComponent } from './best-crop-practices.component';\r\n\r\n// Dropdowns Component\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\n// Buttons Routing\r\nimport { BestCropPracticesRoutingModule } from './best-crop-practices-routing.module';\r\n\r\n// Angular\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TabsModule,\r\n    ReactiveFormsModule,\r\n    AgGridModule.withComponents([]),\r\n    BestCropPracticesRoutingModule,\r\n    BsDropdownModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    BestCropPracticesComponent,\r\n  ]\r\n})\r\nexport class BestCropPracticesModule { }\r\n"],"sourceRoot":"webpack:///"}