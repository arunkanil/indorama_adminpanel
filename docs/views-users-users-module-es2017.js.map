{"version":3,"sources":["./src/app/views/users/users.module.ts","./src/app/views/users/users-routing.module.ts","./src/app/views/users/user-detail.component.ts","./src/app/views/users/user-detail.component.html","./src/app/views/users/users.component.html","./src/app/views/users/users.component.ts"],"names":[],"mappings":"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","file":"views-users-users-module-es2017.js","sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { UsersComponent } from './users.component';\r\n\r\n// Dropdowns Component\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\n// Buttons Routing\r\nimport { RetailersRoutingModule } from './users-routing.module';\r\n\r\n// Angular\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { UserDetailComponent } from './user-detail.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TabsModule,\r\n    ReactiveFormsModule,\r\n    AgGridModule.withComponents([]),\r\n    RetailersRoutingModule,\r\n    BsDropdownModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    UsersComponent,\r\n    UserDetailComponent\r\n  ]\r\n})\r\nexport class UsersModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UsersComponent } from './users.component';\r\nimport { AuthGuard } from '../login/auth.guard';\r\nimport { UserDetailComponent } from './user-detail.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    \r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'retailers'\r\n      },\r\n      {\r\n        path: 'all',\r\n        // canActivate: [AuthGuard],\r\n        component: UsersComponent,\r\n        data: {\r\n          title: 'Users'\r\n        }\r\n      },\r\n      {\r\n        path: 'user_details/:id',\r\n        // canActivate: [AuthGuard],\r\n        component: UserDetailComponent,\r\n        data: {\r\n          title: 'Retailer Details'\r\n        }\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RetailersRoutingModule {}\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { DataService } from \"../../data.service\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { dateConverter } from \"../../constants/columnMetadata\";\nimport { environment } from \"../../../environments/environment\";\n\n@Component({\n  templateUrl: \"user-detail.component.html\",\n})\nexport class UserDetailComponent implements OnInit {\n  constructor(\n    public dataservice: DataService,\n    private activatedRouter: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) {}\n  @ViewChild(\"myModal\") public myModal: ModalDirective;\n  @ViewChild(\"areaModal\") public areaModal: ModalDirective;\n  @ViewChild(\"resultModal\") public resultModal: ModalDirective;\n  @ViewChild(\"deleteModal\") public deleteModal: ModalDirective;\n  @ViewChild(\"addProductModal\") public addProductModal: ModalDirective;\n\n  id: any;\n  baseURL = environment.apiUrl;\n  loading = true;\n  details: any = [];\n  btnLoading = false;\n  dateConverter = dateConverter;\n  users: any = [];\n  Villages: any = [];\n  LGA: any = [];\n  Areas: any = [];\n  Retailers: any = [];\n  Farmers: any = [];\n  States: any = [];\n  Crops: any = [];\n  file: any = null;\n  dispArea = false;\n  agronomists;\n  flag;\n  deleteObj;\n  agentForm = this.fb.group({\n    ContactNumber: [\"\", Validators.required],\n    // username: [\"\", Validators.required],\n    blocked: [\"\"],\n    Name: [\"\", Validators.required],\n    // email: [\"\", Validators.required],\n    Farmer: [\"\", Validators.required],\n    UserType: [\"\", Validators.required],\n    Bio: [\"\"],\n    password: [\"\"],\n    state: [\"\", Validators.required],\n    village: [\"\", Validators.required],\n    lga: [\"\", Validators.required],\n    Latitude: [\"\"],\n    Longitude: [\"\"],\n  });\n  resultForm = this.fb.group({\n    id: [\"\"],\n    itemName: [\"\", Validators.required],\n    price: [\"\", Validators.required],\n    unit: [\"\", Validators.required],\n  });\n  areaForm = this.fb.group({\n    state: [\"\"],\n    agronomist_lgas: [\"\", Validators.required],\n  });\n  productForm = this.fb.group({\n    Image: [\"\", Validators.required],\n    itemName: [\"\", Validators.required],\n    price: [\"\", Validators.required],\n    unit: [\"\", Validators.required],\n  });\n  ngOnInit(): void {\n    this.getLists();\n    this.getAreas();\n    this.getCrops();\n    this.getLGAs();\n    this.getStates();\n    this.getVillages();\n    this.getFarmers();\n    this.getRetailers();\n    this.activatedRouter.params.subscribe((params) => {\n      this.id = params[\"id\"];\n    });\n    this.getTest();\n  }\n  imgUrl(url) {\n    return `${environment.apiUrl}` + url;\n  }\n  getTest() {\n    this.dataservice\n      .getsingleRetailer(this.id)\n      .valueChanges.subscribe((result: any) => {\n        console.log(\n          \"getsingleRetailer\",\n          result.data.usersPermissionsUsers.data[0]\n        );\n        this.details = result.data.usersPermissionsUsers.data[0];\n        this.agentForm = this.fb.group({\n          ContactNumber: [\n            this.details.attributes?.ContactNumber,\n            Validators.required,\n          ],\n          Name: [this.details.attributes?.Name, Validators.required],\n          // email: [this.details.attributes?.email, Validators.required],\n          Bio: [this.details.attributes?.Bio],\n          Latitude: [this.details.attributes?.Latitude],\n          Longitude: [this.details.attributes?.Longitude],\n          state: [\n            this.details?.attributes?.lga?.data?.attributes?.state?.data?.id,\n            Validators.required,\n          ],\n          lga: [this.details?.attributes?.lga?.data?.id, Validators.required],\n          village: [\n            this.details?.attributes?.village?.data?.id,\n            Validators.required,\n          ],\n          password: [\"\"],\n          blocked: [this.details?.attributes?.blocked],\n          UserType: [this.details?.attributes?.UserType, Validators.required],\n        });\n        this.loading = false;\n        this.dispArea =\n          this.details?.attributes?.UserType == \"Agronomist\" ? true : false;\n        if (this.dispArea == true) {\n          this.agronomists = this.details?.attributes?.agronomist_lgas?.data;\n          // this.dataservice\n          //   .getAgronomist(this.id)\n          //   .valueChanges.subscribe((result: any) => {\n          //     console.log(\"getAgronomist\", result?.data?.agronomists?.data);\n          //     this.agronomists = result?.data?.agronomists?.data[0];\n          //   });\n        }\n      });\n  }\n  getCrops() {\n    this.dataservice.getCrops(1, 10000, \"\").valueChanges.subscribe((result: any) => {\n      console.log(\"getCrops\", result.data.crops.data);\n      this.Crops = result.data.crops.data;\n    });\n  }\n  getStates() {\n    this.dataservice.getStates(1, 10000, \"\").valueChanges.subscribe((result: any) => {\n      console.log(\"getStates\", result.data.states.data);\n      this.States = result.data.states.data;\n    });\n  }\n  getLGAs(id?) {\n    this.dataservice.getLGAs(1, 10000, \"\",id).valueChanges.subscribe((result: any) => {\n      console.log(\"getLGAs\", result.data.lgas.data);\n      this.LGA = result.data.lgas.data;\n    });\n  }\n  getAreas(id?) {\n    this.dataservice.getAreas(1, 10000, \"\",id).valueChanges.subscribe((result: any) => {\n      console.log(\"getAreas\", result.data.areas.data);\n      this.Areas = result.data.areas.data;\n    });\n  }\n  getRetailers() {\n    this.dataservice\n      .getRetailerCategories()\n      .valueChanges.subscribe((result: any) => {\n        console.log(\"getRetailers\", result.data.retailerCategories.data);\n        this.Retailers = result.data.retailerCategories.data;\n      });\n  }\n  getFarmers() {\n    this.dataservice\n      .getUsers(undefined, undefined, \"Farmer\")\n      .valueChanges.subscribe((result: any) => {\n        console.log(\"getFarmers\", result.data.usersPermissionsUsers.data);\n        this.Farmers = result.data.usersPermissionsUsers.data;\n      });\n  }\n  getVillages(id?) {\n    this.dataservice.getVillages(1, 10000, \"\", id).valueChanges.subscribe((result: any) => {\n      console.log(\"getVillages\", result.data.villages.data);\n      this.Villages = result.data.villages.data;\n    });\n  }\n  dateConvertor(date) {\n    return new Date(date);\n  }\n  getLists() {\n    this.loading = true;\n  }\n  openModal(data: any, flag) {\n    this.resultModal.show();\n    console.log(data, flag);\n    this.flag = flag;\n    this.resultForm = this.fb.group({\n      id: [data?.id],\n      soil_test_sample: [data?.id],\n      itemName: [data?.attributes?.ItemName, Validators.required],\n      price: [data?.attributes?.Price, Validators.required],\n      unit: [data?.attributes?.Unit, Validators.required],\n    });\n  }\n  openDeleteModal(data) {\n    this.deleteObj = data;\n    this.deleteModal.show();\n  }\n  FormSubmit() {\n    let resp = {};\n    this.btnLoading = true;\n    console.log(this.agentForm.value);\n    this.dataservice.UpdateRetailer(this.agentForm.value, this.id).subscribe(\n      (result: any) => {\n        resp = result.data;\n        console.log(\"response\", result);\n        if (result.data.updateUsersPermissionsUser) {\n          this.toastr.success(\"User updated successfully!\");\n          this.btnLoading = false;\n          this.myModal.hide();\n          this.getTest();\n        } else {\n          this.toastr.error(\"Failed. Please check the fields!\");\n          this.btnLoading = false;\n        }\n      },\n      (error) => {\n        this.btnLoading = false;\n      }\n    );\n  }\n  ResultSubmit() {\n    console.log(\"edit\", this.resultForm.value);\n    let resp = {};\n    console.log(this.resultForm.value);\n    this.dataservice\n      .UpdateRetailerProducts(\n        this.resultForm.value,\n        this.details?.attributes?.retailer_categories?.data[0]?.id,\n        this.id\n      )\n      .subscribe((result: any) => {\n        resp = result.data;\n        console.log(\"response\", result);\n        if (result.data.updateRetailerProduct) {\n          this.toastr.success(\"Product updated successfully!\");\n          this.resultModal.hide();\n          this.getTest();\n        } else {\n          this.toastr.error(\"Failed. Please check the fields!\");\n        }\n      });\n  }\n  onChange(event: any) {\n    this.file = [];\n    for (var i = 0; i < event.target.files.length; i++) {\n      this.file.push(event.target.files[i]);\n    }\n    console.log(this.file);\n  }\n  filterLGA(event) {\n    this.getLGAs(event.target.value);\n  }\n  filterArea(event) {\n    this.getAreas(event.target.value);\n  }\n  filterVillage(event) {\n    this.getVillages(event.target.value);\n  }\n  uploadProfPic() {\n    let resp = {};\n    this.dataservice.upload(this.file).subscribe((response: any) => {\n      if (response.status == 200) {\n        console.log(response);\n        this.dataservice\n          .UpdateRetailerPic(this.id, response.body[0]?.id)\n          .subscribe((result: any) => {\n            resp = result.data;\n            console.log(\"response\", result);\n            if (result.data.updateUsersPermissionsUser) {\n              this.toastr.success(\"Success!\");\n              this.file = null;\n              this.getTest();\n              this.addProductModal.hide();\n            } else {\n              this.toastr.error(\"Failed!\");\n            }\n          });\n      } else {\n        this.toastr.error(\"Image failed to upload!\");\n      }\n    });\n  }\n  AreaSubmit() {\n    let resp = {};\n    console.log(this.areaForm.value);\n    this.dataservice\n      .UpdateRetailer(this.areaForm.value, this.id)\n      .subscribe((result: any) => {\n        resp = result.data;\n        console.log(\"response\", result);\n        if (result.data.updateUsersPermissionsUser) {\n          this.toastr.success(\"User updated successfully!\");\n          this.areaModal.hide();\n          this.getTest();\n        } else {\n          this.toastr.error(\"Failed. Please check the fields!\");\n        }\n      });\n  }\n  ProductSubmit() {\n    let resp = {};\n    this.dataservice.upload(this.file).subscribe((response: any) => {\n      if (response.status == 200) {\n        console.log(response);\n        this.dataservice\n          .addRetailerProducts(\n            this.productForm.value,\n            this.details?.attributes?.retailer_categories?.data[0]?.id,\n            this.id,\n            response.body[0]?.id\n          )\n          .subscribe((result: any) => {\n            resp = result.data;\n            console.log(\"response\", result);\n            if (result.data.createRetailerProduct) {\n              this.toastr.success(\"Success!\");\n              this.file = null;\n              this.getTest();\n              this.addProductModal.hide();\n            } else {\n              this.toastr.error(\"Failed!\");\n            }\n          });\n      } else {\n        this.toastr.error(\"Image failed to upload!\");\n      }\n    });\n  }\n  deleteProduct() {\n    if (this.details?.attributes?.UserType !== \"Agronomist\") {\n      this.dataservice.deleteUser(this.id).subscribe((result: any) => {\n        console.log(\"response\", result);\n        if (result.data.deleteUsersPermissionsUser) {\n          this.toastr.success(\"Success!\");\n          this.deleteModal.hide();\n          this.router.navigate([\"/users/all\"]);\n        } else {\n          this.toastr.error(\"Failed!\");\n        }\n      });\n    } else {\n      this.toastr.error(\"Can't delete Agronomist. Try setting as blocked.\");\n    }\n  }\n}\n","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div\\n    bsModal\\n    #deleteModal=\\\"bs-modal\\\"\\n    class=\\\"modal fade\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"dialog\\\"\\n    aria-labelledby=\\\"myModalLabel\\\"\\n    aria-hidden=\\\"true\\\"\\n  >\\n    <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-body text-center\\\">\\n          Do you want to delete this record?\\n        </div>\\n        <div class=\\\"modal-footer justify-content-around\\\">\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"deleteModal.hide()\\\"\\n          >\\n            No! Cancel.\\n          </button>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-primary\\\"\\n            (click)=\\\"deleteProduct()\\\"\\n          >\\n            Yes! Delete.\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div\\n    bsModal\\n    #areaModal=\\\"bs-modal\\\"\\n    class=\\\"modal fade\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"dialog\\\"\\n    aria-labelledby=\\\"myModalLabel\\\"\\n    aria-hidden=\\\"true\\\"\\n  >\\n    <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">Edit assigned areas</h4>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"close\\\"\\n            (click)=\\\"myModal.hide()\\\"\\n            aria-label=\\\"Close\\\"\\n          >\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <form [formGroup]=\\\"areaForm\\\" (ngSubmit)=\\\"AreaSubmit()\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"state\\\">State</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                id=\\\"state\\\"\\n                (change)=\\\"filterLGA($event)\\\"\\n                ngModel\\n                name=\\\"state\\\"\\n                formControlName=\\\"state\\\"\\n              >\\n                <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\n                  {{ item.attributes.Name }}\\n                </option>\\n              </select>\\n            </div>\\n            <!-- <div class=\\\"form-group\\\">\\n              <label for=\\\"lga\\\">LGA</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                id=\\\"lga\\\"\\n                (change)=\\\"filterArea($event)\\\"\\n                ngModel\\n                name=\\\"lga\\\"\\n                formControlName=\\\"lga\\\"\\n              >\\n                <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\n                  {{ item.attributes.Name }}\\n                </option>\\n              </select>\\n            </div> -->\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"agronomist_lgas\\\">LGAs</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                id=\\\"agronomist_lgas\\\"\\n                multiple\\n                required\\n                ngModel\\n                name=\\\"agronomist_lgas\\\"\\n                formControlName=\\\"agronomist_lgas\\\"\\n              >\\n                <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\n                  {{ item.attributes.Name }}\\n                </option>\\n              </select>\\n            </div>\\n            <button\\n              type=\\\"button\\\"\\n              class=\\\"btn btn-secondary\\\"\\n              (click)=\\\"areaModal.hide()\\\"\\n            >\\n              Close\\n            </button>\\n            <button\\n              type=\\\"submit\\\"\\n              class=\\\"btn btn-primary ml-2\\\"\\n              [disabled]=\\\"btnLoading || !areaForm.valid\\\"\\n            >\\n              <span\\n                *ngIf=\\\"btnLoading\\\"\\n                class=\\\"spinner-border spinner-border-sm\\\"\\n                role=\\\"status\\\"\\n                aria-hidden=\\\"true\\\"\\n              ></span>\\n              Save changes\\n            </button>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"card\\\">\\n    <div\\n      class=\\\"card-header\\\"\\n      style=\\\"display: flex; justify-content: space-between\\\"\\n    >\\n      <h2>User Details</h2>\\n      <span>\\n        <div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-primary\\\"\\n            data-toggle=\\\"modal\\\"\\n            (click)=\\\"myModal.show()\\\"\\n          >\\n            Edit\\n          </button>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-danger\\\"\\n            data-toggle=\\\"modal\\\"\\n            (click)=\\\"deleteModal.show()\\\"\\n          >\\n            Delete\\n          </button>\\n        </div>\\n      </span>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n          <div class=\\\"row\\\">\\n            <div style=\\\"display: flex; justify-content: space-between\\\">\\n              <h4>Basic details</h4>\\n            </div>\\n            <table class=\\\"table table-striped\\\">\\n              <tbody>\\n                <tr>\\n                  <td>ID</td>\\n                  <td>{{ details?.id }}</td>\\n                </tr>\\n                <tr>\\n                  <td>Username</td>\\n                  <td>{{ details?.attributes?.username }}</td>\\n                </tr>\\n                <tr>\\n                  <td>Status</td>\\n                  <td>\\n                    <span\\n                      *ngIf=\\\"details?.attributes?.blocked\\\"\\n                      class=\\\"text-danger\\\"\\n                      >Blocked</span\\n                    ><span *ngIf=\\\"!details?.attributes?.blocked\\\" class=\\\"text-success\\\">Active</span>\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Profile pic</td>\\n                  <td>\\n                    <a\\n                      href=\\\"{{ baseURL }}{{\\n                        details?.attributes?.prof_pic?.data?.attributes?.url\\n                      }}\\\"\\n                      target=\\\"_blank\\\"\\n                      ><img\\n                        class=\\\"card-img-top\\\"\\n                        style=\\\"width: 150px; height: 150px\\\"\\n                        src=\\\"{{ baseURL }}{{\\n                          details?.attributes?.prof_pic?.data?.attributes?.url\\n                        }}\\\"\\n                        alt=\\\"No image found\\\"\\n                    /></a>\\n                    <div style=\\\"display: flex\\\">\\n                      <input\\n                        type=\\\"file\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"prof_pic\\\"\\n                        style=\\\"width: 250px\\\"\\n                        accept=\\\".jpg,.jpeg,.JPEG,.png\\\"\\n                        name=\\\"prof_pic\\\"\\n                        (change)=\\\"onChange($event)\\\"\\n                        placeholder=\\\"Choose image\\\"\\n                      />\\n                      <button\\n                        type=\\\"button\\\"\\n                        class=\\\"btn btn-outline-primary\\\"\\n                        data-toggle=\\\"modal\\\"\\n                        (click)=\\\"uploadProfPic()\\\"\\n                      >\\n                        Upload\\n                      </button>\\n                    </div>\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Name</td>\\n                  <td>\\n                    {{ details?.attributes?.Name }}\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Contact number</td>\\n                  <td>{{ details?.attributes?.ContactNumber }}</td>\\n                </tr>\\n                <tr>\\n                  <td>User type</td>\\n                  <td>{{ details?.attributes?.UserType }}</td>\\n                </tr>\\n                 <tr>\\n                  <td>Referred by (Agronomist Name)</td>\\n                  <td>\\n                    {{ details?.attributes?.referred_agronomist.data.attributes.Name }}\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Village</td>\\n                  <td>\\n                    {{ details?.attributes?.village?.data?.attributes?.Name }}\\n                  </td>\\n                </tr>\\n\\n                <tr>\\n                  <td>LGA</td>\\n                  <td>{{ details?.attributes?.lga?.data?.attributes.Name }}</td>\\n                </tr>\\n                <tr>\\n                  <td>State</td>\\n                  <td>\\n                    {{\\n                      details?.attributes?.lga?.data?.attributes?.state?.data\\n                        ?.attributes?.Name\\n                    }}\\n                  </td>\\n                </tr>\\n                <!-- <tr>\\n                  <td>Retailer Category</td>\\n                  <td>\\n                    {{\\n                    details?.attributes?.retailer_categories?.data[0]?.attributes?.CategoryName\\n                    }}\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Bio</td>\\n                  <td style=\\\"width: 60%\\\">{{ details?.attributes?.Bio }}</td>\\n                </tr> -->\\n                <tr>\\n                  <td>Created at</td>\\n                  <td>{{ dateConvertor(details?.attributes?.createdAt) }}</td>\\n                </tr>\\n                <tr>\\n                  <td>Last updated</td>\\n                  <td>{{ dateConvertor(details?.attributes?.updatedAt) }}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"dispArea\\\" class=\\\"col\\\">\\n          <div style=\\\"display: flex; justify-content: space-between\\\">\\n            <h4>LGAs assigned</h4>\\n            <button\\n              type=\\\"button\\\"\\n              class=\\\"btn btn-primary\\\"\\n              data-toggle=\\\"modal\\\"\\n              (click)=\\\"areaModal.show()\\\"\\n            >\\n              Edit LGAs\\n            </button>\\n          </div>\\n          <ul>\\n            <li *ngFor=\\\"let item of agronomists\\\">\\n              {{ item?.attributes?.Name }}\\n            </li>\\n          </ul>\\n        </div>\\n      </div>\\n      <div\\n        bsModal\\n        #myModal=\\\"bs-modal\\\"\\n        class=\\\"modal fade\\\"\\n        tabindex=\\\"-1\\\"\\n        role=\\\"dialog\\\"\\n        aria-labelledby=\\\"myModalLabel\\\"\\n        aria-hidden=\\\"true\\\"\\n      >\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title\\\">Edit details</h4>\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"close\\\"\\n                (click)=\\\"myModal.hide()\\\"\\n                aria-label=\\\"Close\\\"\\n              >\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              <form [formGroup]=\\\"agentForm\\\" (ngSubmit)=\\\"FormSubmit()\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"Name\\\"\\n                        >Name<span class=\\\"danger\\\">*</span></label\\n                      >\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"Name\\\"\\n                        name=\\\"Name\\\"\\n                        formControlName=\\\"Name\\\"\\n                        placeholder=\\\"Enter Name\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"market\\\"\\n                        >Contact Number<span class=\\\"danger\\\">*</span></label\\n                      >\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"ContactNumber\\\"\\n                        name=\\\"ContactNumber\\\"\\n                        formControlName=\\\"ContactNumber\\\"\\n                        placeholder=\\\"Enter contact number\\\"\\n                      />\\n                    </div>\\n                    <!-- <div class=\\\"form-group\\\">\\n                      <label for=\\\"email\\\">email</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"email\\\"\\n                        name=\\\"email\\\"\\n                        formControlName=\\\"email\\\"\\n                        placeholder=\\\"Enter email\\\"\\n                      />\\n                    </div> -->\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"UserType\\\"\\n                        >User type<span class=\\\"danger\\\">*</span></label\\n                      >\\n                      <select\\n                        class=\\\"form-control\\\"\\n                        id=\\\"UserType\\\"\\n                        required\\n                        ngModel\\n                        name=\\\"UserType\\\"\\n                        formControlName=\\\"UserType\\\"\\n                      >\\n                        <option value=\\\"\\\" disabled selected hidden>\\n                          Choose...\\n                        </option>\\n                        <option value=\\\"Farmer\\\">Farmer</option>\\n                        <option value=\\\"Retailer\\\">Retailer</option>\\n                        <option value=\\\"Agronomist\\\">Agronomist</option>\\n                        <option value=\\\"Admin\\\">Admin</option>\\n                      </select>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"Bio\\\">Bio</label>\\n                      <textarea\\n                        class=\\\"form-control\\\"\\n                        id=\\\"Bio\\\"\\n                        name=\\\"Bio\\\"\\n                        formControlName=\\\"Bio\\\"\\n                        placeholder=\\\"Enter Bio\\\"\\n                      ></textarea>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"password\\\">Password</label>\\n                      <input\\n                        type=\\\"password\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"password\\\"\\n                        name=\\\"password\\\"\\n                        formControlName=\\\"password\\\"\\n                        placeholder=\\\"Enter password\\\"\\n                      />\\n                    </div>\\n                    <!-- <div class=\\\"form-check\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" ngModel name=\\\"blocked\\\"\\n                        formControlName=\\\"blocked\\\" id=\\\"blocked\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"blocked\\\">\\n                        Blocked\\n                      </label>\\n                    </div> -->\\n                    <!-- <div class=\\\"form-group\\\">\\n                      <label for=\\\"blocked\\\">Active status</label>\\n                      <input class=\\\"form-control\\\" type=\\\"checkbox\\\" id=\\\"blocked\\\" required ngModel name=\\\"blocked\\\"\\n                        formControlName=\\\"blocked\\\" />\\n                    </div> -->\\n                  </div>\\n                  <div class=\\\"col\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"state\\\"\\n                        >State<span class=\\\"danger\\\">*</span></label\\n                      >\\n                      <select\\n                        class=\\\"form-control\\\"\\n                        id=\\\"state\\\"\\n                        (change)=\\\"filterLGA($event)\\\"\\n                        required\\n                        ngModel\\n                        name=\\\"state\\\"\\n                        formControlName=\\\"state\\\"\\n                      >\\n                        <option value=\\\"\\\" disabled selected hidden>\\n                          Choose...\\n                        </option>\\n                        <option\\n                          *ngFor=\\\"let item of States\\\"\\n                          value=\\\"{{ item.id }}\\\"\\n                        >\\n                          {{ item.attributes.Name }}\\n                        </option>\\n                      </select>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"lga\\\">LGA<span class=\\\"danger\\\">*</span></label>\\n                      <select\\n                        class=\\\"form-control\\\"\\n                        id=\\\"lga\\\"\\n                        (change)=\\\"filterVillage($event)\\\"\\n                        required\\n                        ngModel\\n                        name=\\\"lga\\\"\\n                        formControlName=\\\"lga\\\"\\n                      >\\n                        <option value=\\\"\\\" disabled selected hidden>\\n                          Choose...\\n                        </option>\\n                        <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\n                          {{ item.attributes.Name }}\\n                        </option>\\n                      </select>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"village\\\"\\n                        >Village<span class=\\\"danger\\\">*</span></label\\n                      >\\n                      <select\\n                        class=\\\"form-control\\\"\\n                        id=\\\"village\\\"\\n                        required\\n                        ngModel\\n                        name=\\\"village\\\"\\n                        formControlName=\\\"village\\\"\\n                      >\\n                        <option value=\\\"\\\" disabled selected hidden>\\n                          Choose...\\n                        </option>\\n                        <option\\n                          *ngFor=\\\"let item of Villages\\\"\\n                          value=\\\"{{ item.id }}\\\"\\n                        >\\n                          {{ item.attributes.Name }}\\n                        </option>\\n                      </select>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"Latitude\\\">Latitude</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"Latitude\\\"\\n                        name=\\\"Latitude\\\"\\n                        formControlName=\\\"Latitude\\\"\\n                        placeholder=\\\"Enter Latitude\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"Longitude\\\">Longitude</label>\\n                      <input\\n                        class=\\\"form-control\\\"\\n                        id=\\\"Longitude\\\"\\n                        ngModel\\n                        name=\\\"Longitude\\\"\\n                        formControlName=\\\"Longitude\\\"\\n                        placeholder=\\\"Enter Longitude\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"blocked\\\"\\n                        >Status<span class=\\\"danger\\\">*</span></label\\n                      >\\n                      <select\\n                        class=\\\"form-control\\\"\\n                        id=\\\"blocked\\\"\\n                        ngModel\\n                        name=\\\"blocked\\\"\\n                        formControlName=\\\"blocked\\\"\\n                      >\\n                        <option value=\\\"\\\" disabled selected hidden>\\n                          Choose...\\n                        </option>\\n                        <option value=\\\"true\\\">Blocked</option>\\n                        <option value=\\\"false\\\">Active</option>\\n                      </select>\\n                    </div>\\n                    <button\\n                      type=\\\"button\\\"\\n                      class=\\\"btn btn-secondary\\\"\\n                      (click)=\\\"myModal.hide()\\\"\\n                    >\\n                      Close\\n                    </button>\\n                    <button\\n                      type=\\\"submit\\\"\\n                      class=\\\"btn btn-primary ml-2\\\"\\n                      [disabled]=\\\"btnLoading || !agentForm.valid\\\"\\n                    >\\n                      <span\\n                        *ngIf=\\\"btnLoading\\\"\\n                        class=\\\"spinner-border spinner-border-sm\\\"\\n                        role=\\\"status\\\"\\n                        aria-hidden=\\\"true\\\"\\n                      ></span>\\n                      Save changes\\n                    </button>\\n                  </div>\\n                </div>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div\\n        bsModal\\n        #resultModal=\\\"bs-modal\\\"\\n        class=\\\"modal fade\\\"\\n        tabindex=\\\"-1\\\"\\n        role=\\\"dialog\\\"\\n        aria-labelledby=\\\"resultModalLabel\\\"\\n        aria-hidden=\\\"true\\\"\\n      >\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title\\\">Edit product</h4>\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"close\\\"\\n                (click)=\\\"resultModal.hide()\\\"\\n                aria-label=\\\"Close\\\"\\n              >\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              <form [formGroup]=\\\"resultForm\\\" (ngSubmit)=\\\"ResultSubmit()\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"id\\\">ID</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"soil_test_sample\\\"\\n                    disabled=\\\"true\\\"\\n                    name=\\\"id\\\"\\n                    formControlName=\\\"id\\\"\\n                  />\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"itemName\\\">Item name</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"itemName\\\"\\n                    name=\\\"itemName\\\"\\n                    formControlName=\\\"itemName\\\"\\n                  />\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"price\\\">Price</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"price\\\"\\n                    name=\\\"price\\\"\\n                    formControlName=\\\"price\\\"\\n                    placeholder=\\\"Enter value\\\"\\n                  />\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"unit\\\">Unit</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"unit\\\"\\n                    name=\\\"unit\\\"\\n                    formControlName=\\\"unit\\\"\\n                    placeholder=\\\"Enter value\\\"\\n                  />\\n                </div>\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-secondary\\\"\\n                  (click)=\\\"resultModal.hide()\\\"\\n                >\\n                  Close\\n                </button>\\n                <button\\n                  type=\\\"submit\\\"\\n                  class=\\\"btn btn-primary ml-2\\\"\\n                  [disabled]=\\\"btnLoading\\\"\\n                >\\n                  <span\\n                    *ngIf=\\\"btnLoading\\\"\\n                    class=\\\"spinner-border spinner-border-sm\\\"\\n                    role=\\\"status\\\"\\n                    aria-hidden=\\\"true\\\"\\n                  ></span>\\n                  Save changes\\n                </button>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div\\n        bsModal\\n        #addProductModal=\\\"bs-modal\\\"\\n        class=\\\"modal fade\\\"\\n        tabindex=\\\"-1\\\"\\n        role=\\\"dialog\\\"\\n        aria-labelledby=\\\"productModalLabel\\\"\\n        aria-hidden=\\\"true\\\"\\n      >\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title\\\">Add product</h4>\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"close\\\"\\n                (click)=\\\"addProductModal.hide()\\\"\\n                aria-label=\\\"Close\\\"\\n              >\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              <form [formGroup]=\\\"productForm\\\" (ngSubmit)=\\\"ProductSubmit()\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"itemName\\\">Item name</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"itemName\\\"\\n                    name=\\\"itemName\\\"\\n                    formControlName=\\\"itemName\\\"\\n                  />\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"price\\\">Price</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"price\\\"\\n                    name=\\\"price\\\"\\n                    formControlName=\\\"price\\\"\\n                    placeholder=\\\"Enter value\\\"\\n                  />\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"unit\\\">Unit</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"unit\\\"\\n                    name=\\\"unit\\\"\\n                    formControlName=\\\"unit\\\"\\n                    placeholder=\\\"Enter value\\\"\\n                  />\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"Image\\\">Image</label>\\n                  <input\\n                    type=\\\"file\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"Image\\\"\\n                    accept=\\\".jpg,.jpeg,.JPEG,.png\\\"\\n                    name=\\\"Image\\\"\\n                    (change)=\\\"onChange($event)\\\"\\n                    formControlName=\\\"Image\\\"\\n                    placeholder=\\\"Choose image\\\"\\n                  />\\n                </div>\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-secondary\\\"\\n                  (click)=\\\"addProductModal.hide()\\\"\\n                >\\n                  Close\\n                </button>\\n                <button\\n                  type=\\\"submit\\\"\\n                  class=\\\"btn btn-primary ml-2\\\"\\n                  [disabled]=\\\"btnLoading || !productForm.valid\\\"\\n                >\\n                  <span\\n                    *ngIf=\\\"btnLoading\\\"\\n                    class=\\\"spinner-border spinner-border-sm\\\"\\n                    role=\\\"status\\\"\\n                    aria-hidden=\\\"true\\\"\\n                  ></span>\\n                  Save changes\\n                </button>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div\\n      class=\\\"card-header\\\"\\n      style=\\\"display: flex; justify-content: space-between\\\"\\n    >\\n\\n      <h2>Users</h2>\\n\\n      <div>\\n        <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-outline-primary\\\"\\n            data-toggle=\\\"modal\\\"\\n            (click)=\\\"downloadExcel()\\\"\\n          >\\n            Download excel\\n          </button>\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"btn btn-primary\\\"\\n        data-toggle=\\\"modal\\\"\\n        (click)=\\\"commentModal.show()\\\"\\n      >\\n        Add New User\\n      </button>\\n      </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <ag-grid-angular\\n            #agGrid\\n            style=\\\"width: 100%; height: 65vh\\\"\\n            id=\\\"myGrid\\\"\\n            class=\\\"ag-theme-alpine\\\"\\n            [columnDefs]=\\\"columnDefs\\\"\\n            [rowData]=\\\"rowData\\\"\\n            [rowSelection]=\\\"rowSelection\\\"\\n            (gridReady)=\\\"onGridReady($event)\\\"\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\n            animateRows=\\\"true\\\"\\n          >\\n          </ag-grid-angular>\\n          <span class=\\\"float-left mt-3\\\"\\n            >{{ from }} to {{ to }} of {{ meta?.pagination?.total }}</span\\n          >\\n          <button\\n            type=\\\"button\\\"\\n            [disabled]=\\\"disableNextButton\\\"\\n            class=\\\"btn btn-primary float-right m-2\\\"\\n            (click)=\\\"loadNext()\\\"\\n          >\\n            Next\\n          </button>\\n          <span class=\\\"float-right mt-3\\\"\\n            >Page {{ meta?.pagination?.page }} of\\n            {{ meta?.pagination?.pageCount }}</span\\n          >\\n          <button\\n            type=\\\"button\\\"\\n            [disabled]=\\\"disablePrevButton\\\"\\n            class=\\\"btn btn-primary float-right m-2\\\"\\n            (click)=\\\"loadPrev()\\\"\\n          >\\n            Prev\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div\\n  bsModal\\n  #commentModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add User</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"commentModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"commentForm\\\" (ngSubmit)=\\\"formSubmit()\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"Name\\\">Name</label>\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"Name\\\"\\n                  name=\\\"Name\\\"\\n                  formControlName=\\\"Name\\\"\\n                  placeholder=\\\"Enter  Name\\\"\\n                />\\n                <div\\n                  *ngIf=\\\"f.Name.touched && f.Name.invalid\\\"\\n                  class=\\\"text-danger\\\"\\n                >\\n                  <div *ngIf=\\\"f.Name.errors.required\\\">Name is required.</div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"username\\\">Username</label>\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"username\\\"\\n                  name=\\\"username\\\"\\n                  formControlName=\\\"username\\\"\\n                  placeholder=\\\"Enter username\\\"\\n                />\\n                <div\\n                  *ngIf=\\\"f.username.touched && f.username.invalid\\\"\\n                  class=\\\"text-danger\\\"\\n                >\\n                  <div *ngIf=\\\"f.username.errors.required\\\">\\n                    Username is required.\\n                  </div>\\n                  <div *ngIf=\\\"f.username.errors.minlength\\\">\\n                    Username should have minimum 3 characters.\\n                  </div>\\n                  <div *ngIf=\\\"f.username.errors.cannotContainSpace\\\">\\n                    Username cannot contain space.\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"password\\\">Password</label>\\n                <input\\n                  type=\\\"password\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"password\\\"\\n                  name=\\\"password\\\"\\n                  formControlName=\\\"password\\\"\\n                  placeholder=\\\"Enter password\\\"\\n                />\\n                <div\\n                  *ngIf=\\\"f.password.touched && f.password.invalid\\\"\\n                  class=\\\"text-danger\\\"\\n                >\\n                  <div *ngIf=\\\"f.password.errors.required\\\">\\n                    Password is required.\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"UserType\\\">User type</label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"UserType\\\"\\n                  required\\n                  ngModel\\n                  name=\\\"UserType\\\"\\n                  formControlName=\\\"UserType\\\"\\n                >\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option value=\\\"Farmer\\\">Farmer</option>\\n                  <option value=\\\"Retailer\\\">Retailer</option>\\n                  <option value=\\\"Agronomist\\\">Agronomist</option>\\n                  <option value=\\\"Admin\\\">Admin</option>\\n                  <option value=\\\"Marketing\\\">Marketing</option>\\n                </select>\\n                <div\\n                  *ngIf=\\\"f.UserType.touched && f.UserType.invalid\\\"\\n                  class=\\\"text-danger\\\"\\n                >\\n                  <div *ngIf=\\\"f.UserType.errors.required\\\">\\n                    User type is required.\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"ContactNumber\\\">Contact number</label>\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"ContactNumber\\\"\\n                  name=\\\"ContactNumber\\\"\\n                  formControlName=\\\"ContactNumber\\\"\\n                  placeholder=\\\"Enter contact number\\\"\\n                />\\n                <div\\n                  *ngIf=\\\"f.ContactNumber.touched && f.ContactNumber.invalid\\\"\\n                  class=\\\"text-danger\\\"\\n                >\\n                  <div *ngIf=\\\"f.ContactNumber.errors.required\\\">\\n                    Contact number is required.\\n                  </div>\\n                </div>\\n              </div>\\n              <!-- <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\">E-mail</label>\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"email\\\"\\n                  name=\\\"email\\\"\\n                  formControlName=\\\"email\\\"\\n                  placeholder=\\\"Enter email\\\"\\n                />\\n              </div> -->\\n            </div>\\n            <div class=\\\"col\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"state\\\">State</label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"state\\\"\\n                  required\\n                  ngModel\\n                  (change)=\\\"filterLGA($event)\\\"\\n                  name=\\\"state\\\"\\n                  formControlName=\\\"state\\\"\\n                >\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\n                    {{ item.attributes.Name }}\\n                  </option>\\n                </select>\\n                <div\\n                  *ngIf=\\\"f.state.touched && f.state.invalid\\\"\\n                  class=\\\"text-danger\\\"\\n                >\\n                  <div *ngIf=\\\"f.state.errors.required\\\">State is required.</div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"lga\\\">LGA</label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"lga\\\"\\n                  required\\n                  ngModel\\n                  (change)=\\\"filterVillage($event)\\\"\\n                  name=\\\"lga\\\"\\n                  formControlName=\\\"lga\\\"\\n                >\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\n                    {{ item.attributes.Name }}\\n                  </option>\\n                </select>\\n                <div *ngIf=\\\"f.lga.touched && f.lga.invalid\\\" class=\\\"text-danger\\\">\\n                  <div *ngIf=\\\"f.lga.errors.required\\\">LGA is required.</div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"village\\\">Village</label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"village\\\"\\n                  required\\n                  ngModel\\n                  name=\\\"village\\\"\\n                  formControlName=\\\"village\\\"\\n                >\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option *ngFor=\\\"let item of Villages\\\" value=\\\"{{ item.id }}\\\">\\n                    {{ item.attributes.Name }}\\n                  </option>\\n                </select>\\n                <div\\n                  *ngIf=\\\"f.village.touched && f.village.invalid\\\"\\n                  class=\\\"text-danger\\\"\\n                >\\n                  <div *ngIf=\\\"f.village.errors.required\\\">\\n                    Village is required.\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"Gender\\\">Gender</label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"Gender\\\"\\n                  required\\n                  ngModel\\n                  name=\\\"Gender\\\"\\n                  formControlName=\\\"Gender\\\"\\n                >\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option value=\\\"Male\\\">Male</option>\\n                  <option value=\\\"Female\\\">Female</option>\\n                </select>\\n                <div\\n                  *ngIf=\\\"f.Gender.touched && f.Gender.invalid\\\"\\n                  class=\\\"text-danger\\\"\\n                >\\n                  <div *ngIf=\\\"f.Gender.errors.required\\\">\\n                    Gender is required.\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"Age\\\">Age</label>\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"Age\\\"\\n                  name=\\\"Age\\\"\\n                  formControlName=\\\"Age\\\"\\n                  placeholder=\\\"Enter age\\\"\\n                />\\n                <div *ngIf=\\\"f.Age.touched && f.Age.invalid\\\" class=\\\"text-danger\\\">\\n                  <div *ngIf=\\\"f.Age.errors.required\\\">Age is required.</div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"commentModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !commentForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Save changes\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { Component, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { DataService } from \"../../data.service\";\nimport { UsersColumn } from \"../../constants/columnMetadata\";\nimport { filter } from \"rxjs/operators\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\nimport { UsernameValidator } from \"../../utils/username.validator\";\nimport { environment } from \"../../../environments/environment\";\n\n@Component({\n  templateUrl: \"users.component.html\",\n})\nexport class UsersComponent {\n  rowSelection: string;\n  constructor(\n    public dataservice: DataService,\n    public router: Router,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) {\n    this.columnDefs = [...UsersColumn];\n    this.setForm();\n    this.rowSelection = \"single\";\n  }\n  @ViewChild(\"commentModal\") public commentModal: ModalDirective;\n  @ViewChild(\"detailsModal\") public detailsModal: ModalDirective;\n\n  loading = true;\n  btnLoading = false;\n  disableNextButton = false;\n  disablePrevButton = true;\n  meta;\n  pageSize = 20;\n  from = 1;\n  to = 20;\n  count = 1;\n  columnDefs = [];\n  commentForm;\n  rowData: any = [];\n\n  Villages: any = [];\n  LGA: any = [];\n  Areas: any = [];\n  States: any = [];\n\n  selectedYear: any = new Date().getFullYear();\n  years: any = [];\n  private gridApi;\n  private gridColumnApi;\n  filter: any = {};\n\n  ngOnInit(): void {\n    this.loading = true;\n    console.log(this.router);\n    this.getRetailers();\n    this.getStates();\n  }\n  setForm() {\n    this.commentForm = this.fb.group({\n      UserType: [\"\", Validators.required],\n      username: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(3),\n          UsernameValidator.cannotContainSpace,\n        ],\n      ],\n      email: [\"nodata@email.com\"],\n      password: [\"\", Validators.required],\n      Name: [\"\", Validators.required],\n      Gender: [\"\", Validators.required],\n      Age: [\"\", Validators.required],\n      ContactNumber: [\"\", Validators.required],\n      lga: [\"\", Validators.required],\n      village: [\"\", Validators.required],\n      state: [\"\"],\n    });\n  }\n  get f() {\n    return this.commentForm.controls;\n  }\n  getStates() {\n    this.dataservice.getStates(1, 10000, \"\").valueChanges.subscribe((result: any) => {\n      console.log(\"getStates\", result.data.states.data);\n      this.States = result.data.states.data;\n    });\n  }\n  getLGAs(id?) {\n    this.dataservice.getLGAs(1, 10000, \"\",id).valueChanges.subscribe((result: any) => {\n      console.log(\"getLGAs\", result.data.lgas.data);\n      this.LGA = result.data.lgas.data;\n    });\n  }\n  getAreas(id?) {\n    this.dataservice.getAreas(1, 10000, \"\",id).valueChanges.subscribe((result: any) => {\n      console.log(\"getAreas\", result.data.areas.data);\n      this.Areas = result.data.areas.data;\n    });\n  }\n  getVillages(id?) {\n    this.dataservice.getVillages(1, 10000, \"\", id).valueChanges.subscribe((result: any) => {\n      console.log(\"getVillages\", result.data.villages.data);\n      this.Villages = result.data.villages.data;\n    });\n  }\n  getRetailers() {\n    this.dataservice\n      .getUsers(1, this.pageSize)\n      .valueChanges.subscribe((result: any) => {\n        this.rowData = result.data.usersPermissionsUsers.data;\n        this.meta = result.data.usersPermissionsUsers.meta;\n        if (this.meta?.pagination?.pageCount <= 1) {\n          this.disablePrevButton = true;\n          this.disableNextButton = true;\n        }\n        if (this.meta?.pagination?.total < this.pageSize) {\n          this.to = this.meta?.pagination?.total;\n        }\n      });\n  }\n  downloadExcel() {\n    let resp = {};\n    this.btnLoading = true;\n    this.dataservice\n      .downloadUsers()\n      .subscribe((result: any) => {\n        resp = result.body;\n        console.log(result);\n        if (result.status === 200 && result.body.status == \"Success\") {\n          this.toastr.success(result.body.message);\n          this.btnLoading = false;\n          window.open(`${environment.apiUrl}${result?.body?.path}`, \"_blank\");\n        } else {\n          this.btnLoading = false;\n          this.toastr.error(result.body.message);\n        }\n      });\n  }\n  loadNext() {\n    this.count++;\n    this.disablePrevButton = false;\n    this.from = this.from + this.pageSize;\n    this.to =\n      this.to + this.pageSize > this.meta?.pagination?.total\n        ? this.meta?.pagination?.total\n        : this.to + this.pageSize;\n    if (this.count === this.meta.pagination.pageCount) {\n      this.disableNextButton = true;\n    }\n    this.dataservice\n      .getUsers(this.count, this.pageSize)\n      .valueChanges.subscribe((result: any) => {\n        this.meta = result.data.usersPermissionsUsers.meta;\n        this.rowData = result.data.usersPermissionsUsers.data;\n      });\n  }\n  loadPrev() {\n    this.count--;\n    if (this.count < this.meta.pagination.pageCount) {\n      this.disableNextButton = false;\n    }\n    if (this.count === 1) {\n      this.disablePrevButton = true;\n    }\n    this.from = this.from - this.pageSize;\n    this.to = this.to - this.rowData.length;\n    this.dataservice\n      .getUsers(this.count, this.pageSize)\n      .valueChanges.subscribe((result: any) => {\n        this.meta = result.data.usersPermissionsUsers.meta;\n        this.rowData = result.data.usersPermissionsUsers.data;\n      });\n  }\n  filterLGA(event) {\n    this.getLGAs(event.target.value);\n  }\n  filterVillage(event) {\n    this.getVillages(event.target.value);\n  }\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.gridApi.sizeColumnsToFit();\n  }\n  onRowClicked(event: any) {\n    console.log(\"row\", event.data);\n    // this.router.navigate(\n    //   [\"/cropprices/kp_customer_details\", event.data.id, this.router.url],\n    //   {\n    //     state: { data: event.data },\n    //   }\n    // );\n  }\n  onSelectionChanged(event: any) {\n    var selectedRows = this.gridApi.getSelectedRows();\n    console.log(selectedRows, event);\n    this.router.navigate([\"/users/user_details\", selectedRows[0].id], {\n      state: { data: selectedRows },\n    });\n  }\n  openModal(data: any) {\n    this.detailsModal.show();\n  }\n  formSubmit() {\n    this.btnLoading = true;\n    console.log(this.commentForm.value);\n    let resp = {};\n    this.dataservice.createRetailer(this.commentForm.value).subscribe(\n      (result: any) => {\n        resp = result;\n        console.log(\"response\", result);\n        if (result) {\n          this.toastr.success(\"User added successfully!\");\n          this.btnLoading = false;\n          this.commentModal.hide();\n          this.setForm();\n          this.getRetailers();\n        } else {\n          this.toastr.error(\"Failed. Please check the fields!\");\n          this.btnLoading = false;\n        }\n      },\n      (error) => {\n        this.btnLoading = false;\n      }\n    );\n  }\n}\n"],"sourceRoot":"webpack:///"}