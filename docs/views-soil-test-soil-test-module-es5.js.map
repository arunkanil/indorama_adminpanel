{"version":3,"sources":["webpack:///src/app/views/soil-test/soil-test.module.ts","webpack:///src/app/views/soil-test/soil-home.component.ts","webpack:///src/app/views/soil-test/soil-detail.component.html","webpack:///src/app/views/soil-test/soil-test-routing.module.ts","webpack:///src/app/views/soil-test/soil-home.component.html","webpack:///src/app/views/soil-test/soil-detail.component.ts"],"names":["SoilTestModule","imports","withComponents","forRoot","declarations","SoilHomeComponent","dataservice","router","fb","toastr","loading","btnLoading","disableNextButton","disablePrevButton","pageSize","from","to","count","columnDefs","rowData","rowSelection","getLists","getsoilTests","valueChanges","subscribe","result","console","log","data","soilTests","meta","pagination","pageCount","total","resp","downloadSoilTests","body","status","success","message","window","open","apiUrl","path","error","length","params","gridApi","api","gridColumnApi","columnApi","event","selectedRows","getSelectedRows","navigate","id","state","template","routes","children","redirectTo","component","roles","title","SoilTestRoutingModule","forChild","exports","SoilTestDetailComponent","activatedRouter","details","dateConverterMin","dateConverter","users","LGA","Areas","Farmers","States","Crops","agentForm","group","ContactNumber","required","ReasonForSoilTest","Status","nutrient","Farmer","area","lga","resultForm","soil_test_sample","phObserved","OrganicCarbonObserved","TotalNitrogenObserved","PhosphorousObserved","PotassiumObserved","CalciumObserved","MagnesiumObserved","ZincObserved","SulphurObserved","IronObserved","CopperObserved","BoronObserved","ManganeseObserved","RecommendedUreaQty","RecommendedNPKQty","getAreas","getCrops","getLGAs","getStates","getFarmers","getTest","getsingleSoilTests","soilTest","attributes","crops","states","lgas","areas","getUsers","undefined","usersPermissionsUsers","date","Date","flag","resultModal","show","soil_test_results","value","UpdateSoilTest","updateSoilTest","myModal","hide","target","UpdateSoilTestResult","updateSoilTestResult","AddSoilTestResult","createSoilTestResult"],"mappings":"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","file":"views-soil-test-soil-test-module-es5.js","sourcesContent":["// Angular\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\r\nimport { NgModule } from '@angular/core';\r\n\r\n// import { TypographyComponent } from './typography.component';\r\n\r\n// Theme Routing\r\nimport { SoilTestRoutingModule } from './soil-test-routing.module';\r\nimport { SoilHomeComponent } from './soil-home.component';\r\nimport { SoilTestDetailComponent } from './soil-detail.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SoilTestRoutingModule,\r\n    ReactiveFormsModule,\r\n    AgGridModule.withComponents([]),\r\n    ModalModule.forRoot(),\r\n    CarouselModule.forRoot(),\r\n    FormsModule,\r\n  ],\r\n  declarations: [\r\n    SoilHomeComponent,\r\n    SoilTestDetailComponent,\r\n  ]\r\n})\r\nexport class SoilTestModule { }\r\n","import { Component, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { ToastrService } from 'ngx-toastr';\nimport { DataService } from '../../data.service';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { SoilAnalysisColumns } from '../../constants/columnMetadata';\nimport { environment } from '../../../environments/environment';\n\n@Component({\n  templateUrl: 'soil-home.component.html',\n})\nexport class SoilHomeComponent {\n  rowSelection: string;\n  constructor(\n    public dataservice: DataService,\n    private router: Router,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n    ) {\n    this.columnDefs = [...SoilAnalysisColumns];\n    this.rowSelection = 'single';\n  }\n\n  @ViewChild('myModal') public myModal: ModalDirective;\n  loading = true;\n  btnLoading = false;\n  disableNextButton = false;\n  disablePrevButton = true;\n  meta;\n  pageSize = 20;\n  from = 1;\n  to = 20;\n  count = 1;\n  columnDefs = [];\n  rowData: any = [];\n  private gridApi;\n  private gridColumnApi;\n\n  ngOnInit(): void {\n    this.getLists();\n  }\n  getLists() {\n    this.loading = true;\n    this.dataservice.getsoilTests(1, this.pageSize).valueChanges.subscribe((result: any) => {\n      console.log('getCustomers', result.data.soilTests.data);\n      this.rowData = result.data.soilTests.data;\n      this.meta = result.data.soilTests.meta;\n      if (this.meta?.pagination?.pageCount <= 1) {\n        this.disablePrevButton = true;\n        this.disableNextButton = true;\n      }\n      if (this.meta?.pagination?.total < this.pageSize) {\n        this.to = this.meta?.pagination?.total;\n      }\n    });\n  }\n  downloadExcel() {\n    let resp = {};\n    this.btnLoading = true;\n    this.dataservice\n      .downloadSoilTests()\n      .subscribe((result: any) => {\n        resp = result.body;\n        console.log(result);\n        if (result.status === 200 && result.body.status == 'Success') {\n          this.toastr.success(result.body.message);\n          this.btnLoading = false;\n          window.open(`${environment.apiUrl}${result?.body?.path}`, '_blank');\n        } else {\n          this.btnLoading = false;\n          this.toastr.error(result.body.message);\n        }\n      });\n  }\n  loadNext() {\n    this.count++;\n     this.disablePrevButton = false;\n    this.from = this.from + this.pageSize;\n    this.to =\n      this.to + this.pageSize > this.meta?.pagination?.total\n        ? this.meta?.pagination?.total\n        : this.to + this.pageSize;\n    if (this.count === this.meta.pagination.pageCount) {\n      this.disableNextButton = true;\n    }\n    this.dataservice\n      .getsoilTests(this.count, this.pageSize)\n      .valueChanges.subscribe((result: any) => {\n        this.meta = result.data.soilTests.meta;\n        this.rowData = result.data.soilTests.data;\n      });\n  }\n  loadPrev() {\n    this.count--;\n    if (this.count < this.meta.pagination.pageCount) {\n      this.disableNextButton = false;\n    }\n    if (this.count === 1) {\n      this.disablePrevButton = true;\n    }\n    this.from = this.from - this.pageSize;\n    this.to = this.to - this.rowData.length;\n    this.dataservice\n      .getsoilTests(this.count, this.pageSize)\n      .valueChanges.subscribe((result: any) => {\n        this.meta = result.data.soilTests.meta;\n        this.rowData = result.data.soilTests.data;\n      });\n  }\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n  }\n  onSelectionChanged(event) {\n    let selectedRows = this.gridApi.getSelectedRows();\n    console.log(selectedRows);\n    this.router.navigate(['/soiltest/test_details', selectedRows[0].id], {\n      state: { data: selectedRows },\n    });\n  }\n}\n","export default \"<div class=\\\"animated fadeIn\\\">\\n  <!-- <div\\n    bsModal\\n    #deleteModal=\\\"bs-modal\\\"\\n    class=\\\"modal fade\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"dialog\\\"\\n    aria-labelledby=\\\"myModalLabel\\\"\\n    aria-hidden=\\\"true\\\"\\n  >\\n    <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-body text-center\\\">\\n          Do you want to delete this request?\\n        </div>\\n        <div class=\\\"modal-footer justify-content-around\\\">\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"deleteModal.hide()\\\"\\n          >\\n            No! Cancel.\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deleteAgent()\\\">\\n            Yes! Delete.\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div> -->\\n  <div class=\\\"card\\\">\\n    <div\\n      class=\\\"card-header\\\"\\n      style=\\\"display: flex; justify-content: space-between\\\"\\n    >\\n      <h2>Soil Test Details</h2>\\n      <span>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-primary\\\"\\n          data-toggle=\\\"modal\\\"\\n          (click)=\\\"myModal.show()\\\"\\n        >\\n          Edit\\n        </button>\\n        <!-- <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-danger\\\"\\n          data-toggle=\\\"modal\\\"\\n          (click)=\\\"deleteModal.show()\\\"\\n        >\\n          Delete\\n        </button> -->\\n      </span>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n          <div class=\\\"row\\\">\\n            <div style=\\\"display: flex; justify-content: space-between\\\">\\n              <h4>Request details</h4>\\n            </div>\\n            <table class=\\\"table table-striped\\\">\\n              <tbody>\\n                <tr>\\n                  <td>ID</td>\\n                  <td>STR{{ details?.id }}</td>\\n                </tr>\\n                <!-- <tr>\\n                  <td>Test ID</td>\\n                  <td>{{ details?.attributes?.SoilTestID }}</td>\\n                </tr> -->\\n                <tr>\\n                  <td>Farmer</td>\\n                  <td>\\n                    {{ details?.attributes?.Farmer?.data.attributes.Name }}\\n                  </td>\\n                </tr>\\n                <!-- <tr>\\n                  <td>Email</td>\\n                  <td>\\n                    {{ details?.attributes?.Farmer?.data.attributes.email }}\\n                  </td>\\n                </tr> -->\\n                <tr>\\n                  <td>Contact number</td>\\n                  <td>{{ details?.attributes?.ContactNumber }}</td>\\n                </tr>\\n                <!-- <tr>\\n                  <td>Agronomist</td>\\n                  <td>\\n                    {{\\n                      details?.attributes?.Farmer?.data?.attributes?.agronomist\\n                        ?.data?.attributes?.users_permissions_user?.data\\n                        ?.attributes?.Name\\n                    }}\\n                  </td>\\n                </tr> -->\\n                <tr>\\n                  <td>Reason for testing</td>\\n                  <td>{{ details?.attributes?.ReasonForSoilTest }}</td>\\n                </tr>\\n                <tr>\\n                  <td>Preferred nutrient</td>\\n                  <td>{{ details?.attributes?.nutrient }}</td>\\n                </tr>\\n                <tr>\\n                  <td>City</td>\\n                  <td>{{ details?.attributes?.area?.data.attributes.Name }}</td>\\n                </tr>\\n                <tr>\\n                  <td>Postal code</td>\\n                  <td>\\n                    {{ details?.attributes?.area?.data.attributes.PostalCode }}\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>LGA</td>\\n                  <td>{{ details?.attributes?.lga?.data.attributes.Name }}</td>\\n                </tr>\\n                <tr>\\n                  <td>State</td>\\n                  <td>\\n                    {{\\n                      details?.attributes?.lga?.data?.attributes?.state?.data\\n                        ?.attributes?.Name\\n                    }}\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Preferred date for sample collection</td>\\n                  <td>\\n                    {{\\n                      dateConverterMin(\\n                        details?.attributes?.PreferredCollectionDate\\n                      )\\n                    }}\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Created at</td>\\n                  <td>{{ dateConvertor(details?.attributes?.createdAt) }}</td>\\n                </tr>\\n                <tr>\\n                  <td>Last updated</td>\\n                  <td>{{ dateConvertor(details?.attributes?.updatedAt) }}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n          <h4>Samples</h4>\\n          <div class=\\\"row\\\">\\n            <div\\n              class=\\\"col-4\\\"\\n              *ngFor=\\\"let item of details?.attributes?.soil_test_samples?.data\\\"\\n            >\\n              <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                  <div style=\\\"display: flex; justify-content: space-between\\\">\\n                    <h5 class=\\\"card-title\\\">\\n                      Sample ID : {{ item?.attributes?.SampleID }}\\n                    </h5>\\n                    <button\\n                      type=\\\"button\\\"\\n                      *ngIf=\\\"item?.attributes?.soil_test_results?.data[0]\\\"\\n                      class=\\\"btn btn-primary\\\"\\n                      data-toggle=\\\"modal\\\"\\n                      (click)=\\\"openModal(item, 'edit')\\\"\\n                    >\\n                      Edit results\\n                    </button>\\n                    <button\\n                      type=\\\"button\\\"\\n                      *ngIf=\\\"!item?.attributes?.soil_test_results?.data[0]\\\"\\n                      class=\\\"btn btn-primary\\\"\\n                      data-toggle=\\\"modal\\\"\\n                      (click)=\\\"openModal(item, 'add')\\\"\\n                    >\\n                      Add results\\n                    </button>\\n                  </div>\\n                  <p class=\\\"card-text\\\">\\n                    Quantity of samples :\\n                    {{ item?.attributes?.QuantityOfSamples }}\\n                  </p>\\n                  <p class=\\\"card-text\\\">\\n                    Created on :\\n                    {{ dateConvertor(item?.attributes?.createdAt) }}\\n                  </p>\\n                  <p class=\\\"card-text\\\">\\n                    Added by :\\n                    {{\\n                      item?.attributes?.SampleAddedBy?.data?.attributes?.Name\\n                    }}\\n                  </p>\\n                  <p>Result updated on : {{dateConvertor(item?.attributes?.soil_test_results?.data[0]\\n                    ?.attributes?.updatedAt)}}</p>\\n                  <table class=\\\"table\\\">\\n                    <tbody>\\n                      <tr>\\n                        <th>Parameter</th>\\n                        <th>Value observed</th>\\n                      </tr>\\n                      <tr>\\n                        <td>pH</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.phObserved\\n                          }}\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Organic Carbon</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.OrganicCarbonObserved\\n                          }}\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Total Nitrogen</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.TotalNitrogenObserved\\n                          }}\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Phosphorous</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.PhosphorousObserved\\n                          }}\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Pottasium</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.PotassiumObserved\\n                          }}\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Calcium</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.CalciumObserved\\n                          }}\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Magnesium</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.MagnesiumObserved\\n                          }}\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Zinc</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.ZincObserved\\n                          }}\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Sulphur</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.SulphurObserved\\n                          }}\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Iron</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.IronObserved\\n                          }}\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Copper</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.CopperObserved\\n                          }}\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Boron</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.BoronObserved\\n                          }}\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Manganese</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.ManganeseObserved\\n                          }}\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Recommended Urea Qty</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.RecommendedUreaQty\\n                          }}\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Recommended NPK Qty</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.RecommendedNPKQty\\n                          }}\\n                        </td>\\n                      </tr>\\n                    </tbody>\\n                  </table>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <!-- <div class=\\\"col\\\">\\n          <div style=\\\"display: flex; justify-content: space-between\\\">\\n            <h4>Test Results</h4>\\n          </div>\\n          <table class=\\\"table\\\" *ngFor=\\\"let item of details.attributes.soil_test_samples.data\\\">\\n            <tbody>\\n              <tr>\\n                <th>Parameter</th>\\n                <th>Value observed</th>\\n              </tr>\\n              <tr>\\n                <td>pH</td>\\n                <td>{{ item?.attributes?.soil_test_results?.data[0].attributes.phObserved }}</td>\\n              </tr>\\n              <tr>\\n                <td>Organic Carbon</td>\\n                <td>{{ item?.attributes?.soil_test_results?.data[0].attributes.OrganicCarbonObserved }}</td>\\n              </tr>\\n              <tr>\\n                <td>Total Nitrogen</td>\\n                <td>{{ item?.attributes?.soil_test_results?.data[0].attributes.TotalNitrogenObserved }}</td>\\n              </tr>\\n              <tr>\\n                <td>Phosphorous</td>\\n                <td>{{ item?.attributes?.soil_test_results?.data[0].attributes.PhosphorousObserved }}</td>\\n              </tr>\\n              <tr>\\n                <td>Pottasium</td>\\n                <td>{{ item?.attributes?.soil_test_results?.data[0].attributes.PotassiumObserved }}</td>\\n              </tr>\\n              <tr>\\n                <td>Calcium</td>\\n                <td>{{ item?.attributes?.soil_test_results?.data[0].attributes.CalciumObserved }}</td>\\n              </tr>\\n              <tr>\\n                <td>Magnesium</td>\\n                <td>{{ item?.attributes?.soil_test_results?.data[0].attributes.MagnesiumObserved }}</td>\\n              </tr>\\n              <tr>\\n                <td>Zinc</td>\\n                <td>{{ item?.attributes?.soil_test_results?.data[0].attributes.ZincObserved }}</td>\\n              </tr>\\n              <tr>\\n                <td>Sulphur</td>\\n                <td>{{ item?.attributes?.soil_test_results?.data[0].attributes.SulphurObserved }}</td>\\n              </tr>\\n              <tr>\\n                <td>Iron</td>\\n                <td>{{ item?.attributes?.soil_test_results?.data[0].attributes.IronObserved }}</td>\\n              </tr>\\n              <tr>\\n                <td>Copper</td>\\n                <td>{{ item?.attributes?.soil_test_results?.data[0].attributes.CopperObserved }}</td>\\n              </tr>\\n              <tr>\\n                <td>Boron</td>\\n                <td>{{ item?.attributes?.soil_test_results?.data[0].attributes.BoronObserved }}</td>\\n              </tr>\\n              <tr>\\n                <td>Manganese</td>\\n                <td>{{ item?.attributes?.soil_test_results?.data[0].attributes.ManganeseObserved }}</td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-primary\\\"\\n            data-toggle=\\\"modal\\\"\\n            (click)=\\\"commentModal.show()\\\"\\n          >\\n            Add Comment\\n          </button>\\n        </div> -->\\n        </div>\\n      </div>\\n      <div\\n        bsModal\\n        #myModal=\\\"bs-modal\\\"\\n        class=\\\"modal fade\\\"\\n        tabindex=\\\"-1\\\"\\n        role=\\\"dialog\\\"\\n        aria-labelledby=\\\"myModalLabel\\\"\\n        aria-hidden=\\\"true\\\"\\n      >\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title\\\">Edit details</h4>\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"close\\\"\\n                (click)=\\\"myModal.hide()\\\"\\n                aria-label=\\\"Close\\\"\\n              >\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              <form [formGroup]=\\\"agentForm\\\" (ngSubmit)=\\\"FormSubmit()\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"Farmer\\\">Farmer</label>\\n                  <select\\n                    class=\\\"form-control\\\"\\n                    id=\\\"Farmer\\\"\\n                    required\\n                    ngModel\\n                    name=\\\"Farmer\\\"\\n                    formControlName=\\\"Farmer\\\"\\n                  >\\n                    <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                    <option *ngFor=\\\"let item of Farmers\\\" value=\\\"{{ item.id }}\\\">\\n                      {{ item.attributes.Name }}\\n                    </option>\\n                  </select>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label>Contact Number</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"ContactNumber\\\"\\n                    name=\\\"ContactNumber\\\"\\n                    formControlName=\\\"ContactNumber\\\"\\n                    placeholder=\\\"Enter contact number\\\"\\n                  />\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"ReasonForSoilTest\\\">Reason for test</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"ReasonForSoilTest\\\"\\n                    name=\\\"ReasonForSoilTest\\\"\\n                    formControlName=\\\"ReasonForSoilTest\\\"\\n                    placeholder=\\\"Enter contact number\\\"\\n                  />\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"nutrient\\\">Testing for</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"nutrient\\\"\\n                    name=\\\"nutrient\\\"\\n                    formControlName=\\\"nutrient\\\"\\n                    placeholder=\\\"Enter nutrient\\\"\\n                  />\\n                </div>\\n                <!-- <div class=\\\"form-group\\\">\\n                  <label for=\\\"PreferredCollectionDate\\\"\\n                    >Preferred Collection Date</label\\n                  >\\n                  <input\\n                    type=\\\"datetime-local\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"PreferredCollectionDate\\\"\\n                    name=\\\"PreferredCollectionDate\\\"\\n                    formControlName=\\\"PreferredCollectionDate\\\"\\n                    placeholder=\\\"Enter PreferredCollectionDate\\\"\\n                  />\\n                </div> -->\\n\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"Status\\\">Status</label>\\n                  <select\\n                    class=\\\"form-control\\\"\\n                    id=\\\"Status\\\"\\n                    required\\n                    ngModel\\n                    name=\\\"Status\\\"\\n                    formControlName=\\\"Status\\\"\\n                  >\\n                    <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                    <option value=\\\"NEW_REQUEST\\\">NEW_REQUEST</option>\\n                    <option value=\\\"SAMPLE_COLLECTED\\\">SAMPLE_COLLECTED</option>\\n                    <option value=\\\"RESULTS_ADDED\\\">RESULTS_ADDED</option>\\n                  </select>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"state\\\">State</label>\\n                  <select\\n                    class=\\\"form-control\\\"\\n                    id=\\\"state\\\"\\n                    required\\n                    ngModel\\n                    (change)=\\\"filterLGA($event)\\\"\\n                    name=\\\"state\\\"\\n                    formControlName=\\\"state\\\"\\n                  >\\n                    <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                    <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\n                      {{ item.attributes.Name }}\\n                    </option>\\n                  </select>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"lga\\\">LGA</label>\\n                  <select\\n                    class=\\\"form-control\\\"\\n                    id=\\\"lga\\\"\\n                    required\\n                    (change)=\\\"filterArea($event)\\\"\\n                    ngModel\\n                    name=\\\"lga\\\"\\n                    formControlName=\\\"lga\\\"\\n                  >\\n                    <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                    <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\n                      {{ item.attributes.Name }}\\n                    </option>\\n                  </select>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"area\\\">City</label>\\n                  <select\\n                    class=\\\"form-control\\\"\\n                    id=\\\"area\\\"\\n                    required\\n                    ngModel\\n                    name=\\\"area\\\"\\n                    formControlName=\\\"area\\\"\\n                  >\\n                    <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                    <option *ngFor=\\\"let item of Areas\\\" value=\\\"{{ item.id }}\\\">\\n                      {{ item.attributes.Name }}\\n                    </option>\\n                  </select>\\n                </div>\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-secondary\\\"\\n                  (click)=\\\"myModal.hide()\\\"\\n                >\\n                  Close\\n                </button>\\n                <button\\n                  type=\\\"submit\\\"\\n                  class=\\\"btn btn-primary ml-2\\\"\\n                  [disabled]=\\\"btnLoading || !agentForm.valid\\\"\\n                >\\n                  <span\\n                    *ngIf=\\\"btnLoading\\\"\\n                    class=\\\"spinner-border spinner-border-sm\\\"\\n                    role=\\\"status\\\"\\n                    aria-hidden=\\\"true\\\"\\n                  ></span>\\n                  Save changes\\n                </button>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div\\n        bsModal\\n        #resultModal=\\\"bs-modal\\\"\\n        class=\\\"modal fade\\\"\\n        tabindex=\\\"-1\\\"\\n        role=\\\"dialog\\\"\\n        aria-labelledby=\\\"resultModalLabel\\\"\\n        aria-hidden=\\\"true\\\"\\n      >\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title\\\">Add/Edit result</h4>\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"close\\\"\\n                (click)=\\\"resultModal.hide()\\\"\\n                aria-label=\\\"Close\\\"\\n              >\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              <form [formGroup]=\\\"resultForm\\\" (ngSubmit)=\\\"ResultSubmit()\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"soil_test_sample\\\">Soil Test ID</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"soil_test_sample\\\"\\n                        disabled=\\\"true\\\"\\n                        name=\\\"soil_test_sample\\\"\\n                        formControlName=\\\"soil_test_sample\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"phObserved\\\">ph Observed</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"phObserved\\\"\\n                        name=\\\"phObserved\\\"\\n                        formControlName=\\\"phObserved\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"OrganicCarbonObserved\\\"\\n                        >Organic Carbon Observed</label\\n                      >\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"OrganicCarbonObserved\\\"\\n                        name=\\\"OrganicCarbonObserved\\\"\\n                        formControlName=\\\"OrganicCarbonObserved\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"TotalNitrogenObserved\\\"\\n                        >Total Nitrogen Observed</label\\n                      >\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"TotalNitrogenObserved\\\"\\n                        name=\\\"TotalNitrogenObserved\\\"\\n                        formControlName=\\\"TotalNitrogenObserved\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"ManganeseObserved\\\">Manganese Observed</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"ManganeseObserved\\\"\\n                        name=\\\"ManganeseObserved\\\"\\n                        formControlName=\\\"ManganeseObserved\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"PhosphorousObserved\\\"\\n                        >Phosphorous Observed</label\\n                      >\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"PhosphorousObserved\\\"\\n                        name=\\\"PhosphorousObserved\\\"\\n                        formControlName=\\\"PhosphorousObserved\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"PotassiumObserved\\\">Potassium Observed</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"PotassiumObserved\\\"\\n                        name=\\\"PotassiumObserved\\\"\\n                        formControlName=\\\"PotassiumObserved\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"CalciumObserved\\\">Calcium Observed</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"CalciumObserved\\\"\\n                        name=\\\"CalciumObserved\\\"\\n                        formControlName=\\\"CalciumObserved\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"MagnesiumObserved\\\">Magnesium Observed</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"MagnesiumObserved\\\"\\n                        name=\\\"MagnesiumObserved\\\"\\n                        formControlName=\\\"MagnesiumObserved\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"ZincObserved\\\">Zinc Observed</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"ZincObserved\\\"\\n                        name=\\\"ZincObserved\\\"\\n                        formControlName=\\\"ZincObserved\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"SulphurObserved\\\">Sulphur Observed</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"SulphurObserved\\\"\\n                        name=\\\"SulphurObserved\\\"\\n                        formControlName=\\\"SulphurObserved\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"IronObserved\\\">Iron Observed</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"IronObserved\\\"\\n                        name=\\\"IronObserved\\\"\\n                        formControlName=\\\"IronObserved\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"CopperObserved\\\">Copper Observed</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"CopperObserved\\\"\\n                        name=\\\"CopperObserved\\\"\\n                        formControlName=\\\"CopperObserved\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"BoronObserved\\\">Boron Observed</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"BoronObserved\\\"\\n                        name=\\\"BoronObserved\\\"\\n                        formControlName=\\\"BoronObserved\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"RecommendedUreaQty\\\">Recommended Urea Qty</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"RecommendedUreaQty\\\"\\n                        name=\\\"RecommendedUreaQty\\\"\\n                        formControlName=\\\"RecommendedUreaQty\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"RecommendedNPKQty\\\">Recommended NPK Qty</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"RecommendedNPKQty\\\"\\n                        name=\\\"RecommendedNPKQty\\\"\\n                        formControlName=\\\"RecommendedNPKQty\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                  </div>\\n                </div>\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-secondary\\\"\\n                  (click)=\\\"resultModal.hide()\\\"\\n                >\\n                  Close\\n                </button>\\n                <button\\n                  type=\\\"submit\\\"\\n                  class=\\\"btn btn-primary ml-2\\\"\\n                  [disabled]=\\\"btnLoading\\\"\\n                >\\n                  <span\\n                    *ngIf=\\\"btnLoading\\\"\\n                    class=\\\"spinner-border spinner-border-sm\\\"\\n                    role=\\\"status\\\"\\n                    aria-hidden=\\\"true\\\"\\n                  ></span>\\n                  Save changes\\n                </button>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from '../login/auth.guard';\r\nimport { SoilTestDetailComponent } from './soil-detail.component';\r\nimport { SoilHomeComponent } from './soil-home.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    // data: {\r\n    //   title: 'Theme'\r\n    // },\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'soiltest'\r\n      },\r\n      {\r\n        path: 'customers',\r\n        // canActivate: [AuthGuard],\r\n        component: SoilHomeComponent,\r\n        data: {\r\n          roles: 'MANAGER',\r\n          title: 'Soil Analysis'\r\n        }\r\n      },\r\n      {\r\n        path: 'test_details/:id',\r\n        // canActivate: [AuthGuard],\r\n        component: SoilTestDetailComponent,\r\n        data: {\r\n          roles: 'MANAGER',\r\n          title: 'Test Details'\r\n        }\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SoilTestRoutingModule {}\r\n","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div\\n      class=\\\"card-header\\\"\\n      style=\\\"display: flex; justify-content: space-between\\\"\\n    >\\n      <h2>Soil Analysis Home</h2>\\n\\n        <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-outline-primary\\\"\\n            data-toggle=\\\"modal\\\"\\n            (click)=\\\"downloadExcel()\\\"\\n          >\\n            Download excel\\n          </button>\\n      <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" (click)=\\\"myModal.show()\\\">\\n        New\\n      </button> -->\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <ag-grid-angular\\n            #agGrid\\n            style=\\\"width: 100%; height: 500px\\\"\\n            id=\\\"myGrid\\\"\\n            class=\\\"ag-theme-alpine\\\"\\n            [columnDefs]=\\\"columnDefs\\\"\\n            [rowData]=\\\"rowData\\\"\\n            [rowSelection]=\\\"rowSelection\\\"\\n            (gridReady)=\\\"onGridReady($event)\\\"\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\n            animateRows=\\\"true\\\"\\n          >\\n          </ag-grid-angular>\\n          <span class=\\\"float-left mt-3\\\">{{from}} to {{to}}  of {{meta?.pagination?.total}}</span>\\n          <button\\n            type=\\\"button\\\"\\n            [disabled]=\\\"disableNextButton\\\"\\n            class=\\\"btn btn-primary float-right m-2\\\"\\n            (click)=\\\"loadNext()\\\"\\n          >\\n            Next\\n          </button>\\n          <span class=\\\"float-right mt-3\\\"\\n            >Page {{ meta?.pagination?.page }} of\\n            {{ meta?.pagination?.pageCount }}</span\\n          >\\n          <button\\n            type=\\\"button\\\"\\n            [disabled]=\\\"disablePrevButton\\\"\\n            class=\\\"btn btn-primary float-right m-2\\\"\\n            (click)=\\\"loadPrev()\\\"\\n          >\\n            Prev\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { ToastrService } from 'ngx-toastr';\nimport { DataService } from '../../data.service';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport {\n  dateConverter,\n  dateConverterMin,\n} from '../../constants/columnMetadata';\n\n@Component({\n  templateUrl: 'soil-detail.component.html',\n})\nexport class SoilTestDetailComponent implements OnInit {\n  constructor(\n    public dataservice: DataService,\n    private activatedRouter: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) {}\n  @ViewChild('myModal') public myModal: ModalDirective;\n  @ViewChild('resultModal') public resultModal: ModalDirective;\n\n  id: any;\n  loading = true;\n  details: any = [];\n  btnLoading = false;\n  dateConverterMin = dateConverterMin;\n  dateConverter = dateConverter;\n  users: any = [];\n  LGA: any = [];\n  Areas: any = [];\n  Farmers: any = [];\n  States: any = [];\n  Crops: any = [];\n  flag;\n  agentForm = this.fb.group({\n    ContactNumber: ['', Validators.required],\n    // PreferredCollectionDate: [\"\", Validators.required],\n    ReasonForSoilTest: ['', Validators.required],\n    Status: ['', Validators.required],\n    nutrient: ['', Validators.required],\n    Farmer: ['', Validators.required],\n    area: ['', Validators.required],\n    state: ['', Validators.required],\n    lga: ['', Validators.required],\n  });\n  resultForm = this.fb.group({\n    soil_test_sample: [''],\n    phObserved: ['', Validators.required],\n    OrganicCarbonObserved: ['', Validators.required],\n    TotalNitrogenObserved: ['', Validators.required],\n    PhosphorousObserved: ['', Validators.required],\n    PotassiumObserved: ['', Validators.required],\n    CalciumObserved: ['', Validators.required],\n    MagnesiumObserved: ['', Validators.required],\n    ZincObserved: ['', Validators.required],\n    SulphurObserved: ['', Validators.required],\n    IronObserved: ['', Validators.required],\n    CopperObserved: ['', Validators.required],\n    BoronObserved: ['', Validators.required],\n    ManganeseObserved: ['', Validators.required],\n    RecommendedUreaQty: ['', Validators.required],\n    RecommendedNPKQty: ['', Validators.required],\n  });\n\n  ngOnInit(): void {\n    this.getLists();\n    this.getAreas();\n    this.getCrops();\n    this.getLGAs();\n    this.getStates();\n    this.getFarmers();\n    this.activatedRouter.params.subscribe((params) => {\n      this.id = params['id'];\n    });\n    this.getTest();\n  }\n  getTest() {\n    this.dataservice\n      .getsingleSoilTests(this.id)\n      .valueChanges.subscribe((result: any) => {\n        console.log('getsingleSoilTests', result.data.soilTest.data);\n        this.details = result.data.soilTest.data;\n        this.agentForm = this.fb.group({\n          ContactNumber: [\n            this.details.attributes?.ContactNumber,\n            Validators.required,\n          ],\n          // PreferredCollectionDate: [\n          //   this.details?.attributes?.PreferredCollectionDate,\n          //   Validators.required,\n          // ],\n          ReasonForSoilTest: [\n            this.details?.attributes?.ReasonForSoilTest,\n            Validators.required,\n          ],\n          Status: [this.details?.attributes?.Status, Validators.required],\n          nutrient: [this.details?.attributes?.nutrient, Validators.required],\n          Farmer: [\n            this.details?.attributes?.Farmer.data.id,\n            Validators.required,\n          ],\n          area: [this.details?.attributes?.area.data.id, Validators.required],\n          state: [\n            this.details?.attributes?.lga.data.attributes.state.data.id,\n            Validators.required,\n          ],\n          lga: [this.details?.attributes?.lga.data.id, Validators.required],\n        });\n        this.loading = false;\n      });\n  }\n  getCrops() {\n    this.dataservice.getCrops(1, 10000, '').valueChanges.subscribe((result: any) => {\n      console.log('getCrops', result.data.crops.data);\n      this.Crops = result.data.crops.data;\n    });\n  }\n  getStates() {\n    this.dataservice.getStates(1, 10000, '').valueChanges.subscribe((result: any) => {\n      console.log('getStates', result.data.states.data);\n      this.States = result.data.states.data;\n    });\n  }\n  getLGAs(id?) {\n    this.dataservice.getLGAs(1, 10000, '', id).valueChanges.subscribe((result: any) => {\n      console.log('getLGAs', result.data.lgas.data);\n      this.LGA = result.data.lgas.data;\n    });\n  }\n  getAreas(id?) {\n    this.dataservice.getAreas(1, 10000, '', id).valueChanges.subscribe((result: any) => {\n      console.log('getAreas', result.data.areas.data);\n      this.Areas = result.data.areas.data;\n    });\n  }\n  getFarmers() {\n    this.dataservice\n      .getUsers(undefined, undefined, 'Farmer')\n      .valueChanges.subscribe((result: any) => {\n        console.log('getFarmers', result.data.usersPermissionsUsers.data);\n        this.Farmers = result.data.usersPermissionsUsers.data;\n      });\n  }\n  dateConvertor(date) {\n    if (date == null) {\n      return 'Nil';\n    }\n    return new Date(date);\n  }\n  getLists() {\n    this.loading = true;\n  }\n  openModal(data: any, flag) {\n    this.resultModal.show();\n    console.log(data, flag);\n    this.flag = flag;\n    this.resultForm = this.fb.group({\n      id: [data?.attributes?.soil_test_results?.data[0]?.id],\n      soil_test_sample: [data?.id],\n      phObserved: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes?.phObserved,\n        Validators.required,\n      ],\n      OrganicCarbonObserved: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes\n          ?.OrganicCarbonObserved,\n        Validators.required,\n      ],\n      TotalNitrogenObserved: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes\n          ?.TotalNitrogenObserved,\n        Validators.required,\n      ],\n      PhosphorousObserved: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes\n          ?.PhosphorousObserved,\n        Validators.required,\n      ],\n      PotassiumObserved: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes\n          ?.PotassiumObserved,\n        Validators.required,\n      ],\n      CalciumObserved: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes\n          ?.CalciumObserved,\n        Validators.required,\n      ],\n      MagnesiumObserved: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes\n          ?.MagnesiumObserved,\n        Validators.required,\n      ],\n      ZincObserved: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes?.ZincObserved,\n        Validators.required,\n      ],\n      SulphurObserved: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes\n          ?.SulphurObserved,\n        Validators.required,\n      ],\n      IronObserved: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes?.IronObserved,\n        Validators.required,\n      ],\n      CopperObserved: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes\n          ?.CopperObserved,\n        Validators.required,\n      ],\n      BoronObserved: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes?.BoronObserved,\n        Validators.required,\n      ],\n      ManganeseObserved: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes\n          ?.ManganeseObserved,\n        Validators.required,\n      ],\n      RecommendedUreaQty: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes\n          ?.RecommendedUreaQty,\n        Validators.required,\n      ],\n      RecommendedNPKQty: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes\n          ?.RecommendedNPKQty,\n        Validators.required,\n      ],\n    });\n  }\n  FormSubmit() {\n    let resp = {};\n    this.btnLoading = true;\n    console.log(this.agentForm.value);\n    this.dataservice.UpdateSoilTest(this.agentForm.value, this.id).subscribe(\n      (result: any) => {\n        resp = result.data;\n        console.log('response', result);\n        if (result.data.updateSoilTest) {\n          this.toastr.success('Test updated successfully!');\n          this.btnLoading = false;\n          this.myModal.hide();\n          this.getTest();\n        } else {\n          this.toastr.error('Failed. Please check the fields!');\n          this.btnLoading = false;\n        }\n      },\n      (error) => {\n        this.btnLoading = false;\n        console.log(error);\n      }\n    );\n  }\n  filterLGA(event) {\n    this.getLGAs(event.target.value);\n  }\n  filterArea(event) {\n    this.getAreas(event.target.value);\n  }\n  ResultSubmit() {\n    this.btnLoading = true;\n    if (this.flag === 'edit') {\n      console.log('edit', this.resultForm.value);\n      let resp = {};\n      console.log(this.resultForm.value);\n      this.dataservice.UpdateSoilTestResult(this.resultForm.value).subscribe(\n        (result: any) => {\n          resp = result.data;\n          console.log('response', result);\n          if (result.data.updateSoilTestResult) {\n            this.toastr.success('Result updated successfully!');\n            this.btnLoading = false;\n            this.resultModal.hide();\n            this.getTest();\n          } else {\n            this.toastr.error('Failed. Please check the fields!');\n            this.btnLoading = false;\n          }\n        },\n        (error) => {\n          this.btnLoading = false;\n          console.log(error);\n        }\n      );\n    } else {\n      console.log('new', this.resultForm.value);\n      let resp = {};\n      console.log(this.resultForm.value);\n      this.dataservice.AddSoilTestResult(this.resultForm.value).subscribe(\n        (result: any) => {\n          resp = result.data;\n          console.log('response', result);\n          if (result.data.createSoilTestResult) {\n            this.toastr.success('Result added successfully!');\n            this.btnLoading = false;\n            this.resultModal.hide();\n            this.getTest();\n          } else {\n            this.toastr.error('Failed. Please check the fields!');\n            this.btnLoading = false;\n          }\n        },\n        (error) => {\n          this.btnLoading = false;\n          console.log(error);\n        }\n      );\n    }\n  }\n}\n"]}