{"version":3,"sources":["webpack:///src/app/views/soil-test/soil-test.module.ts","webpack:///src/app/views/soil-test/soil-home.component.ts","webpack:///src/app/views/soil-test/soil-detail.component.html","webpack:///src/app/views/soil-test/soil-test-routing.module.ts","webpack:///src/app/views/soil-test/soil-home.component.html","webpack:///src/app/views/soil-test/soil-detail.component.ts"],"names":["SoilTestModule","imports","withComponents","forRoot","declarations","SoilHomeComponent","dataservice","router","fb","toastr","loading","btnLoading","disableNextButton","disablePrevButton","pageSize","from","to","count","columnDefs","rowData","rowSelection","getLists","getsoilTests","valueChanges","subscribe","result","console","log","data","soilTests","meta","pagination","pageCount","total","length","params","gridApi","api","gridColumnApi","columnApi","event","selectedRows","getSelectedRows","navigate","id","state","template","routes","path","children","redirectTo","component","roles","title","SoilTestRoutingModule","forChild","exports","SoilTestDetailComponent","activatedRouter","details","dateConverterMin","dateConverter","users","Villages","LGA","Areas","Farmers","States","Crops","agentForm","group","ContactNumber","required","ReasonForSoilTest","Status","nutrient","Farmer","area","lga","resultForm","soil_test_sample","phObserved","OrganicCarbonObserved","TotalNitrogenObserved","PhosphorousObserved","PotassiumObserved","CalciumObserved","MagnesiumObserved","ZincObserved","SulphurObserved","IronObserved","CopperObserved","BoronObserved","ManganeseObserved","RecommendedUreaQty","RecommendedNPKQty","getAreas","getCrops","getLGAs","getStates","getVillages","getFarmers","getTest","getsingleSoilTests","soilTest","attributes","crops","states","lgas","areas","getUsers","undefined","usersPermissionsUsers","villages","date","Date","flag","resultModal","show","soil_test_results","resp","value","UpdateSoilTest","updateSoilTest","success","myModal","hide","error","target","UpdateSoilTestResult","updateSoilTestResult","AddSoilTestResult","createSoilTestResult"],"mappings":"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","file":"views-soil-test-soil-test-module-es5.js","sourcesContent":["// Angular\nimport { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\nimport { NgModule } from '@angular/core';\n\n// import { TypographyComponent } from './typography.component';\n\n// Theme Routing\nimport { SoilTestRoutingModule } from './soil-test-routing.module';\nimport { SoilHomeComponent } from './soil-home.component';\nimport { SoilTestDetailComponent } from './soil-detail.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SoilTestRoutingModule,\n    ReactiveFormsModule,\n    AgGridModule.withComponents([]),\n    ModalModule.forRoot(),\n    CarouselModule.forRoot(),\n    FormsModule,\n  ],\n  declarations: [\n    SoilHomeComponent,\n    SoilTestDetailComponent,\n  ]\n})\nexport class SoilTestModule { }\n","import { Component, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\nimport { ToastrService } from 'ngx-toastr';\nimport { DataService } from \"../../data.service\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { SoilAnalysisColumns } from \"../../constants/columnMetadata\";\n\n@Component({\n  templateUrl: \"soil-home.component.html\",\n})\nexport class SoilHomeComponent {\n  rowSelection: string;\n  constructor(\n    public dataservice: DataService,\n    private router: Router,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n    ) {\n    this.columnDefs = [...SoilAnalysisColumns];\n    this.rowSelection = \"single\";\n  }\n\n  @ViewChild(\"myModal\") public myModal: ModalDirective;\n  loading = true;\n  btnLoading = false;\n  disableNextButton = false;\n  disablePrevButton = true;\n  meta;\n  pageSize = 20;\n  from = 1;\n  to = 20;\n  count = 1;\n  columnDefs = [];\n  rowData: any = [];\n  private gridApi;\n  private gridColumnApi;\n\n  ngOnInit(): void {\n    this.getLists();\n  }\n  getLists() {\n    this.loading = true;\n    this.dataservice.getsoilTests(1,this.pageSize).valueChanges.subscribe((result: any) => {\n      console.log(\"getCustomers\", result.data.soilTests.data);\n      this.rowData = result.data.soilTests.data;\n      this.meta = result.data.soilTests.meta;\n      if (this.meta?.pagination?.pageCount <= 1) {\n        this.disablePrevButton = true;\n        this.disableNextButton = true;\n      }\n      if (this.meta?.pagination?.total < this.pageSize) {\n        this.to = this.meta?.pagination?.total;\n      }\n    });\n  }\n  loadNext() {\n    this.count++;\n     this.disablePrevButton = false;\n    this.from = this.from + this.pageSize;\n    this.to =\n      this.to + this.pageSize > this.meta?.pagination?.total\n        ? this.meta?.pagination?.total\n        : this.to + this.pageSize;\n    if (this.count === this.meta.pagination.pageCount) {\n      this.disableNextButton = true;\n    }\n    this.dataservice\n      .getsoilTests(this.count, this.pageSize)\n      .valueChanges.subscribe((result: any) => {\n        this.meta = result.data.soilTests.meta;\n        this.rowData = result.data.soilTests.data;\n      });\n  }\n  loadPrev() {\n    this.count--;\n    if (this.count < this.meta.pagination.pageCount) {\n      this.disableNextButton = false;\n    }\n    if (this.count === 1) {\n      this.disablePrevButton = true;\n    }\n    this.from = this.from - this.pageSize;\n    this.to = this.to - this.rowData.length;\n    this.dataservice\n      .getsoilTests(this.count, this.pageSize)\n      .valueChanges.subscribe((result: any) => {\n        this.meta = result.data.soilTests.meta;\n        this.rowData = result.data.soilTests.data;\n      });\n  }\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n  }\n  onSelectionChanged(event) {\n    var selectedRows = this.gridApi.getSelectedRows();\n    console.log(selectedRows);\n    this.router.navigate([\"/soiltest/test_details\",selectedRows[0].id], {\n      state: { data: selectedRows },\n    });\n  }\n}\n","export default \"<div class=\\\"animated fadeIn\\\">\\n  <!-- <div\\n    bsModal\\n    #deleteModal=\\\"bs-modal\\\"\\n    class=\\\"modal fade\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"dialog\\\"\\n    aria-labelledby=\\\"myModalLabel\\\"\\n    aria-hidden=\\\"true\\\"\\n  >\\n    <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-body text-center\\\">\\n          Do you want to delete this request?\\n        </div>\\n        <div class=\\\"modal-footer justify-content-around\\\">\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"deleteModal.hide()\\\"\\n          >\\n            No! Cancel.\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deleteAgent()\\\">\\n            Yes! Delete.\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div> -->\\n  <div class=\\\"card\\\">\\n    <div\\n      class=\\\"card-header\\\"\\n      style=\\\"display: flex; justify-content: space-between\\\"\\n    >\\n      <h2>Soil Test Details</h2>\\n      <span>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-primary\\\"\\n          data-toggle=\\\"modal\\\"\\n          (click)=\\\"myModal.show()\\\"\\n        >\\n          Edit\\n        </button>\\n        <!-- <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-danger\\\"\\n          data-toggle=\\\"modal\\\"\\n          (click)=\\\"deleteModal.show()\\\"\\n        >\\n          Delete\\n        </button> -->\\n      </span>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n          <div class=\\\"row\\\">\\n            <div style=\\\"display: flex; justify-content: space-between\\\">\\n              <h4>Request details</h4>\\n            </div>\\n            <table class=\\\"table table-striped\\\">\\n              <tbody>\\n                <tr>\\n                  <td>ID</td>\\n                  <td>STR{{ details?.id }}</td>\\n                </tr>\\n                <!-- <tr>\\n                  <td>Test ID</td>\\n                  <td>{{ details?.attributes?.SoilTestID }}</td>\\n                </tr> -->\\n                <tr>\\n                  <td>Farmer</td>\\n                  <td>\\n                    {{ details?.attributes?.Farmer?.data.attributes.Name }}\\n                  </td>\\n                </tr>\\n                <!-- <tr>\\n                  <td>Email</td>\\n                  <td>\\n                    {{ details?.attributes?.Farmer?.data.attributes.email }}\\n                  </td>\\n                </tr> -->\\n                <tr>\\n                  <td>Contact number</td>\\n                  <td>{{ details?.attributes?.ContactNumber }}</td>\\n                </tr>\\n                <!-- <tr>\\n                  <td>Agronomist</td>\\n                  <td>\\n                    {{\\n                      details?.attributes?.Farmer?.data?.attributes?.agronomist\\n                        ?.data?.attributes?.users_permissions_user?.data\\n                        ?.attributes?.Name\\n                    }}\\n                  </td>\\n                </tr> -->\\n                <tr>\\n                  <td>Reason for testing</td>\\n                  <td>{{ details?.attributes?.ReasonForSoilTest }}</td>\\n                </tr>\\n                <tr>\\n                  <td>Preferred nutrient</td>\\n                  <td>{{ details?.attributes?.nutrient }}</td>\\n                </tr>\\n                <tr>\\n                  <td>City</td>\\n                  <td>{{ details?.attributes?.area?.data.attributes.Name }}</td>\\n                </tr>\\n                <tr>\\n                  <td>Postal code</td>\\n                  <td>\\n                    {{ details?.attributes?.area?.data.attributes.PostalCode }}\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>LGA</td>\\n                  <td>{{ details?.attributes?.lga?.data.attributes.Name }}</td>\\n                </tr>\\n                <tr>\\n                  <td>State</td>\\n                  <td>\\n                    {{\\n                      details?.attributes?.lga?.data?.attributes?.state?.data\\n                        ?.attributes?.Name\\n                    }}\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Preferred date for sample collection</td>\\n                  <td>\\n                    {{\\n                      dateConverterMin(\\n                        details?.attributes?.PreferredCollectionDate\\n                      )\\n                    }}\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Created at</td>\\n                  <td>{{ dateConvertor(details?.attributes?.createdAt) }}</td>\\n                </tr>\\n                <tr>\\n                  <td>Last updated</td>\\n                  <td>{{ dateConvertor(details?.attributes?.updatedAt) }}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n          <h4>Samples</h4>\\n          <div class=\\\"row\\\">\\n            <div\\n              class=\\\"col-4\\\"\\n              *ngFor=\\\"let item of details?.attributes?.soil_test_samples?.data\\\"\\n            >\\n              <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                  <div style=\\\"display: flex; justify-content: space-between\\\">\\n                    <h5 class=\\\"card-title\\\">\\n                      Sample ID : {{ item?.attributes?.SampleID }}\\n                    </h5>\\n                    <button\\n                      type=\\\"button\\\"\\n                      *ngIf=\\\"item?.attributes?.soil_test_results?.data[0]\\\"\\n                      class=\\\"btn btn-primary\\\"\\n                      data-toggle=\\\"modal\\\"\\n                      (click)=\\\"openModal(item, 'edit')\\\"\\n                    >\\n                      Edit results\\n                    </button>\\n                    <button\\n                      type=\\\"button\\\"\\n                      *ngIf=\\\"!item?.attributes?.soil_test_results?.data[0]\\\"\\n                      class=\\\"btn btn-primary\\\"\\n                      data-toggle=\\\"modal\\\"\\n                      (click)=\\\"openModal(item, 'add')\\\"\\n                    >\\n                      Add results\\n                    </button>\\n                  </div>\\n                  <p class=\\\"card-text\\\">\\n                    Quantity of samples :\\n                    {{ item?.attributes?.QuantityOfSamples }}\\n                  </p>\\n                  <p class=\\\"card-text\\\">\\n                    Created on :\\n                    {{ dateConvertor(item?.attributes?.createdAt) }}\\n                  </p>\\n                  <p class=\\\"card-text\\\">\\n                    Added by :\\n                    {{\\n                      item?.attributes?.SampleAddedBy?.data?.attributes?.Name\\n                    }}\\n                  </p>\\n                  <p>Result updated on : {{dateConvertor(item?.attributes?.soil_test_results?.data[0]\\n                    ?.attributes?.updatedAt)}}</p>\\n                  <table class=\\\"table\\\">\\n                    <tbody>\\n                      <tr>\\n                        <th>Parameter</th>\\n                        <th>Value observed</th>\\n                      </tr>\\n                      <tr>\\n                        <td>pH</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.phObserved\\n                          }}\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Organic Carbon</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.OrganicCarbonObserved\\n                          }}\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Total Nitrogen</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.TotalNitrogenObserved\\n                          }}\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Phosphorous</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.PhosphorousObserved\\n                          }}\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Pottasium</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.PotassiumObserved\\n                          }}\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Calcium</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.CalciumObserved\\n                          }}\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Magnesium</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.MagnesiumObserved\\n                          }}\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Zinc</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.ZincObserved\\n                          }}\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Sulphur</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.SulphurObserved\\n                          }}\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Iron</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.IronObserved\\n                          }}\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Copper</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.CopperObserved\\n                          }}\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Boron</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.BoronObserved\\n                          }}\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Manganese</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.ManganeseObserved\\n                          }}\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Recommended Urea Qty</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.RecommendedUreaQty\\n                          }}\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                        <td>Recommended NPK Qty</td>\\n                        <td>\\n                          {{\\n                            item?.attributes?.soil_test_results?.data[0]\\n                              ?.attributes?.RecommendedNPKQty\\n                          }}\\n                        </td>\\n                      </tr>\\n                    </tbody>\\n                  </table>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <!-- <div class=\\\"col\\\">\\n          <div style=\\\"display: flex; justify-content: space-between\\\">\\n            <h4>Test Results</h4>\\n          </div>\\n          <table class=\\\"table\\\" *ngFor=\\\"let item of details.attributes.soil_test_samples.data\\\">\\n            <tbody>\\n              <tr>\\n                <th>Parameter</th>\\n                <th>Value observed</th>\\n              </tr>\\n              <tr>\\n                <td>pH</td>\\n                <td>{{ item?.attributes?.soil_test_results?.data[0].attributes.phObserved }}</td>\\n              </tr>\\n              <tr>\\n                <td>Organic Carbon</td>\\n                <td>{{ item?.attributes?.soil_test_results?.data[0].attributes.OrganicCarbonObserved }}</td>\\n              </tr>\\n              <tr>\\n                <td>Total Nitrogen</td>\\n                <td>{{ item?.attributes?.soil_test_results?.data[0].attributes.TotalNitrogenObserved }}</td>\\n              </tr>\\n              <tr>\\n                <td>Phosphorous</td>\\n                <td>{{ item?.attributes?.soil_test_results?.data[0].attributes.PhosphorousObserved }}</td>\\n              </tr>\\n              <tr>\\n                <td>Pottasium</td>\\n                <td>{{ item?.attributes?.soil_test_results?.data[0].attributes.PotassiumObserved }}</td>\\n              </tr>\\n              <tr>\\n                <td>Calcium</td>\\n                <td>{{ item?.attributes?.soil_test_results?.data[0].attributes.CalciumObserved }}</td>\\n              </tr>\\n              <tr>\\n                <td>Magnesium</td>\\n                <td>{{ item?.attributes?.soil_test_results?.data[0].attributes.MagnesiumObserved }}</td>\\n              </tr>\\n              <tr>\\n                <td>Zinc</td>\\n                <td>{{ item?.attributes?.soil_test_results?.data[0].attributes.ZincObserved }}</td>\\n              </tr>\\n              <tr>\\n                <td>Sulphur</td>\\n                <td>{{ item?.attributes?.soil_test_results?.data[0].attributes.SulphurObserved }}</td>\\n              </tr>\\n              <tr>\\n                <td>Iron</td>\\n                <td>{{ item?.attributes?.soil_test_results?.data[0].attributes.IronObserved }}</td>\\n              </tr>\\n              <tr>\\n                <td>Copper</td>\\n                <td>{{ item?.attributes?.soil_test_results?.data[0].attributes.CopperObserved }}</td>\\n              </tr>\\n              <tr>\\n                <td>Boron</td>\\n                <td>{{ item?.attributes?.soil_test_results?.data[0].attributes.BoronObserved }}</td>\\n              </tr>\\n              <tr>\\n                <td>Manganese</td>\\n                <td>{{ item?.attributes?.soil_test_results?.data[0].attributes.ManganeseObserved }}</td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-primary\\\"\\n            data-toggle=\\\"modal\\\"\\n            (click)=\\\"commentModal.show()\\\"\\n          >\\n            Add Comment\\n          </button>\\n        </div> -->\\n        </div>\\n      </div>\\n      <div\\n        bsModal\\n        #myModal=\\\"bs-modal\\\"\\n        class=\\\"modal fade\\\"\\n        tabindex=\\\"-1\\\"\\n        role=\\\"dialog\\\"\\n        aria-labelledby=\\\"myModalLabel\\\"\\n        aria-hidden=\\\"true\\\"\\n      >\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title\\\">Edit details</h4>\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"close\\\"\\n                (click)=\\\"myModal.hide()\\\"\\n                aria-label=\\\"Close\\\"\\n              >\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              <form [formGroup]=\\\"agentForm\\\" (ngSubmit)=\\\"FormSubmit()\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"Farmer\\\">Farmer</label>\\n                  <select\\n                    class=\\\"form-control\\\"\\n                    id=\\\"Farmer\\\"\\n                    required\\n                    ngModel\\n                    name=\\\"Farmer\\\"\\n                    formControlName=\\\"Farmer\\\"\\n                  >\\n                    <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                    <option *ngFor=\\\"let item of Farmers\\\" value=\\\"{{ item.id }}\\\">\\n                      {{ item.attributes.Name }}\\n                    </option>\\n                  </select>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"market\\\">Contact Number</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"ContactNumber\\\"\\n                    name=\\\"ContactNumber\\\"\\n                    formControlName=\\\"ContactNumber\\\"\\n                    placeholder=\\\"Enter contact number\\\"\\n                  />\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"ReasonForSoilTest\\\">Reason for test</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"ReasonForSoilTest\\\"\\n                    name=\\\"ReasonForSoilTest\\\"\\n                    formControlName=\\\"ReasonForSoilTest\\\"\\n                    placeholder=\\\"Enter contact number\\\"\\n                  />\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"nutrient\\\">Testing for</label>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"nutrient\\\"\\n                    name=\\\"nutrient\\\"\\n                    formControlName=\\\"nutrient\\\"\\n                    placeholder=\\\"Enter nutrient\\\"\\n                  />\\n                </div>\\n                <!-- <div class=\\\"form-group\\\">\\n                  <label for=\\\"PreferredCollectionDate\\\"\\n                    >Preferred Collection Date</label\\n                  >\\n                  <input\\n                    type=\\\"datetime-local\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"PreferredCollectionDate\\\"\\n                    name=\\\"PreferredCollectionDate\\\"\\n                    formControlName=\\\"PreferredCollectionDate\\\"\\n                    placeholder=\\\"Enter PreferredCollectionDate\\\"\\n                  />\\n                </div> -->\\n\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"Status\\\">Status</label>\\n                  <select\\n                    class=\\\"form-control\\\"\\n                    id=\\\"Status\\\"\\n                    required\\n                    ngModel\\n                    name=\\\"Status\\\"\\n                    formControlName=\\\"Status\\\"\\n                  >\\n                    <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                    <option value=\\\"NEW_REQUEST\\\">NEW_REQUEST</option>\\n                    <option value=\\\"SAMPLE_COLLECTED\\\">SAMPLE_COLLECTED</option>\\n                    <option value=\\\"RESULTS_ADDED\\\">RESULTS_ADDED</option>\\n                  </select>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"state\\\">State</label>\\n                  <select\\n                    class=\\\"form-control\\\"\\n                    id=\\\"state\\\"\\n                    required\\n                    ngModel\\n                    (change)=\\\"filterLGA($event)\\\"\\n                    name=\\\"state\\\"\\n                    formControlName=\\\"state\\\"\\n                  >\\n                    <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                    <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\n                      {{ item.attributes.Name }}\\n                    </option>\\n                  </select>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"lga\\\">LGA</label>\\n                  <select\\n                    class=\\\"form-control\\\"\\n                    id=\\\"lga\\\"\\n                    required\\n                    (change)=\\\"filterArea($event)\\\"\\n                    ngModel\\n                    name=\\\"lga\\\"\\n                    formControlName=\\\"lga\\\"\\n                  >\\n                    <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                    <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\n                      {{ item.attributes.Name }}\\n                    </option>\\n                  </select>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"area\\\">City</label>\\n                  <select\\n                    class=\\\"form-control\\\"\\n                    id=\\\"area\\\"\\n                    required\\n                    ngModel\\n                    name=\\\"area\\\"\\n                    formControlName=\\\"area\\\"\\n                  >\\n                    <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                    <option *ngFor=\\\"let item of Areas\\\" value=\\\"{{ item.id }}\\\">\\n                      {{ item.attributes.Name }}\\n                    </option>\\n                  </select>\\n                </div>\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-secondary\\\"\\n                  (click)=\\\"myModal.hide()\\\"\\n                >\\n                  Close\\n                </button>\\n                <button\\n                  type=\\\"submit\\\"\\n                  class=\\\"btn btn-primary ml-2\\\"\\n                  [disabled]=\\\"btnLoading || !agentForm.valid\\\"\\n                >\\n                  <span\\n                    *ngIf=\\\"btnLoading\\\"\\n                    class=\\\"spinner-border spinner-border-sm\\\"\\n                    role=\\\"status\\\"\\n                    aria-hidden=\\\"true\\\"\\n                  ></span>\\n                  Save changes\\n                </button>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div\\n        bsModal\\n        #resultModal=\\\"bs-modal\\\"\\n        class=\\\"modal fade\\\"\\n        tabindex=\\\"-1\\\"\\n        role=\\\"dialog\\\"\\n        aria-labelledby=\\\"resultModalLabel\\\"\\n        aria-hidden=\\\"true\\\"\\n      >\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title\\\">Add/Edit result</h4>\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"close\\\"\\n                (click)=\\\"resultModal.hide()\\\"\\n                aria-label=\\\"Close\\\"\\n              >\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              <form [formGroup]=\\\"resultForm\\\" (ngSubmit)=\\\"ResultSubmit()\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"soil_test_sample\\\">Soil Test ID</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"soil_test_sample\\\"\\n                        disabled=\\\"true\\\"\\n                        name=\\\"soil_test_sample\\\"\\n                        formControlName=\\\"soil_test_sample\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"phObserved\\\">ph Observed</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"phObserved\\\"\\n                        name=\\\"phObserved\\\"\\n                        formControlName=\\\"phObserved\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"OrganicCarbonObserved\\\"\\n                        >Organic Carbon Observed</label\\n                      >\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"OrganicCarbonObserved\\\"\\n                        name=\\\"OrganicCarbonObserved\\\"\\n                        formControlName=\\\"OrganicCarbonObserved\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"TotalNitrogenObserved\\\"\\n                        >Total Nitrogen Observed</label\\n                      >\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"TotalNitrogenObserved\\\"\\n                        name=\\\"TotalNitrogenObserved\\\"\\n                        formControlName=\\\"TotalNitrogenObserved\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"ManganeseObserved\\\">Manganese Observed</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"ManganeseObserved\\\"\\n                        name=\\\"ManganeseObserved\\\"\\n                        formControlName=\\\"ManganeseObserved\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"PhosphorousObserved\\\"\\n                        >Phosphorous Observed</label\\n                      >\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"PhosphorousObserved\\\"\\n                        name=\\\"PhosphorousObserved\\\"\\n                        formControlName=\\\"PhosphorousObserved\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"PotassiumObserved\\\">Potassium Observed</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"PotassiumObserved\\\"\\n                        name=\\\"PotassiumObserved\\\"\\n                        formControlName=\\\"PotassiumObserved\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"CalciumObserved\\\">Calcium Observed</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"CalciumObserved\\\"\\n                        name=\\\"CalciumObserved\\\"\\n                        formControlName=\\\"CalciumObserved\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"MagnesiumObserved\\\">Magnesium Observed</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"MagnesiumObserved\\\"\\n                        name=\\\"MagnesiumObserved\\\"\\n                        formControlName=\\\"MagnesiumObserved\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"ZincObserved\\\">Zinc Observed</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"ZincObserved\\\"\\n                        name=\\\"ZincObserved\\\"\\n                        formControlName=\\\"ZincObserved\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"SulphurObserved\\\">Sulphur Observed</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"SulphurObserved\\\"\\n                        name=\\\"SulphurObserved\\\"\\n                        formControlName=\\\"SulphurObserved\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"IronObserved\\\">Iron Observed</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"IronObserved\\\"\\n                        name=\\\"IronObserved\\\"\\n                        formControlName=\\\"IronObserved\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"CopperObserved\\\">Copper Observed</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"CopperObserved\\\"\\n                        name=\\\"CopperObserved\\\"\\n                        formControlName=\\\"CopperObserved\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"BoronObserved\\\">Boron Observed</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"BoronObserved\\\"\\n                        name=\\\"BoronObserved\\\"\\n                        formControlName=\\\"BoronObserved\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"RecommendedUreaQty\\\">Recommended Urea Qty</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"RecommendedUreaQty\\\"\\n                        name=\\\"RecommendedUreaQty\\\"\\n                        formControlName=\\\"RecommendedUreaQty\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"RecommendedNPKQty\\\">Recommended NPK Qty</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"RecommendedNPKQty\\\"\\n                        name=\\\"RecommendedNPKQty\\\"\\n                        formControlName=\\\"RecommendedNPKQty\\\"\\n                        placeholder=\\\"Enter value\\\"\\n                      />\\n                    </div>\\n                  </div>\\n                </div>\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-secondary\\\"\\n                  (click)=\\\"resultModal.hide()\\\"\\n                >\\n                  Close\\n                </button>\\n                <button\\n                  type=\\\"submit\\\"\\n                  class=\\\"btn btn-primary ml-2\\\"\\n                  [disabled]=\\\"btnLoading\\\"\\n                >\\n                  <span\\n                    *ngIf=\\\"btnLoading\\\"\\n                    class=\\\"spinner-border spinner-border-sm\\\"\\n                    role=\\\"status\\\"\\n                    aria-hidden=\\\"true\\\"\\n                  ></span>\\n                  Save changes\\n                </button>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from '../login/auth.guard';\nimport { SoilTestDetailComponent } from './soil-detail.component';\nimport { SoilHomeComponent } from './soil-home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    // data: {\n    //   title: 'Theme'\n    // },\n    children: [\n      {\n        path: '',\n        redirectTo: 'soiltest'\n      },\n      {\n        path: 'customers',\n        // canActivate: [AuthGuard],\n        component: SoilHomeComponent,\n        data: {\n          roles: 'MANAGER',\n          title: 'Soil Analysis'\n        }\n      },\n      {\n        path: 'test_details/:id',\n        // canActivate: [AuthGuard],\n        component: SoilTestDetailComponent,\n        data: {\n          roles: 'MANAGER',\n          title: 'Test Details'\n        }\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SoilTestRoutingModule {}\n","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div\\n      class=\\\"card-header\\\"\\n      style=\\\"display: flex; justify-content: space-between\\\"\\n    >\\n      <h2>Soil Analysis Home</h2>\\n      <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" (click)=\\\"myModal.show()\\\">\\n        New\\n      </button> -->\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <ag-grid-angular\\n            #agGrid\\n            style=\\\"width: 100%; height: 500px\\\"\\n            id=\\\"myGrid\\\"\\n            class=\\\"ag-theme-alpine\\\"\\n            [columnDefs]=\\\"columnDefs\\\"\\n            [rowData]=\\\"rowData\\\"\\n            [rowSelection]=\\\"rowSelection\\\"\\n            (gridReady)=\\\"onGridReady($event)\\\"\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\n            animateRows=\\\"true\\\"\\n          >\\n          </ag-grid-angular>\\n          <span class=\\\"float-left mt-3\\\">{{from}} to {{to}}  of {{meta?.pagination?.total}}</span>\\n          <button\\n            type=\\\"button\\\"\\n            [disabled]=\\\"disableNextButton\\\"\\n            class=\\\"btn btn-primary float-right m-2\\\"\\n            (click)=\\\"loadNext()\\\"\\n          >\\n            Next\\n          </button>\\n          <span class=\\\"float-right mt-3\\\"\\n            >Page {{ meta?.pagination?.page }} of\\n            {{ meta?.pagination?.pageCount }}</span\\n          >\\n          <button\\n            type=\\\"button\\\"\\n            [disabled]=\\\"disablePrevButton\\\"\\n            class=\\\"btn btn-primary float-right m-2\\\"\\n            (click)=\\\"loadPrev()\\\"\\n          >\\n            Prev\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { DataService } from \"../../data.service\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport {\n  dateConverter,\n  dateConverterMin,\n} from \"../../constants/columnMetadata\";\n\n@Component({\n  templateUrl: \"soil-detail.component.html\",\n})\nexport class SoilTestDetailComponent implements OnInit {\n  constructor(\n    public dataservice: DataService,\n    private activatedRouter: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) {}\n  @ViewChild(\"myModal\") public myModal: ModalDirective;\n  @ViewChild(\"resultModal\") public resultModal: ModalDirective;\n\n  id: any;\n  loading = true;\n  details: any = [];\n  btnLoading = false;\n  dateConverterMin = dateConverterMin;\n  dateConverter = dateConverter;\n  users: any = [];\n  Villages: any = [];\n  LGA: any = [];\n  Areas: any = [];\n  Farmers: any = [];\n  States: any = [];\n  Crops: any = [];\n  flag;\n  agentForm = this.fb.group({\n    ContactNumber: [\"\", Validators.required],\n    // PreferredCollectionDate: [\"\", Validators.required],\n    ReasonForSoilTest: [\"\", Validators.required],\n    Status: [\"\", Validators.required],\n    nutrient: [\"\", Validators.required],\n    Farmer: [\"\", Validators.required],\n    area: [\"\", Validators.required],\n    state: [\"\", Validators.required],\n    lga: [\"\", Validators.required],\n  });\n  resultForm = this.fb.group({\n    soil_test_sample: [\"\"],\n    phObserved: [\"\", Validators.required],\n    OrganicCarbonObserved: [\"\", Validators.required],\n    TotalNitrogenObserved: [\"\", Validators.required],\n    PhosphorousObserved: [\"\", Validators.required],\n    PotassiumObserved: [\"\", Validators.required],\n    CalciumObserved: [\"\", Validators.required],\n    MagnesiumObserved: [\"\", Validators.required],\n    ZincObserved: [\"\", Validators.required],\n    SulphurObserved: [\"\", Validators.required],\n    IronObserved: [\"\", Validators.required],\n    CopperObserved: [\"\", Validators.required],\n    BoronObserved: [\"\", Validators.required],\n    ManganeseObserved: [\"\", Validators.required],\n    RecommendedUreaQty: [\"\", Validators.required],\n    RecommendedNPKQty: [\"\", Validators.required],\n  });\n\n  ngOnInit(): void {\n    this.getLists();\n    this.getAreas();\n    this.getCrops();\n    this.getLGAs();\n    this.getStates();\n    this.getVillages();\n    this.getFarmers();\n    this.activatedRouter.params.subscribe((params) => {\n      this.id = params[\"id\"];\n    });\n    this.getTest();\n  }\n  getTest() {\n    this.dataservice\n      .getsingleSoilTests(this.id)\n      .valueChanges.subscribe((result: any) => {\n        console.log(\"getsingleSoilTests\", result.data.soilTest.data);\n        this.details = result.data.soilTest.data;\n        this.agentForm = this.fb.group({\n          ContactNumber: [\n            this.details.attributes?.ContactNumber,\n            Validators.required,\n          ],\n          // PreferredCollectionDate: [\n          //   this.details?.attributes?.PreferredCollectionDate,\n          //   Validators.required,\n          // ],\n          ReasonForSoilTest: [\n            this.details?.attributes?.ReasonForSoilTest,\n            Validators.required,\n          ],\n          Status: [this.details?.attributes?.Status, Validators.required],\n          nutrient: [this.details?.attributes?.nutrient, Validators.required],\n          Farmer: [\n            this.details?.attributes?.Farmer.data.id,\n            Validators.required,\n          ],\n          area: [this.details?.attributes?.area.data.id, Validators.required],\n          state: [\n            this.details?.attributes?.lga.data.attributes.state.data.id,\n            Validators.required,\n          ],\n          lga: [this.details?.attributes?.lga.data.id, Validators.required],\n        });\n        this.loading = false;\n      });\n  }\n  getCrops() {\n    this.dataservice.getCrops().valueChanges.subscribe((result: any) => {\n      console.log(\"getCrops\", result.data.crops.data);\n      this.Crops = result.data.crops.data;\n    });\n  }\n  getStates() {\n    this.dataservice.getStates().valueChanges.subscribe((result: any) => {\n      console.log(\"getStates\", result.data.states.data);\n      this.States = result.data.states.data;\n    });\n  }\n  getLGAs(id?) {\n    this.dataservice.getLGAs(id).valueChanges.subscribe((result: any) => {\n      console.log(\"getLGAs\", result.data.lgas.data);\n      this.LGA = result.data.lgas.data;\n    });\n  }\n  getAreas(id?) {\n    this.dataservice.getAreas(id).valueChanges.subscribe((result: any) => {\n      console.log(\"getAreas\", result.data.areas.data);\n      this.Areas = result.data.areas.data;\n    });\n  }\n  getFarmers() {\n    this.dataservice\n      .getUsers(undefined, undefined, \"Farmer\")\n      .valueChanges.subscribe((result: any) => {\n        console.log(\"getFarmers\", result.data.usersPermissionsUsers.data);\n        this.Farmers = result.data.usersPermissionsUsers.data;\n      });\n  }\n  getVillages() {\n    this.dataservice.getVillages().valueChanges.subscribe((result: any) => {\n      console.log(\"getVillages\", result.data.villages.data);\n      this.Villages = result.data.villages.data;\n    });\n  }\n  dateConvertor(date) {\n    return new Date(date);\n  }\n  getLists() {\n    this.loading = true;\n  }\n  openModal(data: any, flag) {\n    this.resultModal.show();\n    console.log(data, flag);\n    this.flag = flag;\n    this.resultForm = this.fb.group({\n      id: [data?.attributes?.soil_test_results?.data[0]?.id],\n      soil_test_sample: [data?.id],\n      phObserved: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes?.phObserved,\n        Validators.required,\n      ],\n      OrganicCarbonObserved: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes\n          ?.OrganicCarbonObserved,\n        Validators.required,\n      ],\n      TotalNitrogenObserved: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes\n          ?.TotalNitrogenObserved,\n        Validators.required,\n      ],\n      PhosphorousObserved: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes\n          ?.PhosphorousObserved,\n        Validators.required,\n      ],\n      PotassiumObserved: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes\n          ?.PotassiumObserved,\n        Validators.required,\n      ],\n      CalciumObserved: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes\n          ?.CalciumObserved,\n        Validators.required,\n      ],\n      MagnesiumObserved: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes\n          ?.MagnesiumObserved,\n        Validators.required,\n      ],\n      ZincObserved: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes?.ZincObserved,\n        Validators.required,\n      ],\n      SulphurObserved: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes\n          ?.SulphurObserved,\n        Validators.required,\n      ],\n      IronObserved: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes?.IronObserved,\n        Validators.required,\n      ],\n      CopperObserved: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes\n          ?.CopperObserved,\n        Validators.required,\n      ],\n      BoronObserved: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes?.BoronObserved,\n        Validators.required,\n      ],\n      ManganeseObserved: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes\n          ?.ManganeseObserved,\n        Validators.required,\n      ],\n      RecommendedUreaQty: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes\n          ?.RecommendedUreaQty,\n        Validators.required,\n      ],\n      RecommendedNPKQty: [\n        data?.attributes?.soil_test_results?.data[0]?.attributes\n          ?.RecommendedNPKQty,\n        Validators.required,\n      ],\n    });\n  }\n  FormSubmit() {\n    let resp = {};\n    this.btnLoading = true;\n    console.log(this.agentForm.value);\n    this.dataservice.UpdateSoilTest(this.agentForm.value, this.id).subscribe(\n      (result: any) => {\n        resp = result.data;\n        console.log(\"response\", result);\n        if (result.data.updateSoilTest) {\n          this.toastr.success(\"Test updated successfully!\");\n          this.btnLoading = false;\n          this.myModal.hide();\n          this.getTest();\n        } else {\n          this.toastr.error(\"Failed. Please check the fields!\");\n          this.btnLoading = false;\n        }\n      },\n      (error) => {\n        this.btnLoading = false;\n      }\n    );\n  }\n  filterLGA(event) {\n    this.getLGAs(event.target.value);\n  }\n  filterArea(event) {\n    this.getAreas(event.target.value);\n  }\n  ResultSubmit() {\n    this.btnLoading = true;\n    if (this.flag == \"edit\") {\n      console.log(\"edit\", this.resultForm.value);\n      let resp = {};\n      console.log(this.resultForm.value);\n      this.dataservice.UpdateSoilTestResult(this.resultForm.value).subscribe(\n        (result: any) => {\n          resp = result.data;\n          console.log(\"response\", result);\n          if (result.data.updateSoilTestResult) {\n            this.toastr.success(\"Result updated successfully!\");\n            this.btnLoading = false;\n            this.resultModal.hide();\n            this.getTest();\n          } else {\n            this.toastr.error(\"Failed. Please check the fields!\");\n            this.btnLoading = false;\n          }\n        },\n        (error) => {\n          this.btnLoading = false;\n        }\n      );\n    } else {\n      console.log(\"new\", this.resultForm.value);\n      let resp = {};\n      console.log(this.resultForm.value);\n      this.dataservice.AddSoilTestResult(this.resultForm.value).subscribe(\n        (result: any) => {\n          resp = result.data;\n          console.log(\"response\", result);\n          if (result.data.createSoilTestResult) {\n            this.toastr.success(\"Result added successfully!\");\n            this.btnLoading = false;\n            this.resultModal.hide();\n            this.getTest();\n          } else {\n            this.toastr.error(\"Failed. Please check the fields!\");\n            this.btnLoading = false;\n          }\n        },\n        (error) => {\n          this.btnLoading = false;\n        }\n      );\n    }\n  }\n}\n"]}