{"version":3,"sources":["webpack:///src/app/views/marketplace/marketplace.module.ts","webpack:///src/app/views/marketplace/marketplace-detail.component.html","webpack:///src/app/views/marketplace/marketplace.component.html","webpack:///src/app/views/marketplace/marketplace-routing.module.ts","webpack:///src/app/views/marketplace/marketplace.component.ts","webpack:///src/app/views/marketplace/marketplace-detail.component.ts"],"names":["MarketplaceModule","imports","withComponents","forRoot","declarations","routes","path","children","redirectTo","component","data","title","MarketplaceRoutingModule","forChild","exports","MarketplaceComponent","dataservice","router","fb","toastr","loading","btnLoading","columnDefs","Categories","productForm","group","itemName","required","images","userId","localStorage","getItem","contactNumber","price","availableQty","unit","category","description","rowData","selectedRows","file","rowSelection","console","log","getMarketplace","getCategories","valueChanges","subscribe","result","marketplaceProducts","getMarketplaceCategories","marketplaceCategories","params","gridApi","api","gridColumnApi","columnApi","sizeColumnsToFit","event","getSelectedRows","navigate","id","state","i","target","files","length","push","productModal","show","resp","value","upload","response","status","createMarketplaceProduct","body","map","a","success","reset","hide","deselectAll","error","template","MarketplaceDetailComponent","activatedRouter","details","dateConverterMin","dateConverter","getSingleMarketplaceProduct","marketplaceProduct","attributes","ItemName","Price","AvailableQty","Unit","marketplace_category","date","Date","flag","resultModal","updateMarketplaceProduct","editModal","updateMarketplaceProductImg","DeleteMarketplaceProduct","deleteMarketplaceProduct","deleteModal"],"mappings":"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","file":"views-marketplace-marketplace-module-es5.js","sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { MarketplaceComponent } from './marketplace.component';\r\n\r\n// Dropdowns Component\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\n// Buttons Routing\r\nimport { MarketplaceRoutingModule } from './marketplace-routing.module';\r\n\r\n// Angular\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { MarketplaceDetailComponent } from './marketplace-detail.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TabsModule,\r\n    ReactiveFormsModule,\r\n    AgGridModule.withComponents([]),\r\n    MarketplaceRoutingModule,\r\n    BsDropdownModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    MarketplaceComponent,\r\n    MarketplaceDetailComponent\r\n  ]\r\n})\r\nexport class MarketplaceModule { }\r\n","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div bsModal #deleteModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"editModalLabel\\\"\\r\\n    aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-body text-center\\\">\\r\\n          Do you want to delete this listing?\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer justify-content-around\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"deleteModal.hide()\\\">\\r\\n            No! Cancel.\\r\\n          </button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"DeleteMarketplaceProduct()\\\">\\r\\n            Yes! Delete.\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\r\\n      <h2>Listing Details</h2>\\r\\n      <span>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" (click)=\\\"editModal.show()\\\">\\r\\n          Edit\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\" (click)=\\\"deleteModal.show()\\\">\\r\\n          Delete\\r\\n        </button>\\r\\n      </span>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td>ID</td>\\r\\n                  <td>{{ details?.id }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Item name</td>\\r\\n                  <td>\\r\\n                    {{ details?.attributes?.ItemName }}\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Category</td>\\r\\n                  <td>{{ details?.attributes?.marketplace_category?.data?.attributes?.CategoryName }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Contact number</td>\\r\\n                  <td>{{ details?.attributes?.contactNumber }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Price</td>\\r\\n                  <td>\\r\\n                    {{\\r\\n                    details?.attributes?.Price}}\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Available quantity</td>\\r\\n                  <td>{{ details?.attributes?.AvailableQty }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Unit</td>\\r\\n                  <td>\\r\\n                    {{ details?.attributes?.Unit }}\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Posted by</td>\\r\\n                  <td>{{ details?.attributes?.seller?.data?.attributes?.Name }} - {{\\r\\n                    details?.attributes?.seller?.data?.attributes?.username }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Description</td>\\r\\n                  <td>\\r\\n                    {{details?.attributes?.description}}\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Created at</td>\\r\\n                  <td>{{ dateConvertor(details?.attributes?.createdAt) }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Last updated</td>\\r\\n                  <td>{{ dateConvertor(details?.attributes?.updatedAt) }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Images</td>\\r\\n                  <td>\\r\\n                    <span *ngFor=\\\"let item of details?.attributes?.Images.data\\\">\\r\\n                      <img src=\\\"https://indoramaapp.untanglestrategy.com{{ item?.attributes?.url }}\\\"\\r\\n                        (click)=\\\"showImages(item?.attributes?.url)\\\" alt=\\\"\\\"\\r\\n                        style=\\\"height: 100px; width: 200px; padding-left: 5px; padding-right: 5px;\\\" />\\r\\n                      <!-- <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" data-toggle=\\\"modal\\\"\\r\\n                        (click)=\\\"removePic(item)\\\">\\r\\n                        Delete\\r\\n                      </button> -->\\r\\n                    </span>\\r\\n                    <div class=\\\"mt-4\\\" style=\\\"display: flex;\\\">\\r\\n                      <input type=\\\"file\\\" id=\\\"prof_pic\\\" style=\\\"width: 250px;\\\" accept=\\\".jpg,.jpeg,.JPEG,.png\\\" multiple\\r\\n                        name=\\\"prof_pic\\\" (change)=\\\"onChange($event)\\\" placeholder=\\\"Choose image\\\" />\\r\\n                      <button type=\\\"button\\\" [disabled]=\\\"btnLoading || !productForm.valid\\\"\\r\\n                        class=\\\"btn btn-outline-primary\\\" data-toggle=\\\"modal\\\" (click)=\\\"uploadImages()\\\">\\r\\n                        <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"\\r\\n                          aria-hidden=\\\"true\\\"></span>\\r\\n                        Upload\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div bsModal #editModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n          aria-labelledby=\\\"editModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n          <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n              <div class=\\\"modal-header\\\">\\r\\n                <h4 class=\\\"modal-title\\\">Edit details</h4>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"editModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n              </div>\\r\\n              <div class=\\\"modal-body\\\">\\r\\n                <form [formGroup]=\\\"productForm\\\" (ngSubmit)=\\\"productSubmit()\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"category\\\">Category</label>\\r\\n                        <select class=\\\"form-control\\\" id=\\\"category\\\" required ngModel name=\\\"category\\\"\\r\\n                          formControlName=\\\"category\\\">\\r\\n                          <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n                          <option *ngFor=\\\"let item of Categories\\\" value=\\\"{{ item.id }}\\\">\\r\\n                            {{ item.attributes.CategoryName }}\\r\\n                          </option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"itemName\\\">Title</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"itemName\\\" name=\\\"itemName\\\" formControlName=\\\"itemName\\\"\\r\\n                          placeholder=\\\"Enter title\\\" />\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"price\\\">Price</label>\\r\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"price\\\" name=\\\"price\\\" formControlName=\\\"price\\\"\\r\\n                          placeholder=\\\"Enter price\\\" />\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"unit\\\">Unit</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"unit\\\" name=\\\"unit\\\" formControlName=\\\"unit\\\"\\r\\n                          placeholder=\\\"Enter unit\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"availableQty\\\">Quantity</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"availableQty\\\" name=\\\"availableQty\\\"\\r\\n                          formControlName=\\\"availableQty\\\" placeholder=\\\"Enter available quantity\\\" />\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"contactNumber\\\">Contact Number</label>\\r\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"contactNumber\\\" name=\\\"contactNumber\\\"\\r\\n                          formControlName=\\\"contactNumber\\\" placeholder=\\\"Enter Contact number\\\" />\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"description\\\">Description</label>\\r\\n                        <textarea class=\\\"form-control\\\" id=\\\"description\\\" rows=\\\"5\\\" name=\\\"description\\\"\\r\\n                          formControlName=\\\"description\\\" placeholder=\\\"Enter description\\\"></textarea>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"productModal.hide()\\\">\\r\\n                    Close\\r\\n                  </button>\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-2\\\" [disabled]=\\\"btnLoading || !productForm.valid\\\">\\r\\n                    <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"\\r\\n                      aria-hidden=\\\"true\\\"></span>\\r\\n                    Save changes\\r\\n                  </button>\\r\\n                </form>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\";","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\r\\n      <h2>Marketplace</h2>\\r\\n      <div>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" (click)=\\\"openModal()\\\">\\r\\n          Add New listing\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- <p class=\\\"text-muted mx-3\\\">\\r\\n      To approve a crop price simply select and edit the record without\\r\\n      modifying the data\\r\\n    </p> -->\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <ag-grid-angular #agGrid style=\\\"width: 100%; height: 65vh\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\r\\n            [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\r\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\" (gridReady)=\\\"onGridReady($event)\\\" animateRows=\\\"true\\\">\\r\\n          </ag-grid-angular>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div bsModal #productModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Add Listing</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"productModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"productForm\\\" (ngSubmit)=\\\"productSubmit()\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"category\\\">Category</label>\\r\\n                <select class=\\\"form-control\\\" id=\\\"category\\\" required ngModel name=\\\"category\\\" formControlName=\\\"category\\\">\\r\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\r\\n                  <option *ngFor=\\\"let item of Categories\\\" value=\\\"{{ item.id }}\\\">\\r\\n                    {{ item.attributes.CategoryName }}\\r\\n                  </option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"itemName\\\">Title</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"itemName\\\" name=\\\"itemName\\\" formControlName=\\\"itemName\\\"\\r\\n                  placeholder=\\\"Enter title\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"price\\\">Price</label>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"price\\\" name=\\\"price\\\" formControlName=\\\"price\\\"\\r\\n                  placeholder=\\\"Enter price\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"unit\\\">Unit</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"unit\\\" name=\\\"unit\\\" formControlName=\\\"unit\\\"\\r\\n                  placeholder=\\\"Enter unit\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"availableQty\\\">Quantity</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"availableQty\\\" name=\\\"availableQty\\\"\\r\\n                  formControlName=\\\"availableQty\\\" placeholder=\\\"Enter available quantity\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"contactNumber\\\">Contact Number</label>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"contactNumber\\\" name=\\\"contactNumber\\\"\\r\\n                  formControlName=\\\"contactNumber\\\" placeholder=\\\"Enter Contact number\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"description\\\">Description</label>\\r\\n                <textarea class=\\\"form-control\\\" id=\\\"description\\\" rows=\\\"5\\\" name=\\\"description\\\"\\r\\n                  formControlName=\\\"description\\\" placeholder=\\\"Enter description\\\"></textarea>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"images\\\">Image</label>\\r\\n                <div>\\r\\n                  <img *ngIf=\\\"imageUrl\\\" src=\\\"{{ imageUrl }}\\\" width=\\\"100\\\" height=\\\"100\\\" style=\\\"object-fit: cover\\\" />\\r\\n                </div>\\r\\n                <input type=\\\"file\\\" id=\\\"images\\\" multiple accept=\\\".jpg,.jpeg,.JPEG,.png\\\" name=\\\"images\\\" (change)=\\\"onChange($event)\\\"\\r\\n                  formControlName=\\\"images\\\" placeholder=\\\"Choose images\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"productModal.hide()\\\">\\r\\n            Close\\r\\n          </button>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-2\\\" [disabled]=\\\"btnLoading || !productForm.valid\\\">\\r\\n            <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            Save changes\\r\\n          </button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MarketplaceDetailComponent } from './marketplace-detail.component';\r\nimport { MarketplaceComponent } from './marketplace.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    \r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'cropprices'\r\n      },\r\n      {\r\n        path: 'all',\r\n        // canActivate: [AuthGuard],\r\n        component: MarketplaceComponent,\r\n      },\r\n      {\r\n        path: 'marketplace_details/:id',\r\n        // canActivate: [AuthGuard],\r\n        component: MarketplaceDetailComponent,\r\n        data: {\r\n          // roles: 'MANAGER',\r\n          title: 'Marketplace Details'\r\n        }\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MarketplaceRoutingModule {}\r\n","import { Component, ViewChild } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DataService } from \"../../data.service\";\r\nimport { MarketplaceColumn } from \"../../constants/columnMetadata\";\r\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\r\n\r\n@Component({\r\n  templateUrl: \"marketplace.component.html\",\r\n})\r\nexport class MarketplaceComponent {\r\n  rowSelection: string;\r\n  constructor(\r\n    public dataservice: DataService,\r\n    public router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.columnDefs = [...MarketplaceColumn];\r\n    this.rowSelection = \"single\";\r\n  }\r\n  @ViewChild(\"productModal\") public productModal: ModalDirective;\r\n  @ViewChild(\"detailsModal\") public detailsModal: ModalDirective;\r\n  @ViewChild(\"deleteModal\") public deleteModal: ModalDirective;\r\n\r\n  loading = true;\r\n  btnLoading = false;\r\n  columnDefs = [];\r\n  Categories: any = [];\r\n\r\n  productForm = this.fb.group({\r\n    itemName: [\"\", Validators.required],\r\n    images: [\"\", Validators.required],\r\n    userId: [localStorage.getItem(\"uid\")],\r\n    contactNumber: [\"\", Validators.required],\r\n    price: [\"\", Validators.required],\r\n    availableQty: [\"\", Validators.required],\r\n    unit: [\"\", Validators.required],\r\n    category: [\"\", Validators.required],\r\n    description: [\"\", Validators.required],\r\n  });\r\n  rowData: any = [];\r\n  selectedRows: any = [];\r\n  private gridApi;\r\n  private gridColumnApi;\r\n  file: any = [];\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    console.log(this.router);\r\n    this.getMarketplace();\r\n    this.getCategories();\r\n  }\r\n  getMarketplace() {\r\n    this.dataservice.getMarketplace().valueChanges.subscribe((result: any) => {\r\n      console.log(\"getMarketplace\", result.data.marketplaceProducts.data);\r\n      this.rowData = result.data.marketplaceProducts.data;\r\n    });\r\n  }\r\n  getCategories() {\r\n    this.dataservice\r\n      .getMarketplaceCategories()\r\n      .valueChanges.subscribe((result: any) => {\r\n        console.log(\"getCategories\", result.data.marketplaceCategories.data);\r\n        this.Categories = result.data.marketplaceCategories.data;\r\n      });\r\n  }\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.gridApi.sizeColumnsToFit();\r\n  }\r\n  onRowClicked(event: any) {\r\n    console.log(\"row\", event.data);\r\n  }\r\n  onSelectionChanged(event: any) {\r\n    this.selectedRows = this.gridApi.getSelectedRows();\r\n    this.router.navigate([\"/marketplace/marketplace_details\",this.selectedRows[0].id], {\r\n      state: { data: this.selectedRows },\r\n    });\r\n  }\r\n  // On file Select\r\n  onChange(event: any) {\r\n    this.file = [];\r\n    for (var i = 0; i < event.target.files.length; i++) {\r\n      this.file.push(event.target.files[i]);\r\n    }\r\n    console.log(this.file);\r\n  }\r\n  openModal(data: any) {\r\n    this.productModal.show();\r\n  }\r\n  productSubmit() {\r\n    let resp = {};\r\n    this.btnLoading = true;\r\n    console.log(this.productForm.value);\r\n    this.dataservice.upload(this.file).subscribe((response: any) => {\r\n      if (response.status == 200) {\r\n        console.log(response);\r\n        this.dataservice\r\n          .createMarketplaceProduct(\r\n            this.productForm.value,\r\n            response.body.map((a) => a.id)\r\n          )\r\n          .subscribe((result: any) => {\r\n            resp = result.data;\r\n            console.log(\"response\", result);\r\n            if (result.data.createMarketplaceProduct) {\r\n              this.toastr.success(\"Success!\");\r\n              this.getMarketplace();\r\n              this.file = null;\r\n              this.productForm.reset();\r\n              this.productModal.hide();\r\n              this.gridApi.deselectAll();\r\n              this.btnLoading = false;\r\n            } else {\r\n              this.toastr.error(\"Failed. Please check the fields!\");\r\n              this.btnLoading = false;\r\n            }\r\n          });\r\n      } else {\r\n        this.toastr.error(\"Image failed to upload!\");\r\n        this.btnLoading = false;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DataService } from \"../../data.service\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport {\r\n  dateConverter,\r\n  dateConverterMin,\r\n} from \"../../constants/columnMetadata\";\r\n\r\n@Component({\r\n  templateUrl: \"marketplace-detail.component.html\",\r\n})\r\nexport class MarketplaceDetailComponent implements OnInit {\r\n  constructor(\r\n    public dataservice: DataService,\r\n    private activatedRouter: ActivatedRoute,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {}\r\n  @ViewChild(\"editModal\") public editModal: ModalDirective;\r\n  @ViewChild(\"resultModal\") public resultModal: ModalDirective;\r\n  @ViewChild(\"deleteModal\") public deleteModal: ModalDirective;\r\n\r\n  id: any;\r\n  loading = true;\r\n  details: any = [];\r\n  btnLoading = false;\r\n  dateConverterMin = dateConverterMin;\r\n  dateConverter = dateConverter;\r\n  flag;\r\n  file: any = [];\r\n  Categories: any = [];\r\n\r\n  productForm = this.fb.group({\r\n    itemName: [\"\", Validators.required],\r\n    // images: [\"\", Validators.required],\r\n    // userId: [localStorage.getItem(\"uid\")],\r\n    contactNumber: [\"\", Validators.required],\r\n    price: [\"\", Validators.required],\r\n    availableQty: [\"\", Validators.required],\r\n    unit: [\"\", Validators.required],\r\n    category: [\"\", Validators.required],\r\n    description: [\"\", Validators.required],\r\n  });\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRouter.params.subscribe((params) => {\r\n      this.id = params[\"id\"];\r\n    });\r\n    this.getSingleMarketplaceProduct();\r\n    this.getCategories();\r\n  }\r\n  getSingleMarketplaceProduct() {\r\n    this.dataservice\r\n      .getSingleMarketplaceProduct(this.id)\r\n      .valueChanges.subscribe((result: any) => {\r\n        console.log(\r\n          \"getSingleMarketplaceProduct\",\r\n          result.data.marketplaceProduct.data\r\n        );\r\n        this.details = result.data.marketplaceProduct.data;\r\n        this.productForm = this.fb.group({\r\n          itemName: [this.details.attributes?.ItemName, Validators.required],\r\n          // images: [this.details.attributes?.Images?.data, Validators.required],\r\n          // userId: [this.details?.attributes?.seller?.data?.attributes?.Name],\r\n          contactNumber: [\r\n            this.details.attributes?.contactNumber,\r\n            Validators.required,\r\n          ],\r\n          price: [this.details.attributes?.Price, Validators.required],\r\n          availableQty: [\r\n            this.details.attributes?.AvailableQty,\r\n            Validators.required,\r\n          ],\r\n          unit: [this.details.attributes?.Unit, Validators.required],\r\n          category: [\r\n            this.details.attributes?.marketplace_category?.data?.id,\r\n            Validators.required,\r\n          ],\r\n          description: [\r\n            this.details.attributes?.description,\r\n            Validators.required,\r\n          ],\r\n        });\r\n        console.log(this.productForm);\r\n        this.loading = false;\r\n      });\r\n  }\r\n  getCategories() {\r\n    this.dataservice\r\n      .getMarketplaceCategories()\r\n      .valueChanges.subscribe((result: any) => {\r\n        console.log(\"getCategories\", result.data.marketplaceCategories.data);\r\n        this.Categories = result.data.marketplaceCategories.data;\r\n      });\r\n  }\r\n  dateConvertor(date) {\r\n    return new Date(date);\r\n  }\r\n  openModal(data: any, flag) {\r\n    this.resultModal.show();\r\n    console.log(data, flag);\r\n    this.flag = flag;\r\n  }\r\n  // On file Select\r\n  onChange(event: any) {\r\n    this.file = [];\r\n    for (var i = 0; i < event.target.files.length; i++) {\r\n      this.file.push(event.target.files[i]);\r\n    }\r\n    console.log(this.file);\r\n  }\r\n  productSubmit() {\r\n    let resp = {};\r\n    this.btnLoading = true;\r\n    console.log(this.productForm.value);\r\n    this.dataservice\r\n      .updateMarketplaceProduct(this.productForm.value, this.id)\r\n      .subscribe((result: any) => {\r\n        resp = result.data;\r\n        console.log(\"response\", result);\r\n        if (result.data.updateMarketplaceProduct) {\r\n          this.toastr.success(\"Activity updated successfully!\");\r\n          this.editModal.hide();\r\n          this.btnLoading = false;\r\n          this.getSingleMarketplaceProduct();\r\n        } else {\r\n          this.toastr.error(\"Failed. Please check the fields!\");\r\n          this.btnLoading = false;\r\n        }\r\n      });\r\n  }\r\n  uploadImages() {\r\n    let resp = {};\r\n    this.btnLoading = true;\r\n    this.dataservice.upload(this.file).subscribe((response: any) => {\r\n      if (response.status == 200) {\r\n        console.log(response);\r\n        this.dataservice\r\n          .updateMarketplaceProductImg(\r\n            this.id,\r\n            response.body.map((a) => a.id)\r\n          )\r\n          .subscribe((result: any) => {\r\n            resp = result.data;\r\n            console.log(\"response\", result);\r\n            if (result.data.updateMarketplaceProduct) {\r\n              this.toastr.success(\"Activity updated successfully!\");\r\n              this.btnLoading = false;\r\n              this.getSingleMarketplaceProduct();\r\n            } else {\r\n              this.toastr.error(\"Failed. Please check the fields!\");\r\n              this.btnLoading = false;\r\n            }\r\n          });\r\n      } else {\r\n        this.toastr.error(\"Image failed to upload!\");\r\n        this.btnLoading = false;\r\n      }\r\n    });\r\n  }\r\n  DeleteMarketplaceProduct() {\r\n    this.dataservice.DeleteMarketplaceProduct(this.id).subscribe((result: any) => {\r\n      console.log(\"response\", result);\r\n      if (result.data.deleteMarketplaceProduct) {\r\n        this.toastr.success(\"Success!\");\r\n        this.deleteModal.hide();\r\n        this.router.navigate([\"/marketplace/all\"]);\r\n      } else {\r\n        this.toastr.error(\"Failed!\");\r\n      }\r\n    });\r\n  }\r\n}\r\n"]}