{"version":3,"sources":["webpack:///src/app/views/activities/activities.component.html","webpack:///src/app/views/activities/activity-detail.component.ts","webpack:///src/app/views/activities/activities.component.ts","webpack:///src/app/views/activities/activity-detail.component.html","webpack:///src/app/views/activities/activities-routing.module.ts","webpack:///src/app/views/activities/activities.module.ts"],"names":["ActivityDetailComponent","dataservice","activatedRouter","router","fb","toastr","loading","details","btnLoading","dateConverterMin","dateConverter","Areas","Crops","activitiesForm","group","ActivityType","required","Latitude","Longitude","NoOfAttendees","area","crop","FarmerName","PlannedFarmDay","ConditionOfCrop","Date","Time","Reason","params","subscribe","id","getActivity","getAreas","getCrops","valueChanges","result","console","log","data","activity","attributes","maplink","toString","crops","areas","replace","trim","date","flag","resultModal","show","resp","value","updateActivity","success","editModal","hide","error","deleteActivity","deleteModal","navigate","template","ActivitiesComponent","disableButton","disableNextButton","disablePrevButton","count","columnDefs","States","max","min","pattern","rowData","pageSize","from","to","rowSelection","getActivities","getStates","format","test","meta","activities","pagination","pageCount","total","length","states","lgaid","gridApi","api","gridColumnApi","columnApi","sizeColumnsToFit","event","selectedRows","getSelectedRows","state","activitiesModal","createActivity","reset","deselectAll","routes","path","children","redirectTo","component","title","ActivitiesRoutingModule","imports","forChild","exports","ActivitiesModule","withComponents","forRoot","declarations"],"mappings":"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","file":"views-activities-activities-module-es5.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div\\n      class=\\\"card-header\\\"\\n      style=\\\"display: flex; justify-content: space-between\\\"\\n    >\\n      <h2>Activities</h2>\\n      <div>\\n        <!-- <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\" [disabled]=\\\"disableButton\\\"\\n          (click)=\\\"deleteModal.show()\\\">\\n          Delete\\n        </button>\\n        <button type=\\\"button\\\" [disabled]=\\\"disableButton\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\"\\n          (click)=\\\"openModal('Edit')\\\">\\n          Edit\\n        </button> -->\\n        <button\\n          type=\\\"button\\\"\\n          [disabled]=\\\"!disableButton\\\"\\n          class=\\\"btn btn-primary\\\"\\n          data-toggle=\\\"modal\\\"\\n          (click)=\\\"openModal()\\\"\\n        >\\n          Add New Activity\\n        </button>\\n      </div>\\n    </div>\\n    <!-- <p class=\\\"text-muted mx-3\\\">\\n      To approve a crop price simply select and edit the record without\\n      modifying the data\\n    </p> -->\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <ag-grid-angular\\n            #agGrid\\n            style=\\\"width: 100%; height: 65vh\\\"\\n            id=\\\"myGrid\\\"\\n            class=\\\"ag-theme-alpine\\\"\\n            [columnDefs]=\\\"columnDefs\\\"\\n            [rowData]=\\\"rowData\\\"\\n            [rowSelection]=\\\"rowSelection\\\"\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\n            (gridReady)=\\\"onGridReady($event)\\\"\\n            animateRows=\\\"true\\\"\\n          >\\n          </ag-grid-angular>\\n          <span class=\\\"float-left mt-3\\\"\\n            >{{ from }} to {{ to }} of {{ meta?.pagination?.total }}</span\\n          >\\n          <button\\n            type=\\\"button\\\"\\n            [disabled]=\\\"disableNextButton\\\"\\n            class=\\\"btn btn-primary float-right m-2\\\"\\n            (click)=\\\"loadNext()\\\"\\n          >\\n            Next\\n          </button>\\n          <span class=\\\"float-right mt-3\\\"\\n            >Page {{ meta?.pagination?.page }} of\\n            {{ meta?.pagination?.pageCount }}</span\\n          >\\n          <button\\n            type=\\\"button\\\"\\n            [disabled]=\\\"disablePrevButton\\\"\\n            class=\\\"btn btn-primary float-right m-2\\\"\\n            (click)=\\\"loadPrev()\\\"\\n          >\\n            Prev\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div\\n  bsModal\\n  #activitiesModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add Activity</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"activitiesModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"activitiesForm\\\" (ngSubmit)=\\\"activitiesSubmit()\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"ActivityType\\\"\\n                  >Activity Type <span class=\\\"danger\\\">*</span></label\\n                >\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"ActivityType\\\"\\n                  required\\n                  ngModel\\n                  name=\\\"ActivityType\\\"\\n                  formControlName=\\\"ActivityType\\\"\\n                >\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option value=\\\"FarmDemo\\\">Farm Demo</option>\\n                  <option value=\\\"GroupFarmerTraining\\\">\\n                    Group Farmer Training\\n                  </option>\\n                  <option value=\\\"MegaFarmerTraining\\\">\\n                    Mega Farmer Training\\n                  </option>\\n                  <option value=\\\"FarmDay\\\">Farm Day</option>\\n                  <option value=\\\"RetailersTraining\\\">Retailers Training</option>\\n                </select>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"area\\\">City <span class=\\\"danger\\\">*</span></label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"area\\\"\\n                  required\\n                  ngModel\\n                  name=\\\"area\\\"\\n                  formControlName=\\\"area\\\"\\n                >\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option *ngFor=\\\"let item of Areas\\\" value=\\\"{{ item.id }}\\\">\\n                    {{ item.attributes.Name }}\\n                  </option>\\n                </select>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"Latitude\\\"\\n                  >Latitude <span class=\\\"danger\\\">*</span></label\\n                >\\n                <input\\n                  type=\\\"number\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"Latitude\\\"\\n                  name=\\\"Latitude\\\"\\n                  formControlName=\\\"Latitude\\\"\\n                  placeholder=\\\"Enter Latitude\\\"\\n                />\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"Longitude\\\"\\n                  >Longitude <span class=\\\"danger\\\">*</span></label\\n                >\\n                <input\\n                  type=\\\"number\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"Longitude\\\"\\n                  name=\\\"Longitude\\\"\\n                  formControlName=\\\"Longitude\\\"\\n                  placeholder=\\\"Enter Longitude\\\"\\n                />\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"NoOfAttendees\\\"\\n                  >Number of attendees <span class=\\\"danger\\\">*</span></label\\n                >\\n                <input\\n                  type=\\\"number\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"NoOfAttendees\\\"\\n                  name=\\\"NoOfAttendees\\\"\\n                  formControlName=\\\"NoOfAttendees\\\"\\n                  placeholder=\\\"Enter no. of attendees\\\"\\n                />\\n                <div *ngIf=\\\"activitiesForm.value.NoOfAttendees > 999999\\\" class=\\\"danger\\\">Maximum 9999999</div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"Reason\\\">Body <span class=\\\"danger\\\">*</span></label>\\n                <textarea\\n                  class=\\\"form-control\\\"\\n                  id=\\\"Reason\\\"\\n                  rows=\\\"5\\\"\\n                  name=\\\"Reason\\\"\\n                  formControlName=\\\"Reason\\\"\\n                  placeholder=\\\"Enter body\\\"\\n                ></textarea>\\n              </div>\\n            </div>\\n            <div class=\\\"col\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"FarmerName\\\">Farmer name</label>\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"FarmerName\\\"\\n                  name=\\\"FarmerName\\\"\\n                  formControlName=\\\"FarmerName\\\"\\n                  placeholder=\\\"Enter name\\\"\\n                />\\n                <div *ngIf=\\\"checkSpecialCharacters(activitiesForm.value.FarmerName)\\\" class=\\\"danger\\\">Special characters not permitted</div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"crop\\\">Crop</label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"crop\\\"\\n                  ngModel\\n                  name=\\\"crop\\\"\\n                  formControlName=\\\"crop\\\"\\n                >\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option *ngFor=\\\"let item of Crops\\\" value=\\\"{{ item.id }}\\\">\\n                    {{ item.attributes.Name }}\\n                  </option>\\n                </select>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"ConditionOfCrop\\\">Condition of crop</label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"ConditionOfCrop\\\"\\n                  name=\\\"ConditionOfCrop\\\"\\n                  formControlName=\\\"ConditionOfCrop\\\"\\n                >\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option value=\\\"Good\\\">Good</option>\\n                  <option value=\\\"VeryGood\\\">Very Good</option>\\n                  <option value=\\\"Excellent\\\">Excellent</option>\\n                </select>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"PlannedFarmDay\\\">Planned farm day</label>\\n                <input\\n                  type=\\\"date\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"PlannedFarmDay\\\"\\n                  name=\\\"PlannedFarmDay\\\"\\n                  formControlName=\\\"PlannedFarmDay\\\"\\n                  placeholder=\\\"Enter Date\\\"\\n                />\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"Date\\\">Date <span class=\\\"danger\\\">*</span></label>\\n                <input\\n                  type=\\\"date\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"Date\\\"\\n                  name=\\\"Date\\\"\\n                  formControlName=\\\"Date\\\"\\n                  placeholder=\\\"Enter Date\\\"\\n                />\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"Time\\\">Time <span class=\\\"danger\\\">*</span></label>\\n                <input\\n                  type=\\\"time\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"Time\\\"\\n                  name=\\\"Time\\\"\\n                  formControlName=\\\"Time\\\"\\n                  placeholder=\\\"Enter Time\\\"\\n                />\\n              </div>\\n            </div>\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"activitiesModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !activitiesForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Save changes\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n    <!-- /.modal-content -->\\n  </div>\\n  <!-- /.modal-dialog -->\\n</div>\\n\";","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { DataService } from \"../../data.service\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport {\n  dateConverter,\n  dateConverterMin,\n} from \"../../constants/columnMetadata\";\n\n@Component({\n  templateUrl: \"activity-detail.component.html\",\n})\nexport class ActivityDetailComponent implements OnInit {\n  constructor(\n    public dataservice: DataService,\n    private activatedRouter: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) {}\n  @ViewChild(\"editModal\") public editModal: ModalDirective;\n  @ViewChild(\"resultModal\") public resultModal: ModalDirective;\n  @ViewChild(\"deleteModal\") public deleteModal: ModalDirective;\n\n  id: any;\n  loading = true;\n  details: any = [];\n  btnLoading = false;\n  dateConverterMin = dateConverterMin;\n  dateConverter = dateConverter;\n  Areas: any = [];\n  Crops: any = [];\n  flag;\n  maplink;\n\n  activitiesForm = this.fb.group({\n    ActivityType: [\"\", Validators.required],\n    Latitude: [\"\", Validators.required],\n    Longitude: [\"\", Validators.required],\n    NoOfAttendees: [\"\", Validators.required],\n    area: [\"\", Validators.required],\n    crop: [\"\"],\n    FarmerName: [\"\"],\n    PlannedFarmDay: [\"\"],\n    ConditionOfCrop: [\"\"],\n    Date: [\"\", Validators.required],\n    Time: [\"\", Validators.required],\n    Reason: [\"\", Validators.required],\n  });\n\n  ngOnInit(): void {\n    this.activatedRouter.params.subscribe((params) => {\n      this.id = params[\"id\"];\n    });\n    this.getActivity();\n    this.getAreas();\n    this.getCrops();\n  }\n  getActivity() {\n    this.dataservice\n      .getActivity(this.id)\n      .valueChanges.subscribe((result: any) => {\n        console.log(\"getActivity\", result?.data?.activity?.data);\n        this.details = result?.data?.activity?.data;\n        this.activitiesForm = this.fb.group({\n          ActivityType: [\n            this.details?.attributes?.ActivityType,\n            Validators.required,\n          ],\n          Latitude: [this.details?.attributes?.Latitude, Validators.required],\n          Longitude: [this.details?.attributes?.Longitude, Validators.required],\n          NoOfAttendees: [\n            this.details?.attributes?.NoOfAttendees,\n            Validators.required,\n          ],\n          area: [this.details?.attributes?.area?.data?.id, Validators.required],\n          crop: [this.details?.attributes?.crop?.data?.id],\n          FarmerName: [this.details?.attributes?.FarmerName],\n          PlannedFarmDay: [this.details?.attributes?.PlannedFarmDay],\n          ConditionOfCrop: [this.details?.attributes?.ConditionOfCrop],\n          Date: [this.details?.attributes?.Date, Validators.required],\n          Time: [this.details?.attributes?.Time, Validators.required],\n          Reason: [this.details?.attributes?.Reason, Validators.required],\n        });\n        this.maplink =\n          \"https://maps.google.com/?q=\" +\n          this.details?.attributes?.Latitude?.toString() +\n          \",\" +\n          this.details?.attributes?.Longitude?.toString();\n        this.loading = false;\n      });\n  }\n  getCrops() {\n    this.dataservice.getCrops().valueChanges.subscribe((result: any) => {\n      console.log(\"getCrops\", result.data.crops.data);\n      this.Crops = result.data.crops.data;\n    });\n  }\n  getAreas(id?) {\n    this.dataservice.getAreas(id).valueChanges.subscribe((result: any) => {\n      console.log(\"getAreas\", result.data.areas.data);\n      this.Areas = result.data.areas.data;\n    });\n  }\n  returnActivityType(data) {\n    if(data) return data.replace(/([A-Z])/g, \" $1\").trim();\n  }\n  dateConvertor(date) {\n    return new Date(date);\n  }\n  openModal(data: any, flag) {\n    this.resultModal.show();\n    console.log(data, flag);\n    this.flag = flag;\n  }\n  FormSubmit() {\n    let resp = {};\n    console.log(this.activitiesForm.value);\n    this.btnLoading = true;\n    this.dataservice\n      .updateActivity(this.activitiesForm.value, this.id)\n      .subscribe((result: any) => {\n        resp = result.data;\n        console.log(\"response\", result);\n        if (result.data.updateActivity) {\n          this.toastr.success(\"Activity updated successfully!\");\n          this.btnLoading = false;\n          this.editModal.hide();\n          this.getActivity();\n        } else {\n          this.toastr.error(\"Failed. Please check the fields!\");\n          this.btnLoading = false;\n        }\n      });\n  }\n  deleteActivity() {\n    this.dataservice.deleteActivity(this.id).subscribe((result: any) => {\n      console.log(\"response\", result);\n      if (result.data.deleteActivity) {\n        this.toastr.success(\"Success!\");\n        this.deleteModal.hide();\n        this.router.navigate([\"/activities/all\"]);\n      } else {\n        this.toastr.error(\"Failed!\");\n      }\n    });\n  }\n}\n","import { Component, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { DataService } from \"../../data.service\";\nimport { ActivitiesColumn } from \"../../constants/columnMetadata\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\n\n@Component({\n  templateUrl: \"activities.component.html\",\n})\nexport class ActivitiesComponent {\n  rowSelection: string;\n  constructor(\n    public dataservice: DataService,\n    public router: Router,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) {\n    this.columnDefs = [...ActivitiesColumn];\n    this.rowSelection = \"single\";\n  }\n  @ViewChild(\"activitiesModal\") public activitiesModal: ModalDirective;\n\n  loading = true;\n  btnLoading = false;\n  disableButton = true;\n  disableNextButton = false;\n  disablePrevButton = true;\n  count = 1;\n\n  columnDefs = [];\n  States: any = [];\n  Areas: any = [];\n  Crops: any = [];\n\n  activitiesForm = this.fb.group({\n    ActivityType: [\"\", Validators.required],\n    Latitude: [\"\", Validators.required],\n    Longitude: [\"\", Validators.required],\n    NoOfAttendees: [\n      \"\",\n      [Validators.max(9999999), Validators.min(1), Validators.required],\n    ],\n    area: [\"\", Validators.required],\n    crop: [\"\"],\n    FarmerName: [\"\", Validators.pattern(\"[a-zA-Z ]*\")],\n    PlannedFarmDay: [\"\"],\n    ConditionOfCrop: [\"\"],\n    Date: [\"\", Validators.required],\n    Time: [\"\", Validators.required],\n    Reason: [\"\", Validators.required],\n  });\n  rowData: any = [];\n  meta;\n  pageSize = 20;\n  from = 1;\n  to = 20;\n  private gridApi;\n  private gridColumnApi;\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.getActivities();\n    this.getCrops();\n    this.getAreas();\n    this.getStates();\n  }\n  checkSpecialCharacters(data) {\n    let format = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+/;\n    if (format.test(data)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  getActivities() {\n    console.log(\"jshdbfkjhsdfkjsdf\");\n    this.dataservice\n      .getActivities(1, this.pageSize)\n      .valueChanges.subscribe((result: any) => {\n        this.meta = result.data.activities.meta;\n        if (this.meta?.pagination?.pageCount <= 1) {\n          this.disablePrevButton = true;\n          this.disableNextButton = true;\n        }\n        if (this.meta?.pagination?.total < this.pageSize) {\n          this.to = this.meta?.pagination?.total;\n        }\n        this.rowData = result.data.activities.data;\n      });\n  }\n  loadNext() {\n    this.count++;\n    this.disablePrevButton = false;\n    this.from = this.from + this.pageSize;\n    this.to =\n      this.to + this.pageSize > this.meta?.pagination?.total\n        ? this.meta?.pagination?.total\n        : this.to + this.pageSize;\n    if (this.count === this.meta.pagination.pageCount) {\n      this.disableNextButton = true;\n    }\n    this.dataservice\n      .getActivities(this.count, this.pageSize)\n      .valueChanges.subscribe((result: any) => {\n        this.meta = result.data.activities.meta;\n        this.rowData = result.data.activities.data;\n      });\n  }\n  loadPrev() {\n    this.count--;\n    if (this.count < this.meta.pagination.pageCount) {\n      this.disableNextButton = false;\n    }\n    if (this.count === 1) {\n      this.disablePrevButton = true;\n    }\n    this.from = this.from - this.pageSize;\n    this.to = this.to - this.rowData.length;\n    this.dataservice\n      .getActivities(this.count, this.pageSize)\n      .valueChanges.subscribe((result: any) => {\n        this.meta = result.data.activities.meta;\n        this.rowData = result.data.activities.data;\n      });\n  }\n  getCrops() {\n    this.dataservice.getCrops().valueChanges.subscribe((result: any) => {\n      this.Crops = result.data.crops.data;\n    });\n  }\n  getStates() {\n    this.dataservice.getStates().valueChanges.subscribe((result: any) => {\n      this.States = result.data.states.data;\n    });\n  }\n  getAreas(lgaid?) {\n    this.dataservice.getAreas(lgaid).valueChanges.subscribe((result: any) => {\n      this.Areas = result.data.areas.data;\n    });\n  }\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.gridApi.sizeColumnsToFit();\n  }\n  onRowClicked(event: any) {\n    console.log(\"row\", event.data);\n  }\n  onSelectionChanged(event: any) {\n    let selectedRows = this.gridApi.getSelectedRows();\n    this.router.navigate([\"/activities/activity_details\", selectedRows[0].id], {\n      state: { data: selectedRows },\n    });\n  }\n  openModal() {\n    this.activitiesModal.show();\n  }\n  activitiesSubmit() {\n    let resp = {};\n    this.btnLoading = true;\n    this.dataservice\n      .createActivity(this.activitiesForm.value)\n      .subscribe((result: any) => {\n        resp = result.data;\n        if (result.data.createActivity) {\n          this.toastr.success(\"Success!\");\n          this.getActivities();\n          this.activitiesForm.reset();\n          this.btnLoading = false;\n          this.activitiesModal.hide();\n          this.gridApi.deselectAll();\n        } else {\n          this.toastr.error(\"Failed. Please check the fields!\");\n          this.btnLoading = false;\n        }\n      });\n  }\n}\n","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div bsModal #deleteModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"editModalLabel\\\"\\n    aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-body text-center\\\">\\n          Do you want to delete this activity?\\n        </div>\\n        <div class=\\\"modal-footer justify-content-around\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"deleteModal.hide()\\\">\\n            No! Cancel.\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deleteActivity()\\\">\\n            Yes! Delete.\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\n      <h2>Activity Details</h2>\\n      <span>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" (click)=\\\"editModal.show()\\\">\\n          Edit\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\" (click)=\\\"deleteModal.show()\\\">\\n          Delete\\n        </button>\\n      </span>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n          <div class=\\\"row\\\">\\n            <table class=\\\"table table-striped\\\">\\n              <tbody>\\n                <tr>\\n                  <td>ID</td>\\n                  <td>{{ details?.id }}</td>\\n                </tr>\\n                <tr>\\n                  <td>Activity type</td>\\n                  <td>\\n                    {{ returnActivityType(details?.attributes?.ActivityType) }}\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Date</td>\\n                  <td>\\n                    {{ dateConverterMin(details?.attributes?.Date) }}\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Time</td>\\n                  <td>{{ details?.attributes?.Time }}</td>\\n                </tr>\\n                <tr>\\n                  <td>City</td>\\n                  <td>{{ details?.attributes?.area?.data?.attributes?.Name }}</td>\\n                </tr>\\n                <tr>\\n                  <td>No. of Attendees</td>\\n                  <td>\\n                    {{\\n                    details?.attributes?.NoOfAttendees}}\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Location</td>\\n                  <td>\\n                    <a href=\\\"{{ maplink }}\\\" target=\\\"_blank\\\">Click here to view location</a>\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Farmer Name</td>\\n                  <td>{{ details?.attributes?.FarmerName }}</td>\\n                </tr>\\n                <tr>\\n                  <td>Crop</td>\\n                  <td>\\n                    {{ details?.attributes?.crop?.data?.attributes?.Name }}\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Condition of crop</td>\\n                  <td>{{ details?.attributes?.ConditionOfCrop }}</td>\\n                </tr>\\n                <tr>\\n                  <td>Planned farm day</td>\\n                  <td>\\n                    {{\\n                    dateConverterMin(details?.attributes?.PlannedFarmDay)\\n                    }}\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Body</td>\\n                  <td>\\n                    {{details?.attributes?.Reason}}\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Created at</td>\\n                  <td>{{ dateConvertor(details?.attributes?.createdAt) }}</td>\\n                </tr>\\n                <tr>\\n                  <td>Last updated</td>\\n                  <td>{{ dateConvertor(details?.attributes?.updatedAt) }}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n        <div bsModal #editModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n          aria-labelledby=\\\"editModalLabel\\\" aria-hidden=\\\"true\\\">\\n          <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n              <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Edit details</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"editModal.hide()\\\" aria-label=\\\"Close\\\">\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n              </div>\\n              <div class=\\\"modal-body\\\">\\n                <form [formGroup]=\\\"activitiesForm\\\" (ngSubmit)=\\\"FormSubmit()\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"ActivityType\\\">Activity Type <span class=\\\"danger\\\">*</span></label>\\n                        <select\\n                          class=\\\"form-control\\\"\\n                          id=\\\"ActivityType\\\"\\n                          required\\n                          ngModel\\n                          name=\\\"ActivityType\\\"\\n                          formControlName=\\\"ActivityType\\\"\\n                        >\\n                          <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                          <option value=\\\"FarmDemo\\\">Farm Demo</option>\\n                          <option value=\\\"GroupFarmerTraining\\\">\\n                            Group Farmer Training\\n                          </option>\\n                          <option value=\\\"MegaFarmerTraining\\\">\\n                            Mega Farmer Training\\n                          </option>\\n                          <option value=\\\"FarmDay\\\">Farm Day</option>\\n                          <option value=\\\"RetailersTraining\\\">Retailers Training</option>\\n                        </select>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"area\\\">City <span class=\\\"danger\\\">*</span></label>\\n                        <select\\n                          class=\\\"form-control\\\"\\n                          id=\\\"area\\\"\\n                          required\\n                          ngModel\\n                          name=\\\"area\\\"\\n                          formControlName=\\\"area\\\"\\n                        >\\n                          <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                          <option *ngFor=\\\"let item of Areas\\\" value=\\\"{{ item.id }}\\\">\\n                            {{ item.attributes.Name }}\\n                          </option>\\n                        </select>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"Latitude\\\">Latitude <span class=\\\"danger\\\">*</span></label>\\n                        <input\\n                          type=\\\"text\\\"\\n                          class=\\\"form-control\\\"\\n                          id=\\\"Latitude\\\"\\n                          name=\\\"Latitude\\\"\\n                          formControlName=\\\"Latitude\\\"\\n                          placeholder=\\\"Enter Latitude\\\"\\n                        />\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"Longitude\\\">Longitude <span class=\\\"danger\\\">*</span></label>\\n                        <input\\n                          type=\\\"text\\\"\\n                          class=\\\"form-control\\\"\\n                          id=\\\"Longitude\\\"\\n                          name=\\\"Longitude\\\"\\n                          formControlName=\\\"Longitude\\\"\\n                          placeholder=\\\"Enter Longitude\\\"\\n                        />\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"NoOfAttendees\\\">Number of attendees <span class=\\\"danger\\\">*</span></label>\\n                        <input\\n                          type=\\\"text\\\"\\n                          class=\\\"form-control\\\"\\n                          id=\\\"NoOfAttendees\\\"\\n                          name=\\\"NoOfAttendees\\\"\\n                          formControlName=\\\"NoOfAttendees\\\"\\n                          placeholder=\\\"Enter No. of attendees\\\"\\n                        />\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"Reason\\\">Body <span class=\\\"danger\\\">*</span></label>\\n                        <textarea\\n                          class=\\\"form-control\\\"\\n                          id=\\\"Reason\\\"\\n                          rows=\\\"5\\\"\\n                          name=\\\"Reason\\\"\\n                          formControlName=\\\"Reason\\\"\\n                          placeholder=\\\"Enter body\\\"\\n                        ></textarea>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"FarmerName\\\">Farmer name</label>\\n                        <input\\n                          type=\\\"text\\\"\\n                          class=\\\"form-control\\\"\\n                          id=\\\"FarmerName\\\"\\n                          name=\\\"FarmerName\\\"\\n                          formControlName=\\\"FarmerName\\\"\\n                          placeholder=\\\"Enter name\\\"\\n                        />\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"crop\\\">Crop</label>\\n                        <select\\n                          class=\\\"form-control\\\"\\n                          id=\\\"crop\\\"\\n                          ngModel\\n                          name=\\\"crop\\\"\\n                          formControlName=\\\"crop\\\"\\n                        >\\n                          <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                          <option *ngFor=\\\"let item of Crops\\\" value=\\\"{{ item.id }}\\\">\\n                            {{ item.attributes.Name }}\\n                          </option>\\n                        </select>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"ConditionOfCrop\\\">Condition of crop</label>\\n                        <input\\n                          type=\\\"text\\\"\\n                          class=\\\"form-control\\\"\\n                          id=\\\"ConditionOfCrop\\\"\\n                          name=\\\"ConditionOfCrop\\\"\\n                          formControlName=\\\"ConditionOfCrop\\\"\\n                          placeholder=\\\"Enter condition\\\"\\n                        />\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"PlannedFarmDay\\\">Planned farm day</label>\\n                        <input\\n                          type=\\\"date\\\"\\n                          class=\\\"form-control\\\"\\n                          id=\\\"PlannedFarmDay\\\"\\n                          name=\\\"PlannedFarmDay\\\"\\n                          formControlName=\\\"PlannedFarmDay\\\"\\n                          placeholder=\\\"Enter Date\\\"\\n                        />\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"Date\\\">Date <span class=\\\"danger\\\">*</span></label>\\n                        <input\\n                          type=\\\"date\\\"\\n                          class=\\\"form-control\\\"\\n                          id=\\\"Date\\\"\\n                          name=\\\"Date\\\"\\n                          formControlName=\\\"Date\\\"\\n                          placeholder=\\\"Enter Date\\\"\\n                        />\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"Time\\\">Time <span class=\\\"danger\\\">*</span></label>\\n                        <input\\n                          type=\\\"time\\\"\\n                          class=\\\"form-control\\\"\\n                          id=\\\"Time\\\"\\n                          name=\\\"Time\\\"\\n                          formControlName=\\\"Time\\\"\\n                          placeholder=\\\"Enter Time\\\"\\n                        />\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn btn-secondary\\\"\\n                    (click)=\\\"editModal.hide()\\\"\\n                  >\\n                    Close\\n                  </button>\\n                  <button\\n                    type=\\\"submit\\\"\\n                    class=\\\"btn btn-primary ml-2\\\"\\n                    [disabled]=\\\"btnLoading || !activitiesForm.valid\\\"\\n                  >\\n                    <span\\n                      *ngIf=\\\"btnLoading\\\"\\n                      class=\\\"spinner-border spinner-border-sm\\\"\\n                      role=\\\"status\\\"\\n                      aria-hidden=\\\"true\\\"\\n                    ></span>\\n                    Save changes\\n                  </button>\\n                </form>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ActivitiesComponent } from './activities.component';\nimport { ActivityDetailComponent } from './activity-detail.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    \n    children: [\n      {\n        path: '',\n        redirectTo: 'cropprices'\n      },\n      {\n        path: 'all',\n        // canActivate: [AuthGuard],\n        component: ActivitiesComponent,\n        data: {\n          // roles: 'MANAGER',\n          title: 'Activities'\n        }\n      },\n      {\n        path: 'activity_details/:id',\n        // canActivate: [AuthGuard],\n        component: ActivityDetailComponent,\n        data: {\n          // roles: 'MANAGER',\n          title: 'Activity Details'\n        }\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ActivitiesRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { ActivitiesComponent } from './activities.component';\n\n// Dropdowns Component\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\n\n// Buttons Routing\nimport { ActivitiesRoutingModule } from './activities-routing.module';\n\n// Angular\nimport { AgGridModule } from 'ag-grid-angular';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { ActivityDetailComponent } from './activity-detail.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TabsModule,\n    ReactiveFormsModule,\n    AgGridModule.withComponents([]),\n    ActivitiesRoutingModule,\n    BsDropdownModule.forRoot(),\n    ModalModule.forRoot(),\n    FormsModule\n  ],\n  declarations: [\n    ActivitiesComponent,\n    ActivityDetailComponent\n  ]\n})\nexport class ActivitiesModule { }\n"]}