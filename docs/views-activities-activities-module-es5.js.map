{"version":3,"sources":["webpack:///src/app/views/activities/activities.component.html","webpack:///src/app/views/activities/activity-detail.component.ts","webpack:///src/app/views/activities/activities.component.ts","webpack:///src/app/views/activities/activity-detail.component.html","webpack:///src/app/views/activities/activities-routing.module.ts","webpack:///src/app/views/activities/activities.module.ts"],"names":["ActivityDetailComponent","dataservice","activatedRouter","router","fb","toastr","loading","details","btnLoading","dateConverterMin","dateConverter","Areas","States","LGA","Crops","activitiesForm","group","ActivityType","required","Latitude","Longitude","NoOfAttendees","state","lga","area","crop","FarmerName","PlannedFarmDay","ConditionOfCrop","Date","Time","Reason","params","subscribe","id","getActivity","getStates","getLGAs","getAreas","getCrops","valueChanges","result","console","log","data","activity","attributes","maplink","toString","crops","areas","states","lgas","event","target","value","replace","trim","date","flag","resultModal","show","resp","updateActivity","success","editModal","hide","error","deleteActivity","deleteModal","navigate","template","ActivitiesComponent","disableButton","disableNextButton","disablePrevButton","count","columnDefs","file","max","min","pattern","downloadExcelForm","fromDate","toDate","uploadExcelForm","File","rowData","pageSize","from","to","rowSelection","getActivities","format","test","meta","activities","pagination","pageCount","total","length","lgaid","gridApi","api","gridColumnApi","columnApi","sizeColumnsToFit","i","files","push","selectedRows","getSelectedRows","activitiesModal","createActivity","reset","deselectAll","downloadActivities","body","status","message","window","open","apiUrl","path","uploadActivities","response","uploadActivitiesModal","routes","children","redirectTo","component","title","ActivitiesRoutingModule","imports","forChild","exports","ActivitiesModule","withComponents","forRoot","declarations"],"mappings":"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","file":"views-activities-activities-module-es5.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div\\n      class=\\\"card-header\\\"\\n      style=\\\"display: flex; justify-content: space-between\\\"\\n    >\\n      <h2>Activities</h2>\\n      <div>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-outline-secondary\\\"\\n          data-toggle=\\\"modal\\\"\\n          (click)=\\\"downloadActivitiesModal.show()\\\"\\n        >\\n          Download sheets\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-outline-secondary\\\"\\n          data-toggle=\\\"modal\\\"\\n          (click)=\\\"uploadActivitiesModal.show()\\\"\\n        >\\n          Upload sheet\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          [disabled]=\\\"!disableButton\\\"\\n          class=\\\"btn btn-primary\\\"\\n          data-toggle=\\\"modal\\\"\\n          (click)=\\\"openModal()\\\"\\n        >\\n          Add New Activity\\n        </button>\\n      </div>\\n    </div>\\n    <!-- <p class=\\\"text-muted mx-3\\\">\\n      To approve a crop price simply select and edit the record without\\n      modifying the data\\n    </p> -->\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <ag-grid-angular\\n            #agGrid\\n            style=\\\"width: 100%; height: 65vh\\\"\\n            id=\\\"myGrid\\\"\\n            class=\\\"ag-theme-alpine\\\"\\n            [columnDefs]=\\\"columnDefs\\\"\\n            [rowData]=\\\"rowData\\\"\\n            [rowSelection]=\\\"rowSelection\\\"\\n            (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\n            (gridReady)=\\\"onGridReady($event)\\\"\\n            animateRows=\\\"true\\\"\\n          >\\n          </ag-grid-angular>\\n          <span class=\\\"float-left mt-3\\\"\\n            >{{ from }} to {{ to }} of {{ meta?.pagination?.total }}</span\\n          >\\n          <button\\n            type=\\\"button\\\"\\n            [disabled]=\\\"disableNextButton\\\"\\n            class=\\\"btn btn-primary float-right m-2\\\"\\n            (click)=\\\"loadNext()\\\"\\n          >\\n            Next\\n          </button>\\n          <span class=\\\"float-right mt-3\\\"\\n            >Page {{ meta?.pagination?.page }} of\\n            {{ meta?.pagination?.pageCount }}</span\\n          >\\n          <button\\n            type=\\\"button\\\"\\n            [disabled]=\\\"disablePrevButton\\\"\\n            class=\\\"btn btn-primary float-right m-2\\\"\\n            (click)=\\\"loadPrev()\\\"\\n          >\\n            Prev\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div\\n  bsModal\\n  #activitiesModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add Activity</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"activitiesModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"activitiesForm\\\" (ngSubmit)=\\\"activitiesSubmit()\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"ActivityType\\\"\\n                  >Activity Type <span class=\\\"danger\\\">*</span></label\\n                >\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"ActivityType\\\"\\n                  required\\n                  ngModel\\n                  name=\\\"ActivityType\\\"\\n                  formControlName=\\\"ActivityType\\\"\\n                >\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option value=\\\"FarmDemo\\\">Farm Demo</option>\\n                  <option value=\\\"GroupFarmerTraining\\\">\\n                    Group Farmer Training\\n                  </option>\\n                  <option value=\\\"MegaFarmerTraining\\\">\\n                    Mega Farmer Training\\n                  </option>\\n                  <option value=\\\"FarmDay\\\">Farm Day</option>\\n                  <option value=\\\"RetailersTraining\\\">Retailers Training</option>\\n                </select>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"state\\\">State <span class=\\\"danger\\\">*</span></label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"state\\\"\\n                  required\\n                  ngModel\\n                  name=\\\"state\\\"\\n                  formControlName=\\\"state\\\"\\n                  (change)=\\\"filterLGA($event)\\\"\\n                >\\n                  <option value=\\\"\\\" disabled selected hidden>\\n                    Choose...\\n                  </option>\\n                  <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\n                    {{ item.attributes.Name }}\\n                  </option>\\n                </select>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"lga\\\">LGA <span class=\\\"danger\\\">*</span></label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"lga\\\"\\n                  required\\n                  ngModel\\n                  name=\\\"lga\\\"\\n                  formControlName=\\\"lga\\\"\\n                  (change)=\\\"filterArea($event)\\\"\\n                >\\n                  <option value=\\\"\\\" disabled selected hidden>\\n                    Choose...\\n                  </option>\\n                  <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\n                    {{ item.attributes.Name }}\\n                  </option>\\n                </select>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"area\\\">City <span class=\\\"danger\\\">*</span></label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"area\\\"\\n                  required\\n                  ngModel\\n                  name=\\\"area\\\"\\n                  formControlName=\\\"area\\\"\\n                >\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option *ngFor=\\\"let item of Areas\\\" value=\\\"{{ item.id }}\\\">\\n                    {{ item.attributes.Name }}\\n                  </option>\\n                </select>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"NoOfAttendees\\\"\\n                  >Number of attendees</label\\n                >\\n                <input\\n                  type=\\\"number\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"NoOfAttendees\\\"\\n                  name=\\\"NoOfAttendees\\\"\\n                  formControlName=\\\"NoOfAttendees\\\"\\n                  placeholder=\\\"Enter no. of attendees\\\"\\n                />\\n                <div\\n                  *ngIf=\\\"activitiesForm.value.NoOfAttendees > 999999\\\"\\n                  class=\\\"danger\\\"\\n                >\\n                  Maximum 9999999\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"Reason\\\">Body</label>\\n                <textarea\\n                  class=\\\"form-control\\\"\\n                  id=\\\"Reason\\\"\\n                  rows=\\\"5\\\"\\n                  name=\\\"Reason\\\"\\n                  formControlName=\\\"Reason\\\"\\n                  placeholder=\\\"Enter body\\\"\\n                ></textarea>\\n              </div>\\n            </div>\\n            <div class=\\\"col\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"FarmerName\\\">Farmer name</label>\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"FarmerName\\\"\\n                  name=\\\"FarmerName\\\"\\n                  formControlName=\\\"FarmerName\\\"\\n                  placeholder=\\\"Enter name\\\"\\n                />\\n                <div\\n                  *ngIf=\\\"\\n                    checkSpecialCharacters(activitiesForm.value.FarmerName)\\n                  \\\"\\n                  class=\\\"danger\\\"\\n                >\\n                  Special characters not permitted\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"crop\\\">Crop <span class=\\\"danger\\\">*</span></label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"crop\\\"\\n                  ngModel\\n                  name=\\\"crop\\\"\\n                  formControlName=\\\"crop\\\"\\n                >\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option *ngFor=\\\"let item of Crops\\\" value=\\\"{{ item.id }}\\\">\\n                    {{ item.attributes.Name }}\\n                  </option>\\n                </select>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"ConditionOfCrop\\\">Condition of crop</label>\\n                <select\\n                  class=\\\"form-control\\\"\\n                  id=\\\"ConditionOfCrop\\\"\\n                  name=\\\"ConditionOfCrop\\\"\\n                  formControlName=\\\"ConditionOfCrop\\\"\\n                >\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option value=\\\"Good\\\">Good</option>\\n                  <option value=\\\"VeryGood\\\">Very Good</option>\\n                  <option value=\\\"Excellent\\\">Excellent</option>\\n                </select>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"PlannedFarmDay\\\">Planned farm day</label>\\n                <input\\n                  type=\\\"date\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"PlannedFarmDay\\\"\\n                  name=\\\"PlannedFarmDay\\\"\\n                  formControlName=\\\"PlannedFarmDay\\\"\\n                  placeholder=\\\"Enter Date\\\"\\n                />\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"Date\\\">Date <span class=\\\"danger\\\">*</span></label>\\n                <input\\n                  type=\\\"date\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"Date\\\"\\n                  name=\\\"Date\\\"\\n                  formControlName=\\\"Date\\\"\\n                  placeholder=\\\"Enter Date\\\"\\n                />\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"Time\\\">Time</label>\\n                <input\\n                  type=\\\"time\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"Time\\\"\\n                  name=\\\"Time\\\"\\n                  formControlName=\\\"Time\\\"\\n                  placeholder=\\\"Enter Time\\\"\\n                />\\n              </div>\\n            </div>\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"activitiesModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !activitiesForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Save changes\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n    <!-- /.modal-content -->\\n  </div>\\n  <!-- /.modal-dialog -->\\n</div>\\n<div\\n  bsModal\\n  #downloadActivitiesModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Download Activity</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"downloadActivitiesModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"downloadExcelForm\\\" (ngSubmit)=\\\"downloadActivities()\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"fromDate\\\">From<span class=\\\"danger\\\">*</span></label>\\n                <input\\n                  type=\\\"date\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"fromDate\\\"\\n                  required\\n                  ngModel\\n                  name=\\\"fromDate\\\"\\n                  formControlName=\\\"fromDate\\\"\\n                />\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"toDate\\\">From<span class=\\\"danger\\\">*</span></label>\\n                <input\\n                  type=\\\"date\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"toDate\\\"\\n                  required\\n                  ngModel\\n                  name=\\\"toDate\\\"\\n                  formControlName=\\\"toDate\\\"\\n                />\\n              </div>\\n            </div>\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"downloadActivitiesModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !downloadExcelForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Download\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div\\n  bsModal\\n  #uploadActivitiesModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Upload Activities</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"uploadActivitiesModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"uploadExcelForm\\\" (ngSubmit)=\\\"uploadActivities()\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"Image\\\">Excel file</label>\\n                <input\\n                  type=\\\"file\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"File\\\"\\n                  accept=\\\".xlsx\\\"\\n                  name=\\\"File\\\"\\n                  (change)=\\\"onChange($event)\\\"\\n                  formControlName=\\\"File\\\"\\n                  placeholder=\\\"Choose file\\\"\\n                />\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row template-download\\\">\\n            <a href=\\\"/assets/activities_template.xlsx\\\" download=\\\"activities_template.xlsx\\\" target=\\\"_blank\\\">Download Template</a>\\n          </div>\\n\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"uploadActivitiesModal.hide()\\\"\\n          >\\n            Close\\n          </button>\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary ml-2\\\"\\n            [disabled]=\\\"btnLoading || !uploadExcelForm.valid\\\"\\n          >\\n            <span\\n              *ngIf=\\\"btnLoading\\\"\\n              class=\\\"spinner-border spinner-border-sm\\\"\\n              role=\\\"status\\\"\\n              aria-hidden=\\\"true\\\"\\n            ></span>\\n            Upload\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { DataService } from \"../../data.service\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport {\n  dateConverter,\n  dateConverterMin,\n} from \"../../constants/columnMetadata\";\n\n@Component({\n  templateUrl: \"activity-detail.component.html\",\n})\nexport class ActivityDetailComponent implements OnInit {\n  constructor(\n    public dataservice: DataService,\n    private activatedRouter: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) {}\n  @ViewChild(\"editModal\") public editModal: ModalDirective;\n  @ViewChild(\"resultModal\") public resultModal: ModalDirective;\n  @ViewChild(\"deleteModal\") public deleteModal: ModalDirective;\n\n  id: any;\n  loading = true;\n  details: any = [];\n  btnLoading = false;\n  dateConverterMin = dateConverterMin;\n  dateConverter = dateConverter;\n  Areas: any = [];\n  States: any = [];\n  LGA: any = [];\n  Crops: any = [];\n  flag;\n  maplink;\n\n  activitiesForm = this.fb.group({\n    ActivityType: [\"\", Validators.required],\n    Latitude: [\"\"],\n    Longitude: [\"\"],\n    NoOfAttendees: [\"\"],\n    state:[\"\", Validators.required],\n    lga:[\"\", Validators.required],\n    area: [\"\", Validators.required],\n    crop: [\"\", Validators.required],\n    FarmerName: [\"\"],\n    PlannedFarmDay: [\"\"],\n    ConditionOfCrop: [\"\"],\n    Date: [\"\", Validators.required],\n    Time: [\"\"],\n    Reason: [\"\"],\n  });\n\n  ngOnInit(): void {\n    this.activatedRouter.params.subscribe((params) => {\n      this.id = params[\"id\"];\n    });\n    this.getActivity();\n    this.getStates();\n    this.getLGAs();\n    this.getAreas();\n    this.getCrops();\n  }\n  getActivity() {\n    this.dataservice\n      .getActivity(this.id)\n      .valueChanges.subscribe((result: any) => {\n        console.log(\"getActivity\", result?.data?.activity?.data);\n        this.details = result?.data?.activity?.data;\n        this.activitiesForm = this.fb.group({\n          ActivityType: [\n            this.details?.attributes?.ActivityType,\n            Validators.required,\n          ],\n          Latitude: [this.details?.attributes?.Latitude],\n          Longitude: [this.details?.attributes?.Longitude],\n          NoOfAttendees: [\n            this.details?.attributes?.NoOfAttendees,\n          ],\n          state:[this.details?.attributes?.area?.data?.attributes?.lga?.data?.attributes?.state?.data?.id, Validators.required],\n          lga:[this.details?.attributes?.area?.data?.attributes?.lga?.data?.id, Validators.required],\n          area: [this.details?.attributes?.area?.data?.id, Validators.required],\n          crop: [this.details?.attributes?.crop?.data?.id],\n          FarmerName: [this.details?.attributes?.FarmerName],\n          PlannedFarmDay: [this.details?.attributes?.PlannedFarmDay],\n          ConditionOfCrop: [this.details?.attributes?.ConditionOfCrop],\n          Date: [this.details?.attributes?.Date, Validators.required],\n          Time: [this.details?.attributes?.Time,],\n          Reason: [this.details?.attributes?.Reason],\n        });\n        this.maplink =\n          \"https://maps.google.com/?q=\" +\n          this.details?.attributes?.Latitude?.toString() +\n          \",\" +\n          this.details?.attributes?.Longitude?.toString();\n        this.loading = false;\n      });\n  }\n  getCrops() {\n    this.dataservice.getCrops(1,1000).valueChanges.subscribe((result: any) => {\n      console.log(\"getCrops\", result.data.crops.data);\n      this.Crops = result.data.crops.data;\n    });\n  }\n  getAreas(id?) {\n    this.dataservice.getAreas(1,10000,\"\",id).valueChanges.subscribe((result: any) => {\n      console.log(\"getAreas\", result.data.areas.data);\n      this.Areas = result.data.areas.data;\n    });\n  }\n  getStates() {\n    this.dataservice.getStates(1,10000).valueChanges.subscribe((result: any) => {\n      this.States = result.data.states.data;\n    });\n  }\n  getLGAs(id?) {\n    this.dataservice.getLGAs(1,10000,\"\",id).valueChanges.subscribe((result: any) => {\n      console.log(\"getLGAs\", result.data.lgas.data);\n      this.LGA = result.data.lgas.data;\n    });\n  }\n  filterArea(event) {\n    this.getAreas(event.target.value);\n  }\n\n  filterLGA(event) {\n    this.getLGAs(event.target.value);\n  }\n\n  returnActivityType(data) {\n    if(data) return data.replace(/([A-Z])/g, \" $1\").trim();\n  }\n  dateConvertor(date) {\n    return new Date(date);\n  }\n  openModal(data: any, flag) {\n    this.resultModal.show();\n    console.log(data, flag);\n    this.flag = flag;\n  }\n  FormSubmit() {\n    let resp = {};\n    console.log(this.activitiesForm.value);\n    this.btnLoading = true;\n    this.dataservice\n      .updateActivity(this.activitiesForm.value, this.id)\n      .subscribe((result: any) => {\n        resp = result.data;\n        console.log(\"response\", result);\n        if (result.data.updateActivity) {\n          this.toastr.success(\"Activity updated successfully!\");\n          this.btnLoading = false;\n          this.editModal.hide();\n          this.getActivity();\n        } else {\n          this.toastr.error(\"Failed. Please check the fields!\");\n          this.btnLoading = false;\n        }\n      });\n  }\n  deleteActivity() {\n    this.dataservice.deleteActivity(this.id).subscribe((result: any) => {\n      console.log(\"response\", result);\n      if (result.data.deleteActivity) {\n        this.toastr.success(\"Success!\");\n        this.deleteModal.hide();\n        this.router.navigate([\"/activities/all\"]);\n      } else {\n        this.toastr.error(\"Failed!\");\n      }\n    });\n  }\n}\n","import { Component, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { DataService } from \"../../data.service\";\nimport { ActivitiesColumn } from \"../../constants/columnMetadata\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\nimport { environment } from \"../../../environments/environment\";\n\n@Component({\n  templateUrl: \"activities.component.html\",\n})\nexport class ActivitiesComponent {\n  rowSelection: string;\n  constructor(\n    public dataservice: DataService,\n    public router: Router,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) {\n    this.columnDefs = [...ActivitiesColumn];\n    this.rowSelection = \"single\";\n  }\n  @ViewChild(\"activitiesModal\") public activitiesModal: ModalDirective;\n  @ViewChild(\"downloadActivitiesModal\")\n  public downloadActivitiesModal: ModalDirective;\n  @ViewChild(\"uploadActivitiesModal\")\n  public uploadActivitiesModal: ModalDirective;\n\n  loading = true;\n  btnLoading = false;\n  disableButton = true;\n  disableNextButton = false;\n  disablePrevButton = true;\n  count = 1;\n\n  columnDefs = [];\n  States: any = [];\n  LGA: any = [];\n  Areas: any = [];\n  Crops: any = [];\n  file: any = null;\n\n  activitiesForm = this.fb.group({\n    ActivityType: [\"\", Validators.required],\n    Latitude: [\"\"],\n    Longitude: [\"\"],\n    state: [\"\", Validators.required],\n    lga: [\"\", Validators.required],\n    NoOfAttendees: [\n      \"\",\n      [Validators.max(9999999), Validators.min(1)],\n    ],\n    area: [\"\", Validators.required],\n    crop: [\"\", Validators.required],\n    FarmerName: [\"\", Validators.pattern(\"[a-zA-Z ]*\")],\n    PlannedFarmDay: [\"\"],\n    ConditionOfCrop: [\"\"],\n    Date: [\"\", Validators.required],\n    Time: [\"\"],\n    Reason: [\"\"],\n  });\n  downloadExcelForm = this.fb.group({\n    fromDate: [\"\", Validators.required],\n    toDate: [\"\", Validators.required],\n  });\n  uploadExcelForm = this.fb.group({\n    File: [\"\", Validators.required],\n  });\n  rowData: any = [];\n  meta;\n  pageSize = 20;\n  from = 1;\n  to = 20;\n  private gridApi;\n  private gridColumnApi;\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.getActivities();\n    this.getCrops();\n    this.getAreas();\n    this.getStates();\n  }\n  checkSpecialCharacters(data) {\n    let format = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+/;\n    if (format.test(data)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  getLGAs(id?) {\n    this.dataservice.getLGAs(1,10000,\"\",id).valueChanges.subscribe((result: any) => {\n      console.log(\"getLGAs\", result.data.lgas.data);\n      this.LGA = result.data.lgas.data;\n    });\n  }\n\n  filterArea(event) {\n    this.getAreas(event.target.value);\n  }\n\n  filterLGA(event) {\n    this.getLGAs(event.target.value);\n  }\n\n\n  getActivities() {\n    console.log(\"jshdbfkjhsdfkjsdf\");\n    this.dataservice\n      .getActivities(1, this.pageSize)\n      .valueChanges.subscribe((result: any) => {\n        this.meta = result.data.activities.meta;\n        if (this.meta?.pagination?.pageCount <= 1) {\n          this.disablePrevButton = true;\n          this.disableNextButton = true;\n        }\n        if (this.meta?.pagination?.total < this.pageSize) {\n          this.to = this.meta?.pagination?.total;\n        }\n        this.rowData = result.data.activities.data;\n      });\n\n      this.dataservice.getStates().valueChanges.subscribe((result: any) => {\n        console.log(\"getStates\", result.data.states.data);\n        this.States = result.data.states.data;\n      });\n  }\n  loadNext() {\n    this.count++;\n    this.disablePrevButton = false;\n    this.from = this.from + this.pageSize;\n    this.to =\n      this.to + this.pageSize > this.meta?.pagination?.total\n        ? this.meta?.pagination?.total\n        : this.to + this.pageSize;\n    if (this.count === this.meta.pagination.pageCount) {\n      this.disableNextButton = true;\n    }\n    this.dataservice\n      .getActivities(this.count, this.pageSize)\n      .valueChanges.subscribe((result: any) => {\n        this.meta = result.data.activities.meta;\n        this.rowData = result.data.activities.data;\n      });\n  }\n  loadPrev() {\n    this.count--;\n    if (this.count < this.meta.pagination.pageCount) {\n      this.disableNextButton = false;\n    }\n    if (this.count === 1) {\n      this.disablePrevButton = true;\n    }\n    this.from = this.from - this.pageSize;\n    this.to = this.to - this.rowData.length;\n    this.dataservice\n      .getActivities(this.count, this.pageSize)\n      .valueChanges.subscribe((result: any) => {\n        this.meta = result.data.activities.meta;\n        this.rowData = result.data.activities.data;\n      });\n  }\n  getCrops() {\n    this.dataservice.getCrops().valueChanges.subscribe((result: any) => {\n      this.Crops = result.data.crops.data;\n    });\n  }\n  getStates() {\n    this.dataservice.getStates(1,10000).valueChanges.subscribe((result: any) => {\n      this.States = result.data.states.data;\n    });\n  }\n  getAreas(lgaid?) {\n    this.dataservice.getAreas(1,10000, \"\", lgaid).valueChanges.subscribe((result: any) => {\n      this.Areas = result.data.areas.data;\n    });\n  }\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.gridApi.sizeColumnsToFit();\n  }\n  onRowClicked(event: any) {\n    console.log(\"row\", event.data);\n  }\n  onChange(event: any) {\n    this.file = [];\n    for (var i = 0; i < event.target.files.length; i++) {\n      this.file.push(event.target.files[i]);\n    }\n    console.log(this.file);\n  }\n  onSelectionChanged(event: any) {\n    let selectedRows = this.gridApi.getSelectedRows();\n    this.router.navigate([\"/activities/activity_details\", selectedRows[0].id], {\n      state: { data: selectedRows },\n    });\n  }\n  openModal() {\n    this.activitiesModal.show();\n  }\n  activitiesSubmit() {\n    console.log(\"Values before submit\", this.activitiesForm.value);\n    let resp = {};\n    this.btnLoading = true;\n    this.dataservice\n      .createActivity(this.activitiesForm.value)\n      .subscribe((result: any) => {\n        resp = result.data;\n        if (result.data.createActivity) {\n          this.toastr.success(\"Success!\");\n          this.getActivities();\n          this.activitiesForm.reset();\n          this.btnLoading = false;\n          this.activitiesModal.hide();\n          this.gridApi.deselectAll();\n        } else {\n          this.toastr.error(\"Failed. Please check the fields!\");\n          this.btnLoading = false;\n        }\n      });\n  }\n  downloadActivities() {\n    console.log(this.downloadExcelForm.value);\n    let resp = {};\n    this.btnLoading = true;\n    this.dataservice\n      .downloadActivities(this.downloadExcelForm.value)\n      .subscribe((result: any) => {\n        resp = result.body;\n        console.log(result);\n        if (result.status === 200 && result.body.status == \"Success\") {\n          this.toastr.success(result.body.message);\n          this.btnLoading = false;\n          window.open(`${environment.apiUrl}${result?.body?.path}`, \"_blank\");\n        } else {\n          this.btnLoading = false;\n          this.toastr.error(result.body.message);\n        }\n      });\n  }\n  uploadActivities() {\n    let resp = {};\n    this.dataservice.uploadActivities(this.file).subscribe((response: any) => {\n      if (response.status == 200) {\n        console.log(response);\n        this.toastr.success(\"Success!\");\n        this.file = null;\n        this.getActivities();\n        this.uploadActivitiesModal.hide();\n      } else {\n        this.toastr.error(\"Failed!\");\n      }\n    });\n  }\n}\n","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div bsModal #deleteModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"editModalLabel\\\"\\n    aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered modal-sm\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-body text-center\\\">\\n          Do you want to delete this activity?\\n        </div>\\n        <div class=\\\"modal-footer justify-content-around\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"deleteModal.hide()\\\">\\n            No! Cancel.\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deleteActivity()\\\">\\n            Yes! Delete.\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\n      <h2>Activity Details</h2>\\n      <span>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" (click)=\\\"editModal.show()\\\">\\n          Edit\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\" (click)=\\\"deleteModal.show()\\\">\\n          Delete\\n        </button>\\n      </span>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n          <div class=\\\"row\\\">\\n            <table class=\\\"table table-striped\\\">\\n              <tbody>\\n                <tr>\\n                  <td>ID</td>\\n                  <td>{{ details?.id }}</td>\\n                </tr>\\n                <tr>\\n                  <td>Activity type</td>\\n                  <td>\\n                    {{ returnActivityType(details?.attributes?.ActivityType) }}\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Date</td>\\n                  <td>\\n                    {{ dateConverterMin(details?.attributes?.Date) }}\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Time</td>\\n                  <td>{{ details?.attributes?.Time }}</td>\\n                </tr>\\n                <tr>\\n                  <td>City</td>\\n                  <td>{{ details?.attributes?.area?.data?.attributes?.Name }}</td>\\n                </tr>\\n                <tr>\\n                  <td>LGA</td>\\n                  <td>{{ details?.attributes?.area?.data?.attributes?.lga?.data?.attributes?.Name }}</td>\\n                </tr>\\n                <tr>\\n                  <td>State</td>\\n                  <td>{{ details?.attributes?.area?.data?.attributes?.lga?.data?.attributes?.state?.data?.attributes?.Name }}</td>\\n                </tr>\\n                <tr>\\n                  <td>No. of Attendees</td>\\n                  <td>\\n                    {{\\n                    details?.attributes?.NoOfAttendees}}\\n                  </td>\\n                </tr>\\n\\n                <tr>\\n                  <td>Farmer Name</td>\\n                  <td>{{ details?.attributes?.FarmerName }}</td>\\n                </tr>\\n                <tr>\\n                  <td>Crop</td>\\n                  <td>\\n                    {{ details?.attributes?.crop?.data?.attributes?.Name }}\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Condition of crop</td>\\n                  <td>{{ details?.attributes?.ConditionOfCrop }}</td>\\n                </tr>\\n                <tr>\\n                  <td>Planned farm day</td>\\n                  <td>\\n                    {{\\n                    dateConverterMin(details?.attributes?.PlannedFarmDay)\\n                    }}\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Body</td>\\n                  <td>\\n                    {{details?.attributes?.Reason}}\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Created at</td>\\n                  <td>{{ dateConvertor(details?.attributes?.createdAt) }}</td>\\n                </tr>\\n                <tr>\\n                  <td>Last updated</td>\\n                  <td>{{ dateConvertor(details?.attributes?.updatedAt) }}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n        <div bsModal #editModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n          aria-labelledby=\\\"editModalLabel\\\" aria-hidden=\\\"true\\\">\\n          <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n              <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Edit details</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"editModal.hide()\\\" aria-label=\\\"Close\\\">\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n              </div>\\n              <div class=\\\"modal-body\\\">\\n                <form [formGroup]=\\\"activitiesForm\\\" (ngSubmit)=\\\"FormSubmit()\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"ActivityType\\\">Activity Type <span class=\\\"danger\\\">*</span></label>\\n                        <select\\n                          class=\\\"form-control\\\"\\n                          id=\\\"ActivityType\\\"\\n                          required\\n                          ngModel\\n                          name=\\\"ActivityType\\\"\\n                          formControlName=\\\"ActivityType\\\"\\n                        >\\n                          <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                          <option value=\\\"FarmDemo\\\">Farm Demo</option>\\n                          <option value=\\\"GroupFarmerTraining\\\">\\n                            Group Farmer Training\\n                          </option>\\n                          <option value=\\\"MegaFarmerTraining\\\">\\n                            Mega Farmer Training\\n                          </option>\\n                          <option value=\\\"FarmDay\\\">Farm Day</option>\\n                          <option value=\\\"RetailersTraining\\\">Retailers Training</option>\\n                        </select>\\n                      </div>\\n\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"state\\\">State <span class=\\\"danger\\\">*</span></label>\\n                        <select\\n                          class=\\\"form-control\\\"\\n                          id=\\\"state\\\"\\n                          required\\n                          ngModel\\n                          name=\\\"state\\\"\\n                          formControlName=\\\"state\\\"\\n                          (change)=\\\"filterLGA($event)\\\"\\n                        >\\n                          <option value=\\\"\\\" disabled selected hidden>\\n                            Choose...\\n                          </option>\\n                          <option *ngFor=\\\"let item of States\\\" value=\\\"{{ item.id }}\\\">\\n                            {{ item.attributes.Name }}\\n                          </option>\\n                        </select>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"lga\\\">LGA <span class=\\\"danger\\\">*</span></label>\\n                        <select\\n                          class=\\\"form-control\\\"\\n                          id=\\\"lga\\\"\\n                          required\\n                          ngModel\\n                          name=\\\"lga\\\"\\n                          formControlName=\\\"lga\\\"\\n                          (change)=\\\"filterArea($event)\\\"\\n                        >\\n                          <option value=\\\"\\\" disabled selected hidden>\\n                            Choose...\\n                          </option>\\n                          <option *ngFor=\\\"let item of LGA\\\" value=\\\"{{ item.id }}\\\">\\n                            {{ item.attributes.Name }}\\n                          </option>\\n                        </select>\\n                      </div>\\n\\n\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"area\\\">City <span class=\\\"danger\\\">*</span></label>\\n                        <select\\n                          class=\\\"form-control\\\"\\n                          id=\\\"area\\\"\\n                          required\\n                          ngModel\\n                          name=\\\"area\\\"\\n                          formControlName=\\\"area\\\"\\n                        >\\n                          <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                          <option *ngFor=\\\"let item of Areas\\\" value=\\\"{{ item.id }}\\\">\\n                            {{ item.attributes.Name }}\\n                          </option>\\n                        </select>\\n                      </div>\\n\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"NoOfAttendees\\\">Number of attendees</label>\\n                        <input\\n                          type=\\\"text\\\"\\n                          class=\\\"form-control\\\"\\n                          id=\\\"NoOfAttendees\\\"\\n                          name=\\\"NoOfAttendees\\\"\\n                          formControlName=\\\"NoOfAttendees\\\"\\n                          placeholder=\\\"Enter No. of attendees\\\"\\n                        />\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"Reason\\\">Body </label>\\n                        <textarea\\n                          class=\\\"form-control\\\"\\n                          id=\\\"Reason\\\"\\n                          rows=\\\"5\\\"\\n                          name=\\\"Reason\\\"\\n                          formControlName=\\\"Reason\\\"\\n                          placeholder=\\\"Enter body\\\"\\n                        ></textarea>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"FarmerName\\\">Farmer name</label>\\n                        <input\\n                          type=\\\"text\\\"\\n                          class=\\\"form-control\\\"\\n                          id=\\\"FarmerName\\\"\\n                          name=\\\"FarmerName\\\"\\n                          formControlName=\\\"FarmerName\\\"\\n                          placeholder=\\\"Enter name\\\"\\n                        />\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"crop\\\">Crop <span class=\\\"danger\\\">*</span></label>\\n                        <select\\n                          class=\\\"form-control\\\"\\n                          id=\\\"crop\\\"\\n                          ngModel\\n                          name=\\\"crop\\\"\\n                          formControlName=\\\"crop\\\"\\n                        >\\n                          <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                          <option *ngFor=\\\"let item of Crops\\\" value=\\\"{{ item.id }}\\\">\\n                            {{ item.attributes.Name }}\\n                          </option>\\n                        </select>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"ConditionOfCrop\\\">Condition of crop</label>\\n                        <input\\n                          type=\\\"text\\\"\\n                          class=\\\"form-control\\\"\\n                          id=\\\"ConditionOfCrop\\\"\\n                          name=\\\"ConditionOfCrop\\\"\\n                          formControlName=\\\"ConditionOfCrop\\\"\\n                          placeholder=\\\"Enter condition\\\"\\n                        />\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"PlannedFarmDay\\\">Planned farm day</label>\\n                        <input\\n                          type=\\\"date\\\"\\n                          class=\\\"form-control\\\"\\n                          id=\\\"PlannedFarmDay\\\"\\n                          name=\\\"PlannedFarmDay\\\"\\n                          formControlName=\\\"PlannedFarmDay\\\"\\n                          placeholder=\\\"Enter Date\\\"\\n                        />\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"Date\\\">Date <span class=\\\"danger\\\">*</span></label>\\n                        <input\\n                          type=\\\"date\\\"\\n                          class=\\\"form-control\\\"\\n                          id=\\\"Date\\\"\\n                          name=\\\"Date\\\"\\n                          formControlName=\\\"Date\\\"\\n                          placeholder=\\\"Enter Date\\\"\\n                        />\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"Time\\\">Time</label>\\n                        <input\\n                          type=\\\"time\\\"\\n                          class=\\\"form-control\\\"\\n                          id=\\\"Time\\\"\\n                          name=\\\"Time\\\"\\n                          formControlName=\\\"Time\\\"\\n                          placeholder=\\\"Enter Time\\\"\\n                        />\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn btn-secondary\\\"\\n                    (click)=\\\"editModal.hide()\\\"\\n                  >\\n                    Close\\n                  </button>\\n                  <button\\n                    type=\\\"submit\\\"\\n                    class=\\\"btn btn-primary ml-2\\\"\\n                    [disabled]=\\\"btnLoading || !activitiesForm.valid\\\"\\n                  >\\n                    <span\\n                      *ngIf=\\\"btnLoading\\\"\\n                      class=\\\"spinner-border spinner-border-sm\\\"\\n                      role=\\\"status\\\"\\n                      aria-hidden=\\\"true\\\"\\n                    ></span>\\n                    Save changes\\n                  </button>\\n                </form>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ActivitiesComponent } from './activities.component';\r\nimport { ActivityDetailComponent } from './activity-detail.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    \r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'cropprices'\r\n      },\r\n      {\r\n        path: 'all',\r\n        // canActivate: [AuthGuard],\r\n        component: ActivitiesComponent,\r\n        data: {\r\n          // roles: 'MANAGER',\r\n          title: 'Activities'\r\n        }\r\n      },\r\n      {\r\n        path: 'activity_details/:id',\r\n        // canActivate: [AuthGuard],\r\n        component: ActivityDetailComponent,\r\n        data: {\r\n          // roles: 'MANAGER',\r\n          title: 'Activity Details'\r\n        }\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ActivitiesRoutingModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { ActivitiesComponent } from './activities.component';\r\n\r\n// Dropdowns Component\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\n// Buttons Routing\r\nimport { ActivitiesRoutingModule } from './activities-routing.module';\r\n\r\n// Angular\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { ActivityDetailComponent } from './activity-detail.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TabsModule,\r\n    ReactiveFormsModule,\r\n    AgGridModule.withComponents([]),\r\n    ActivitiesRoutingModule,\r\n    BsDropdownModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    ActivitiesComponent,\r\n    ActivityDetailComponent\r\n  ]\r\n})\r\nexport class ActivitiesModule { }\r\n"]}